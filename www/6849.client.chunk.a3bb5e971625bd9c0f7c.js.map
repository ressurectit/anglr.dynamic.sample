{"version":3,"file":"6849.client.chunk.a3bb5e971625bd9c0f7c.js","mappings":"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","sources":["webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/stackPanel/extensions/stackPanelFlex.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/stackPanel/stackPanel.metadata.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/stackPanel/stackPanel.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/stackPanel/type.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/decorators/layoutEditorMetadata/layoutEditorMetadata.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/components/layoutComponentBase/layoutComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/extensions/componentStyling/componentStyling.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/src/misc/dynamicItemExtensionBase.js"],"sourcesContent":["import { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { isPresent } from '@jscrpt/common';\n/**\n * Child extension that applies flex styling to child\n */\n\nexport class StackPanelFlexExtension extends DynamicItemExtensionBase {\n  //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n  onInit() {\n    this._applyStyling();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onOptionsChange() {\n    this._applyStyling();\n  } //######################### protected methods #########################\n\n  /**\n   * Applies flex styling to element\n   */\n\n\n  _applyStyling() {\n    const options = this.options;\n\n    if (isPresent(options?.flex)) {\n      const style = this.element?.nativeElement.style;\n\n      if (style && this.options) {\n        style.flex = this.options.flex ?? '';\n      }\n    }\n  }\n\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Stack panel layout metadata loader\n */\nexport const StackPanelLayoutMetadataLoader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    return new (yield import('./metadata/stackPanel.layoutMetadata')).StackPanelLayoutEditorMetadata();\n  });\n\n  return function StackPanelLayoutMetadataLoader() {\n    return _ref.apply(this, arguments);\n  };\n}();","import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HostDisplayFlexStyle } from '@anglr/common';\nimport { LayoutComponentBase, LayoutComponentRendererSADirective } from '@anglr/dynamic/layout';\nimport { LayoutEditorMetadata } from '@anglr/dynamic/layout-editor';\nimport { StackPanelLayoutMetadataLoader } from './stackPanel.metadata';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n/**\n * Component used for displaying stack panel layout\n */\n\nfunction StackPanelSAComponent_ng_container_0_ng_template_1_Template(rf, ctx) {}\n\nfunction StackPanelSAComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, StackPanelSAComponent_ng_container_0_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"layoutComponentRenderer\", type_r1);\n  }\n}\n\nlet StackPanelSAComponent = class StackPanelSAComponent extends LayoutComponentBase {\n  //######################### protected methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n  onOptionsSet() {\n    this._setStyles();\n  } //######################### protected methods #########################\n\n  /**\n   * Sets styles for stack panel\n   */\n\n\n  _setStyles() {\n    const style = this.componentElement.nativeElement.style;\n    style.flexDirection = this.options?.horizontal ? 'row' : 'column';\n    style.flexWrap = this.options?.wrap ? 'wrap' : 'nowrap';\n  }\n\n};\n\nStackPanelSAComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵStackPanelSAComponent_BaseFactory;\n  return function StackPanelSAComponent_Factory(t) {\n    return (ɵStackPanelSAComponent_BaseFactory || (ɵStackPanelSAComponent_BaseFactory = i0.ɵɵgetInheritedFactory(StackPanelSAComponent)))(t || StackPanelSAComponent);\n  };\n}();\n\nStackPanelSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StackPanelSAComponent,\n  selectors: [[\"stack-panel\"]],\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"layoutComponentRenderer\"]],\n  template: function StackPanelSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, StackPanelSAComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.options == null ? null : ctx.options.children);\n    }\n  },\n  dependencies: [CommonModule, i1.NgForOf, LayoutComponentRendererSADirective],\n  styles: [\"[_nghost-%COMP%]{display: flex;}\"],\n  changeDetection: 0\n});\nStackPanelSAComponent = __decorate([LayoutEditorMetadata(StackPanelLayoutMetadataLoader)], StackPanelSAComponent);\nexport { StackPanelSAComponent };\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StackPanelSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'stack-panel',\n      standalone: true,\n      imports: [CommonModule, LayoutComponentRendererSADirective],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngFor=\\\"let type of options?.children\\\">\\n    <ng-template [layoutComponentRenderer]=\\\"type\\\"></ng-template>\\n</ng-container>\",\n      styles: [\":host{display: flex;}\"]\n    }]\n  }], null, null);\n})();","import { ComponentStylingExtension } from '@anglr/dynamic/layout';\nimport { StackPanelFlexExtension } from './extensions';\nimport { StackPanelSAComponent } from './stackPanel.component';\nexport default StackPanelSAComponent;\nexport const childExtensions = [StackPanelFlexExtension];\nexport const extensions = [ComponentStylingExtension];","import { DynamicClassMetadata } from '@anglr/dynamic';\n/**\n * Sets layout editor metadata to class on which is this decorator applied\n * @param metadataLoader - Layout editor metadata loader function used for obtaining metadata\n */\n\nexport function LayoutEditorMetadata(metadataLoader) {\n  return DynamicClassMetadata(metadataLoader, 'layoutEditorMetadata');\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Optional } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { isEmptyObject, nameof } from '@jscrpt/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Base component for layout component\n */\n\nexport class LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, componentElement, injector, logger) {\n    this.changeDetector = changeDetector;\n    this.componentElement = componentElement;\n    this.injector = injector;\n    this.logger = logger; //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n\n    this.extensions = [];\n    /**\n     * Indication whether initialization was already done\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether was component destroyed\n     */\n\n    this.destroyed = false;\n  } //######################### protected properties #########################\n\n  /**\n   * Gets element that is used within extension\n   */\n\n\n  get element() {\n    return this.componentElement;\n  }\n  /**\n   * Gets options that are used within extension\n   */\n\n\n  get extensionsOptions() {\n    return this.options;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n\n    for (const ext of this.extensions) {\n      ext.destroy();\n    }\n\n    this.onDestroy();\n  } //######################### public methods - implementation of LayoutComponent #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n\n      _this.initialized = true;\n      const extensionsOptions = _this.extensionsOptions;\n      yield _this.onInit();\n      yield _this.onOptionsSet();\n\n      if (extensionsOptions) {\n        for (const extension of _this.extensions) {\n          yield extension.initialize(_this.injector, _this.element, _this);\n        }\n      }\n\n      yield _this.afterInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnChanges(changes) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      //options has changed\n      if (nameof('options') in changes) {\n        yield _this2.onOptionsSet();\n        const extensionsOptions = _this2.extensionsOptions; //set options in extensions\n\n        if (extensionsOptions) {\n          for (const extension of _this2.extensions) {\n            yield extension.optionsChange(extensionsOptions);\n          }\n        }\n\n        if (!_this2.initialized) {\n          return;\n        }\n\n        yield _this2.onOptionsChange();\n      }\n\n      delete changes[nameof('options')];\n\n      if (!isEmptyObject(changes)) {\n        _this2.onChanges(changes);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  registerExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialzation of component, options are already set\n   */\n\n\n  onInit() {}\n  /**\n   * Called right after initialization finished, including extesions\n   */\n\n\n  afterInit() {}\n  /**\n   * Called on change of options, after initialization\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Occurs when some property changes on component\n   * @param _changes - Changes that occured on component\n   */\n\n\n  onChanges(_changes) {}\n  /**\n   * Called everytime options are set, after initialization and later\n   */\n\n\n  onOptionsSet() {}\n  /**\n   * Called when component is being destroyed\n   */\n\n\n  onDestroy() {}\n\n}\n\nLayoutComponentBase.ɵfac = function LayoutComponentBase_Factory(t) {\n  return new (t || LayoutComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nLayoutComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutComponentBase,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","import { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { isPresent } from '@jscrpt/common';\n/**\n * Extension that applies common component styling to component\n */\n\nexport class ComponentStylingExtension extends DynamicItemExtensionBase {\n  //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n  onInit() {\n    this._applyStyling();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onOptionsChange() {\n    this._applyStyling();\n  } //######################### protected methods #########################\n\n  /**\n   * Applies component styling to element\n   */\n\n\n  _applyStyling() {\n    const options = this.options;\n    const style = this.element?.nativeElement.style;\n\n    if (this.element) {\n      if (isPresent(this.lastCssClass)) {\n        for (const cssClass of this.lastCssClass.split(' ')) {\n          if (cssClass) {\n            this.element.nativeElement.classList.remove(cssClass);\n          }\n        }\n      }\n\n      this.lastCssClass = options?.cssClass;\n\n      if (options?.cssClass) {\n        for (const cssClass of options.cssClass.split(' ')) {\n          if (cssClass) {\n            this.element?.nativeElement.classList.add(cssClass);\n          }\n        }\n      }\n    }\n\n    if (isPresent(style)) {\n      if (options?.margin) {\n        if (isPresent(options.margin.bottom)) {\n          style.marginBottom = options.margin.bottom;\n        }\n\n        if (isPresent(options.margin.right)) {\n          style.marginRight = options.margin.right;\n        }\n\n        if (isPresent(options.margin.top)) {\n          style.marginTop = options.margin.top;\n        }\n\n        if (isPresent(options.margin.left)) {\n          style.marginLeft = options.margin.left;\n        }\n      }\n\n      if (options?.padding) {\n        if (isPresent(options.padding.bottom)) {\n          style.paddingBottom = options.padding.bottom;\n        }\n\n        if (isPresent(options.padding.right)) {\n          style.paddingRight = options.padding.right;\n        }\n\n        if (isPresent(options.padding.top)) {\n          style.paddingTop = options.padding.top;\n        }\n\n        if (isPresent(options.padding.left)) {\n          style.paddingLeft = options.padding.left;\n        }\n      }\n\n      if (options?.textStyling) {\n        if (isPresent(options.textStyling.fontSize)) {\n          style.fontSize = options.textStyling.fontSize;\n        }\n\n        if (isPresent(options.textStyling.fontWeight)) {\n          style.fontWeight = options.textStyling.fontWeight.toString();\n        }\n      }\n    }\n  }\n\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Dynamic item extension base class\n */\nexport class DynamicItemExtensionBase {\n  //######################### constructor #########################\n  constructor(metadata) {\n    this.metadata = metadata;\n    /**\n     * Indication whether was extension initialized\n     */\n\n    this.initialized = false;\n  } //######################### public methods - implementation of DynamicItemExtension #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  initialize(injector, element, instance) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.initialized = true;\n      _this.injector = injector;\n      _this.element = element;\n      _this.instance = instance;\n      yield _this.onInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  optionsChange(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.options = options;\n\n      if (!_this2.initialized) {\n        return;\n      }\n\n      yield _this2.onOptionsChange();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  destroy() {\n    this.onDestroy();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialization of component\n   */\n\n\n  onInit() {}\n  /**\n   * Called on change of options of component\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Called on destruction of component\n   */\n\n\n  onDestroy() {}\n\n}"],"names":["StackPanelFlexExtension","onInit","this","_applyStyling","onOptionsChange","options","flex","style","element","nativeElement","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","StackPanelLayoutMetadataLoader","fn","_ref","StackPanelLayoutEditorMetadata","self","args","arguments","apply","err","undefined","StackPanelSAComponent_ng_container_0_ng_template_1_Template","rf","ctx","StackPanelSAComponent_ng_container_0_Template","type_r1","$implicit","StackPanelSAComponent","onOptionsSet","_setStyles","componentElement","flexDirection","horizontal","flexWrap","wrap","t","type","selectors","standalone","features","decls","vars","consts","template","children","dependencies","styles","changeDetection","childExtensions","extensions","LayoutEditorMetadata","metadataLoader","_asyncToGenerator","LayoutComponentBase","constructor","changeDetector","injector","logger","initialized","destroyed","extensionsOptions","ngOnDestroy","ext","destroy","onDestroy","ngOnInit","_this","extension","initialize","afterInit","ngOnChanges","changes","_this2","optionsChange","onChanges","registerExtensions","invalidateVisuals","detectChanges","_changes","ComponentStylingExtension","lastCssClass","cssClass","split","classList","remove","add","margin","bottom","marginBottom","right","marginRight","top","marginTop","left","marginLeft","padding","paddingBottom","paddingRight","paddingTop","paddingLeft","textStyling","fontSize","fontWeight","toString","DynamicItemExtensionBase","metadata","instance"],"sourceRoot":""}