{"version":3,"file":"2340.client.chunk.4c63e75b69c23cbcb6eb.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../forms/src/modules/formPipes/pipes/asFormControl/asFormControl.pipe.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/components/formComponentBase/formComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/select/select.metadata.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/select/select.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/select/type.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/misc/tokens.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/decorators/layoutEditorMetadata/layoutEditorMetadata.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/components/layoutComponentBase/layoutComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/extensions/componentStyling/componentStyling.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations/src/decorators/dynamicOutput/dynamicOutput.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations/src/extensions/relationsRegistration/relationsRegistration.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/src/misc/dynamicItemExtensionBase.js"],"sourcesContent":["import {Inject, Optional, Pipe} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Tries to convert `AbstractControl` to `FormControl`\n */\n@Pipe({name: 'asFormControl'})\nexport class AsFormControlPipe\n{\n    //######################### constructors #########################\n    constructor(@Optional() @Inject(LOGGER) private _logger?: Logger)\n    {\n    }\n\n    //######################### public methods - implementation of PipeTransform #########################\n\n    /**\n     * Allows casting of `AbstractControl` to `FormControl`\n     * @param value - `AbstractControl` to be cast to `FormControl`\n     * @param _valueHash - Parameter that can be used to change value, indicates that pipe input value has changed\n     */\n    public transform<TModel>(value: AbstractControl<TModel>|null|undefined, _valueHash?: any): FormControl<TModel>|null\n    {\n        if(isBlank(value))\n        {\n            return null;\n        }\n\n        if(value instanceof FormControl)\n        {\n            return value as FormControl<TModel>;\n        }\n\n        this._logger?.warn('Failed to cast AbstractControl to FormControl');\n\n        return null;\n    }\n}","import { __decorate, __metadata } from \"tslib\";\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { LayoutComponentBase } from '@anglr/dynamic/layout';\nimport { LOGGER } from '@anglr/common';\nimport { DynamicOutput } from '@anglr/dynamic/relations';\nimport { FORM_COMPONENT_CONTROL } from '../../misc/tokens';\nimport { FormComponentControlType } from '../../misc/enums';\nimport { getControlForType, getFormControl } from '../../misc/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\n/**\n * Base component for form component\n */\n\nexport class FormComponentBase extends LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(_changeDetector, _element, _injector, _parentControl, _logger) {\n    super(_changeDetector, _element, _injector, _logger);\n    this._parentControl = _parentControl; //######################### protected properties #########################\n\n    /**\n     * Form component control\n     */\n\n    this.control = new FormControl();\n  } //######################### public properties - inputs #########################\n\n  /**\n   * Form component value\n   */\n\n\n  set value(value) {\n    const oldValue = this.value;\n    this.valueOutput = value;\n\n    if (value !== oldValue) {\n      this.control?.patchValue(value);\n    }\n  }\n\n  get value() {\n    return this.valueOutput;\n  }\n  /**\n   * Indication whether form component is required\n   */\n\n\n  set required(value) {\n    this._required = value;\n\n    if (value === true) {\n      this.control?.addValidators(Validators.required);\n      return;\n    }\n\n    this.control?.removeValidators(Validators.required);\n  }\n\n  get required() {\n    return this._required;\n  }\n  /**\n   * Indication whether form component is disabled\n   */\n\n\n  set disabled(value) {\n    this._disabled = value;\n\n    if (value === true) {\n      this.control?.disable();\n      return;\n    }\n\n    this.control?.enable();\n  }\n\n  get disabled() {\n    return this._disabled;\n  } //######################### protected methods - _onOptionsSet implementation #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  onOptionsSet() {\n    if (!this.options) {\n      return;\n    }\n\n    this.controlSubscription?.unsubscribe();\n    this.controlSubscription = null;\n    this.control = this._getFormControl(this.options?.controlName, this._parentControl, FormComponentControlType.FormControl, this.value);\n\n    this._registerValidations();\n\n    this.controlSubscription = this.control?.valueChanges?.subscribe(value => {\n      this.valueOutput = value;\n    });\n  } //######################### protected methods #########################\n\n  /**\n   * Registers component-specific validators\n   */\n\n\n  _registerValidations() {} //######################### private methods #########################\n\n  /**\n   * Gets form component control for control name\n   * @param controlName Form component control name\n   * @param parentControl Parent form control\n   * @param defaultControlType Default control type when parent does not exists or not contains control with specified name\n   * @param initValue Initial value for control\n   * @returns Specified type of control\n   */\n\n\n  _getFormControl(controlName, parentControl, defaultControlType = FormComponentControlType.FormControl, initValue) {\n    let control = getFormControl(controlName, parentControl, defaultControlType, initValue);\n\n    if (!control) {\n      this.logger?.warn('FormComponentBase: Unable to find control with name {@name}', {\n        name: controlName\n      });\n      control = getControlForType(defaultControlType, initValue);\n    }\n\n    if (this.required) {\n      control.addValidators(Validators.required);\n    }\n\n    if (this.disabled) {\n      control.disable();\n    }\n\n    return control;\n  }\n\n}\n\nFormComponentBase.ɵfac = function FormComponentBase_Factory(t) {\n  return new (t || FormComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(FORM_COMPONENT_CONTROL, 8), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nFormComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FormComponentBase,\n  inputs: {\n    value: \"value\",\n    required: \"required\",\n    disabled: \"disabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([DynamicOutput(), __metadata(\"design:type\", Object)], FormComponentBase.prototype, \"valueOutput\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: i1.AbstractControl,\n      decorators: [{\n        type: Inject,\n        args: [FORM_COMPONENT_CONTROL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    valueOutput: []\n  });\n})();","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Select layout metadata loader\n */\nexport const SelectLayoutMetadataLoader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    return new (yield import('./metadata/select.layoutMetadata')).SelectLayoutEditorMetadata();\n  });\n\n  return function SelectLayoutMetadataLoader() {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Select relations metadata loader\n */\n\nexport const SelectRelationsMetadataLoader = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    return new (yield import('./metadata/select.relationsMetadata')).SelectRelationsEditorMetadata();\n  });\n\n  return function SelectRelationsMetadataLoader() {\n    return _ref2.apply(this, arguments);\n  };\n}();","import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LayoutEditorMetadata } from '@anglr/dynamic/layout-editor';\nimport { CastPipesModule, HostDisplayBlockStyle } from '@anglr/common';\nimport { FormPipesModule } from '@anglr/common/forms';\nimport { FormComponentBase, FormComponentControlSAPipe } from '@anglr/dynamic/form';\nimport { RelationsEditorMetadata } from '@anglr/dynamic/relations-editor';\nimport { SelectLayoutMetadataLoader, SelectRelationsMetadataLoader } from './select.metadata';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@anglr/common/forms\";\nimport * as i2 from \"@anglr/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n/**\n * Component used for displaying text field\n */\n\nfunction SelectSAComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const value_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", value_r1 == null ? null : value_r1.code);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(value_r1 == null ? null : value_r1.value);\n  }\n}\n\nlet SelectSAComponent = class SelectSAComponent extends FormComponentBase {\n  constructor() {\n    super(...arguments); //######################### public properties #########################\n\n    this._values = [{\n      code: 'foo',\n      value: 'foo value'\n    }, {\n      code: 'bar',\n      value: 'bar value'\n    }];\n  } //######################### poublic properties - inputs and outputs #########################\n\n  /**\n   * Indication whether form component is disabled\n   */\n\n\n  set values(value) {\n    this._values = value;\n  }\n\n  get values() {\n    return this._values;\n  }\n\n};\n\nSelectSAComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵSelectSAComponent_BaseFactory;\n  return function SelectSAComponent_Factory(t) {\n    return (ɵSelectSAComponent_BaseFactory || (ɵSelectSAComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SelectSAComponent)))(t || SelectSAComponent);\n  };\n}();\n\nSelectSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SelectSAComponent,\n  selectors: [[\"form-select\"]],\n  inputs: {\n    values: \"values\"\n  },\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 6,\n  vars: 8,\n  consts: [[3, \"multiple\", \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function SelectSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"select\", 0);\n      i0.ɵɵpipe(3, \"asRequired\");\n      i0.ɵɵpipe(4, \"asFormControl\");\n      i0.ɵɵtemplate(5, SelectSAComponent_option_5_Template, 2, 2, \"option\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.options == null ? null : ctx.options.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"multiple\", ctx.options == null ? null : ctx.options.multiple)(\"formControl\", i0.ɵɵpipeBind1(3, 4, i0.ɵɵpipeBind1(4, 6, ctx.control)));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.values);\n    }\n  },\n  dependencies: [FormPipesModule, i1.AsFormControlPipe, CastPipesModule, i2.AsRequiredTypePipe, ReactiveFormsModule, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectMultipleControlValueAccessor, i3.NgControlStatus, i3.FormControlDirective, CommonModule, i4.NgForOf],\n  styles: [\"[_nghost-%COMP%]{display: block;}\"],\n  changeDetection: 0\n});\nSelectSAComponent = __decorate([RelationsEditorMetadata(SelectRelationsMetadataLoader), LayoutEditorMetadata(SelectLayoutMetadataLoader)], SelectSAComponent);\nexport { SelectSAComponent };\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'form-select',\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [FormPipesModule, CastPipesModule, FormComponentControlSAPipe, ReactiveFormsModule, CommonModule],\n      template: \"<label>{{options?.label}}</label>\\n<select [multiple]=\\\"options?.multiple\\\" [formControl]=\\\"control|asFormControl|asRequired\\\">\\n    <option *ngFor=\\\"let value of values\\\" [value]=\\\"value?.code\\\">{{value?.value}}</option>\\n</select>\",\n      styles: [\":host{display: block;}\"]\n    }]\n  }], null, {\n    values: [{\n      type: Input\n    }]\n  });\n})();","import { ComponentStylingExtension } from '@anglr/dynamic/layout';\nimport { RelationsRegistrationExtension } from '@anglr/dynamic/relations';\nimport { SelectSAComponent } from './select.component';\nexport default SelectSAComponent;\nexport const extensions = [ComponentStylingExtension, RelationsRegistrationExtension];","import { InjectionToken } from '@angular/core';\n/**\n * Injection token for form component control\n */\n\nexport const FORM_COMPONENT_CONTROL = new InjectionToken('FORM_COMPONENT_CONTROL');","import { DynamicClassMetadata } from '@anglr/dynamic';\n/**\n * Sets layout editor metadata to class on which is this decorator applied\n * @param metadataLoader - Layout editor metadata loader function used for obtaining metadata\n */\n\nexport function LayoutEditorMetadata(metadataLoader) {\n  return DynamicClassMetadata(metadataLoader, 'layoutEditorMetadata');\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Optional } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { isEmptyObject, nameof } from '@jscrpt/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Base component for layout component\n */\n\nexport class LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, componentElement, injector, logger) {\n    this.changeDetector = changeDetector;\n    this.componentElement = componentElement;\n    this.injector = injector;\n    this.logger = logger; //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n\n    this.extensions = [];\n    /**\n     * Indication whether initialization was already done\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether was component destroyed\n     */\n\n    this.destroyed = false;\n  } //######################### protected properties #########################\n\n  /**\n   * Gets element that is used within extension\n   */\n\n\n  get element() {\n    return this.componentElement;\n  }\n  /**\n   * Gets options that are used within extension\n   */\n\n\n  get extensionsOptions() {\n    return this.options;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n\n    for (const ext of this.extensions) {\n      ext.destroy();\n    }\n\n    this.onDestroy();\n  } //######################### public methods - implementation of LayoutComponent #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n\n      _this.initialized = true;\n      const extensionsOptions = _this.extensionsOptions;\n      yield _this.onInit();\n      yield _this.onOptionsSet();\n\n      if (extensionsOptions) {\n        for (const extension of _this.extensions) {\n          yield extension.initialize(_this.injector, _this.element, _this);\n        }\n      }\n\n      yield _this.afterInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnChanges(changes) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      //options has changed\n      if (nameof('options') in changes) {\n        yield _this2.onOptionsSet();\n        const extensionsOptions = _this2.extensionsOptions; //set options in extensions\n\n        if (extensionsOptions) {\n          for (const extension of _this2.extensions) {\n            yield extension.optionsChange(extensionsOptions);\n          }\n        }\n\n        if (!_this2.initialized) {\n          return;\n        }\n\n        yield _this2.onOptionsChange();\n      }\n\n      delete changes[nameof('options')];\n\n      if (!isEmptyObject(changes)) {\n        _this2.onChanges(changes);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  registerExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialzation of component, options are already set\n   */\n\n\n  onInit() {}\n  /**\n   * Called right after initialization finished, including extesions\n   */\n\n\n  afterInit() {}\n  /**\n   * Called on change of options, after initialization\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Occurs when some property changes on component\n   * @param _changes - Changes that occured on component\n   */\n\n\n  onChanges(_changes) {}\n  /**\n   * Called everytime options are set, after initialization and later\n   */\n\n\n  onOptionsSet() {}\n  /**\n   * Called when component is being destroyed\n   */\n\n\n  onDestroy() {}\n\n}\n\nLayoutComponentBase.ɵfac = function LayoutComponentBase_Factory(t) {\n  return new (t || LayoutComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nLayoutComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutComponentBase,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","import { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { isPresent } from '@jscrpt/common';\n/**\n * Extension that applies common component styling to component\n */\n\nexport class ComponentStylingExtension extends DynamicItemExtensionBase {\n  //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n  onInit() {\n    this._applyStyling();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onOptionsChange() {\n    this._applyStyling();\n  } //######################### protected methods #########################\n\n  /**\n   * Applies component styling to element\n   */\n\n\n  _applyStyling() {\n    const options = this.options;\n    const style = this.element?.nativeElement.style;\n\n    if (this.element) {\n      if (isPresent(this.lastCssClass)) {\n        for (const cssClass of this.lastCssClass.split(' ')) {\n          if (cssClass) {\n            this.element.nativeElement.classList.remove(cssClass);\n          }\n        }\n      }\n\n      this.lastCssClass = options?.cssClass;\n\n      if (options?.cssClass) {\n        for (const cssClass of options.cssClass.split(' ')) {\n          if (cssClass) {\n            this.element?.nativeElement.classList.add(cssClass);\n          }\n        }\n      }\n    }\n\n    if (isPresent(style)) {\n      if (options?.margin) {\n        if (isPresent(options.margin.bottom)) {\n          style.marginBottom = options.margin.bottom;\n        }\n\n        if (isPresent(options.margin.right)) {\n          style.marginRight = options.margin.right;\n        }\n\n        if (isPresent(options.margin.top)) {\n          style.marginTop = options.margin.top;\n        }\n\n        if (isPresent(options.margin.left)) {\n          style.marginLeft = options.margin.left;\n        }\n      }\n\n      if (options?.padding) {\n        if (isPresent(options.padding.bottom)) {\n          style.paddingBottom = options.padding.bottom;\n        }\n\n        if (isPresent(options.padding.right)) {\n          style.paddingRight = options.padding.right;\n        }\n\n        if (isPresent(options.padding.top)) {\n          style.paddingTop = options.padding.top;\n        }\n\n        if (isPresent(options.padding.left)) {\n          style.paddingLeft = options.padding.left;\n        }\n      }\n\n      if (options?.textStyling) {\n        if (isPresent(options.textStyling.fontSize)) {\n          style.fontSize = options.textStyling.fontSize;\n        }\n\n        if (isPresent(options.textStyling.fontWeight)) {\n          style.fontWeight = options.textStyling.fontWeight.toString();\n        }\n      }\n    }\n  }\n\n}","import { Subject } from 'rxjs';\n/**\n * Creates dynamic output for property\n */\n\nexport function DynamicOutput() {\n  return function (target, propertyKey) {\n    const prop = propertyKey;\n    Object.defineProperty(target, `${prop}Change`, {\n      get: function () {\n        if (!this[`ɵ${prop}Change`]) {\n          this[`ɵ${prop}Change`] = new Subject();\n        }\n\n        return this[`ɵ${prop}Change`];\n      }\n    });\n    Object.defineProperty(target, prop, {\n      get: function () {\n        return this[`ɵ${prop}`];\n      },\n      set: function (value) {\n        this[`ɵ${prop}`] = value;\n        this[`${prop}Change`].next();\n      }\n    });\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { RelationsComponentManager, RelationsProcessor } from '../../services';\n/**\n * Extension that allows registration of component for relations\n */\n\nexport class RelationsRegistrationExtension extends DynamicItemExtensionBase {\n  constructor() {\n    //######################### protected properties #########################\n    super(...arguments);\n    /**\n     * Instance of relations processor\n     */\n\n    this.relationsProcessor = null;\n    /**\n     * Instance of component manager\n     */\n\n    this.componentManager = null;\n  } //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  onInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.injector || !_this.metadata || !_this.instance) {\n        return;\n      }\n\n      _this.relationsProcessor ?? (_this.relationsProcessor = _this.injector.get(RelationsProcessor, null));\n      _this.componentManager ?? (_this.componentManager = _this.injector.get(RelationsComponentManager, null));\n\n      if (!_this.relationsProcessor || !_this.componentManager) {\n        return;\n      }\n\n      _this.componentManager.registerComponent(_this.metadata.id, _this.instance);\n\n      yield _this.relationsProcessor.initialized;\n\n      _this.relationsProcessor.updateRelations(_this.metadata.id);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onDestroy() {\n    if (!this.relationsProcessor || !this.componentManager || !this.metadata) {\n      return;\n    }\n\n    this.relationsProcessor.destroyComponent(this.metadata.id);\n    this.componentManager.unregisterComponent(this.metadata.id);\n  }\n\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Dynamic item extension base class\n */\nexport class DynamicItemExtensionBase {\n  //######################### constructor #########################\n  constructor(metadata) {\n    this.metadata = metadata;\n    /**\n     * Indication whether was extension initialized\n     */\n\n    this.initialized = false;\n  } //######################### public methods - implementation of DynamicItemExtension #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  initialize(injector, element, instance) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.initialized = true;\n      _this.injector = injector;\n      _this.element = element;\n      _this.instance = instance;\n      yield _this.onInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  optionsChange(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.options = options;\n\n      if (!_this2.initialized) {\n        return;\n      }\n\n      yield _this2.onOptionsChange();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  destroy() {\n    this.onDestroy();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialization of component\n   */\n\n\n  onInit() {}\n  /**\n   * Called on change of options of component\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Called on destruction of component\n   */\n\n\n  onDestroy() {}\n\n}"],"names":["AsFormControlPipe","constructor","_logger","transform","value","_valueHash","isBlank","FormControl","this","warn","LOGGER","FormComponentBase","_changeDetector","_element","_injector","_parentControl","super","control","oldValue","valueOutput","patchValue","required","_required","removeValidators","addValidators","disabled","_disabled","enable","disable","onOptionsSet","options","controlSubscription","unsubscribe","_getFormControl","controlName","_registerValidations","valueChanges","subscribe","parentControl","defaultControlType","initValue","logger","name","t","type","inputs","features","Object","prototype","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","SelectLayoutMetadataLoader","_ref","SelectLayoutEditorMetadata","SelectRelationsMetadataLoader","_ref2","SelectRelationsEditorMetadata","SelectSAComponent_option_5_Template","rf","ctx","value_r1","$implicit","code","SelectSAComponent","_values","values","selectors","standalone","decls","vars","consts","template","label","multiple","dependencies","i","styles","changeDetection","extensions","FORM_COMPONENT_CONTROL","LayoutEditorMetadata","metadataLoader","LayoutComponentBase","changeDetector","componentElement","injector","initialized","destroyed","element","extensionsOptions","ngOnDestroy","ext","destroy","onDestroy","ngOnInit","_this","onInit","extension","initialize","afterInit","ngOnChanges","changes","_this2","optionsChange","onOptionsChange","onChanges","registerExtensions","invalidateVisuals","detectChanges","_changes","ComponentStylingExtension","_applyStyling","style","nativeElement","lastCssClass","cssClass","split","classList","remove","add","margin","bottom","marginBottom","right","marginRight","top","marginTop","left","marginLeft","padding","paddingBottom","paddingRight","paddingTop","paddingLeft","textStyling","fontSize","fontWeight","toString","DynamicOutput","target","propertyKey","prop","defineProperty","get","set","next","RelationsRegistrationExtension","relationsProcessor","componentManager","metadata","instance","registerComponent","id","updateRelations","destroyComponent","unregisterComponent","DynamicItemExtensionBase"],"sourceRoot":""}