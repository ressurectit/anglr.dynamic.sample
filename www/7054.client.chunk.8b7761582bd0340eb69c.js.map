{"version":3,"file":"7054.client.chunk.8b7761582bd0340eb69c.js","mappings":"qfAyBM,MAAOA,UAAsCC,EAAAA,EAG/CC,YAAYC,EACAC,EACUC,GAElBC,MAAMH,EAAgBC,GAFJ,KAAAC,OAAAA,CAGrB,CAOeE,iBAAc,I,EAAA,c,EAAA,YAE1B,MAAMC,QAAeC,EAAAA,EAAAA,GAAc,EAAKJ,OAAOK,KAAgEC,EAAAA,EAC/G,CACIC,MAAO,mBACPC,MAAO,OACPC,OAAQ,OACRC,KAAM,EAAKC,UAAUC,kBAAkBC,SAAW,KACnDC,gBAEAC,EAAAA,EAAAA,IAAUZ,IAEN,EAAKQ,UAAUC,mBAEd,EAAKD,SAASC,iBAAiBC,QAAUV,EACzC,EAAKa,QAAQC,cAfK,E,gLAkB7B,E,iCAjCQtB,GAAAA,EAAAA,EAA6BuB,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,G,oBAA7BvB,E,6YCzBb,6B,KAEA,U,CAAA,W,KAEQ,W,KAGA,U,CAAA,U,CAAA,S,IAEa,iB,YACL,4B,gBAKZ,c,IAA8D,2BAAS,kBAAT,I,KAC1D,W,IAAM,c,sBAhBS,W,CAAA,mC,IAUe,G,IAAA,mC,CAAA,wB,CAAA,Y,gBDU9BwB,EAAAA,EACAC,EAAAA,G,oCEbF,MAAOC,EAoBTxB,cAbO,KAAAyB,SACP,CACIC,KAAM,mBACNC,YAAa,iCACbC,MAAO,SAMJ,KAAAC,eAAsC/B,EAKzCgC,OAAOC,OAAOC,KACjB,E","sources":["webpack://ng-universal-demo/../../../tinymce-components/src/dynamicItems/richTextSource/node/richTextSourceNode.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/tinymce-components/src/dynamicItems/richTextSource/node/richTextSourceNode.component.html","webpack://ng-universal-demo/../../../tinymce-components/src/dynamicItems/richTextSource/metadata/richTextSource.relationsMetadata.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {RelationsNode, RelationsNodeBase, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent} from '@anglr/dynamic/relations-editor';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {isPresent} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {RichTextSourceRelationsOptions} from '../richTextSource.options';\nimport {RichTextBlockEditorDialogSAComponent} from '../../richTextBlock/misc/components';\n\n/**\n * Relations node component for rich text source\n */\n@Component(\n{\n    selector: 'rich-text-source-node',\n    templateUrl: 'richTextSourceNode.component.html',\n    // styleUrls: ['richTextSourceNode.component.css'],\n    standalone: true,\n    imports:\n    [\n        RelationsNodeHeaderSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RichTextSourceNodeSAComponent extends RelationsNodeBase<RichTextSourceRelationsOptions> implements RelationsNode<RichTextSourceRelationsOptions>\n{\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows code editor\n     */\n    protected async showCodeEditor(): Promise<void>\n    {\n        const result = await lastValueFrom(this.dialog.open<RichTextBlockEditorDialogSAComponent, string, string|null>(RichTextBlockEditorDialogSAComponent,\n        {\n            title: 'Rich text editor',\n            width: '75vw',\n            height: '75vh',\n            data: this.metadata?.relationsOptions?.content ?? ''\n        }).afterClosed());\n\n        if(isPresent(result))\n        {\n            if(this.metadata?.relationsOptions)\n            {\n                this.metadata.relationsOptions.content = result;\n                this.history.getNewState();\n            }\n        }\n    }\n}",null,"import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {RichTextSourceNodeSAComponent} from '../node/richTextSourceNode.component';\n\n/**\n * Rich text source relations metadata\n */\nexport class RichTextSourceRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Rich text source',\n        description: 'Provides rich text source node',\n        group: 'Texts',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = RichTextSourceNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["RichTextSourceNodeSAComponent","RelationsNodeBase","constructor","changeDetector","element","dialog","super","showCodeEditor","result","lastValueFrom","open","RichTextBlockEditorDialogSAComponent","title","width","height","data","metadata","relationsOptions","content","afterClosed","isPresent","history","getNewState","i0","RelationsNodeHeaderSAComponent","RelationNodeOutputSAComponent","RichTextSourceRelationsEditorMetadata","metaInfo","name","description","group","nodeDefinition","Object","freeze","this"],"sourceRoot":""}