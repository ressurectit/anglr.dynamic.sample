{"version":3,"file":"6229.client.chunk.a865a03b800d060b1799.js","mappings":"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","sources":["webpack://ng-universal-demo/./node_modules/picocolors/picocolors.browser.js","webpack://ng-universal-demo/./node_modules/postcss-prefix-selector/index.js","webpack://ng-universal-demo/./node_modules/postcss/lib/at-rule.js","webpack://ng-universal-demo/./node_modules/postcss/lib/comment.js","webpack://ng-universal-demo/./node_modules/postcss/lib/container.js","webpack://ng-universal-demo/./node_modules/postcss/lib/css-syntax-error.js","webpack://ng-universal-demo/./node_modules/postcss/lib/declaration.js","webpack://ng-universal-demo/./node_modules/postcss/lib/document.js","webpack://ng-universal-demo/./node_modules/postcss/lib/fromJSON.js","webpack://ng-universal-demo/./node_modules/postcss/lib/input.js","webpack://ng-universal-demo/./node_modules/postcss/lib/lazy-result.js","webpack://ng-universal-demo/./node_modules/postcss/lib/list.js","webpack://ng-universal-demo/./node_modules/postcss/lib/map-generator.js","webpack://ng-universal-demo/./node_modules/postcss/lib/no-work-result.js","webpack://ng-universal-demo/./node_modules/postcss/lib/node.js","webpack://ng-universal-demo/./node_modules/postcss/lib/parse.js","webpack://ng-universal-demo/./node_modules/postcss/lib/parser.js","webpack://ng-universal-demo/./node_modules/postcss/lib/postcss.js","webpack://ng-universal-demo/./node_modules/postcss/lib/previous-map.js","webpack://ng-universal-demo/./node_modules/postcss/lib/processor.js","webpack://ng-universal-demo/./node_modules/postcss/lib/result.js","webpack://ng-universal-demo/./node_modules/postcss/lib/root.js","webpack://ng-universal-demo/./node_modules/postcss/lib/rule.js","webpack://ng-universal-demo/./node_modules/postcss/lib/stringifier.js","webpack://ng-universal-demo/./node_modules/postcss/lib/stringify.js","webpack://ng-universal-demo/./node_modules/postcss/lib/symbols.js","webpack://ng-universal-demo/./node_modules/postcss/lib/tokenize.js","webpack://ng-universal-demo/./node_modules/postcss/lib/warn-once.js","webpack://ng-universal-demo/./node_modules/postcss/lib/warning.js","webpack://ng-universal-demo/./node_modules/nanoid/non-secure/index.js","webpack://ng-universal-demo/./node_modules/postcss/lib/postcss.mjs","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/css-components/src/dynamicItems/styleBlock/styleBlock.metadata.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/css-components/src/dynamicItems/styleBlock/styleBlock.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/css-components/src/dynamicItems/styleBlock/type.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/decorators/layoutEditorMetadata/layoutEditorMetadata.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/components/layoutComponentBase/layoutComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/src/decorators/dynamicMetadata/dynamicClassMetadata.decorator.js"],"sourcesContent":["var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","module.exports = function postcssPrefixSelector(options) {\r\n  const prefix = options.prefix;\r\n  const prefixWithSpace = /\\s+$/.test(prefix) ? prefix : `${prefix} `;\r\n  const ignoreFiles = options.ignoreFiles ? [].concat(options.ignoreFiles) : [];\r\n  const includeFiles = options.includeFiles\r\n    ? [].concat(options.includeFiles)\r\n    : [];\r\n\r\n  return function (root) {\r\n    if (\r\n      ignoreFiles.length &&\r\n      root.source.input.file &&\r\n      isFileInArray(root.source.input.file, ignoreFiles)\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      includeFiles.length &&\r\n      root.source.input.file &&\r\n      !isFileInArray(root.source.input.file, includeFiles)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    root.walkRules((rule) => {\r\n      const keyframeRules = [\r\n        'keyframes',\r\n        '-webkit-keyframes',\r\n        '-moz-keyframes',\r\n        '-o-keyframes',\r\n      ];\r\n\r\n      if (rule.parent && keyframeRules.includes(rule.parent.name)) {\r\n        return;\r\n      }\r\n\r\n      rule.selectors = rule.selectors.map((selector) => {\r\n        if (options.exclude && excludeSelector(selector, options.exclude)) {\r\n          return selector;\r\n        }\r\n\r\n        if (options.transform) {\r\n          return options.transform(\r\n            prefix,\r\n            selector,\r\n            prefixWithSpace + selector,\r\n            root.source.input.file,\r\n            rule\r\n          );\r\n        }\r\n\r\n        return prefixWithSpace + selector;\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nfunction isFileInArray(file, arr) {\r\n  return arr.some((ruleOrString) => {\r\n    if (ruleOrString instanceof RegExp) {\r\n      return ruleOrString.test(file);\r\n    }\r\n\r\n    return file.includes(ruleOrString);\r\n  });\r\n}\r\n\r\nfunction excludeSelector(selector, excludeArr) {\r\n  return excludeArr.some((excludeRule) => {\r\n    if (excludeRule instanceof RegExp) {\r\n      return excludeRule.test(selector);\r\n    }\r\n\r\n    return selector === excludeRule;\r\n  });\r\n}\r\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  insertBefore(exist, add) {\n    exist = this.index(exist)\n\n    let type = exist === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    exist = this.index(exist)\n\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, red, gray } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof line.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let quote = false\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (quote) {\n        if (letter === quote) {\n          quote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        quote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            this.map.setSourceContent(\n              this.toUrl(this.path(from)),\n              node.source.input.css\n            )\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL) {\n        return pathToFileURL(node.source.input.from).toString()\n      } else {\n        throw new Error(\n          '`map.absolute` option is not available in this PostCSS build'\n        )\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get messages() {\n    return []\n  }\n\n  warnings() {\n    return []\n  }\n\n  toString() {\n    return this._css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { start, end } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { line: start.line, column: start.column },\n        { line: end.line, column: end.column },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    }\n    let end = this.source.end\n      ? {\n          line: this.source.end.line,\n          column: this.source.end.column + 1\n        }\n      : {\n          line: start.line,\n          column: start.column + 1\n        }\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(index + opts.word.length)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { line: start.line, column: start.column + 1 }\n    }\n\n    return { start, end }\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.14'\n    this.plugins = this.normalize(plugins)\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n","import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Style block layout metadata loader\n */\nexport const StyleBlockLayoutMetadataLoader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    return new (yield import('./metadata/styleBlock.layoutMetadata')).StyleBlockLayoutEditorMetadata();\n  });\n\n  return function StyleBlockLayoutMetadataLoader() {\n    return _ref.apply(this, arguments);\n  };\n}();","import { __decorate, __metadata } from \"tslib\";\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Injector, Inject, Optional } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { LayoutComponentBase, LayoutComponentRendererSADirective } from '@anglr/dynamic/layout';\nimport { LayoutEditorMetadata } from '@anglr/dynamic/layout-editor';\nimport { HostDisplayBlockStyle, LOGGER } from '@anglr/common';\nimport { generateId } from '@jscrpt/common';\nimport prefixer from 'postcss-prefix-selector';\nimport postcss from 'postcss';\nimport { StyleBlockLayoutMetadataLoader } from './styleBlock.metadata';\nimport * as i0 from \"@angular/core\"; //TODO: optimize, debug, dual call of options set\n\n/**\n * Component used for displaying style block\n */\n\nfunction StyleBlockSAComponent_ng_template_0_Template(rf, ctx) {}\n\nlet StyleBlockSAComponent = class StyleBlockSAComponent extends LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, element, injector, document, logger) {\n    super(changeDetector, element, injector, logger);\n    this.document = document; //######################### protected properties #########################\n\n    /**\n     * Unique ID for this instance of style block\n     */\n\n    this.id = generateId(10);\n  } //######################### protected methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  onInit() {\n    this.cssProcessor = postcss().use(root => {\n      prefixer({\n        prefix: `style-block#${this.id}`\n      })(root);\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onOptionsSet() {\n    if (this.options?.style && this.cssProcessor) {\n      const css = this.cssProcessor.process(this.options.style).css;\n      this.style = this.document.createElement('style');\n      this.style.innerText = css;\n      this.document.head.append(this.style);\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onDestroy() {\n    this.style?.remove();\n    this.style = null;\n  }\n\n};\n\nStyleBlockSAComponent.ɵfac = function StyleBlockSAComponent_Factory(t) {\n  return new (t || StyleBlockSAComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nStyleBlockSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StyleBlockSAComponent,\n  selectors: [[\"style-block\"]],\n  hostVars: 1,\n  hostBindings: function StyleBlockSAComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.id);\n    }\n  },\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"layoutComponentRenderer\"]],\n  template: function StyleBlockSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, StyleBlockSAComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"layoutComponentRenderer\", ctx.options == null ? null : ctx.options.content);\n    }\n  },\n  dependencies: [LayoutComponentRendererSADirective],\n  styles: [\"[_nghost-%COMP%]{display: block;}\"],\n  changeDetection: 0\n});\nStyleBlockSAComponent = __decorate([LayoutEditorMetadata(StyleBlockLayoutMetadataLoader), __metadata(\"design:paramtypes\", [ChangeDetectorRef, ElementRef, Injector, Document, Object])], StyleBlockSAComponent);\nexport { StyleBlockSAComponent };\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StyleBlockSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'style-block',\n      host: {\n        '[attr.id]': 'id'\n      },\n      standalone: true,\n      imports: [LayoutComponentRendererSADirective],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-template [layoutComponentRenderer]=\\\"options?.content\\\"></ng-template>\",\n      styles: [\":host{display: block;}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","import { StyleBlockSAComponent } from './styleBlock.component';\nexport default StyleBlockSAComponent;","import { DynamicClassMetadata } from '@anglr/dynamic';\n/**\n * Sets layout editor metadata to class on which is this decorator applied\n * @param metadataLoader - Layout editor metadata loader function used for obtaining metadata\n */\n\nexport function LayoutEditorMetadata(metadataLoader) {\n  return DynamicClassMetadata(metadataLoader, 'layoutEditorMetadata');\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Optional } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { isEmptyObject, nameof } from '@jscrpt/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Base component for layout component\n */\n\nexport class LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, componentElement, injector, logger) {\n    this.changeDetector = changeDetector;\n    this.componentElement = componentElement;\n    this.injector = injector;\n    this.logger = logger; //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n\n    this.extensions = [];\n    /**\n     * Indication whether initialization was already done\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether was component destroyed\n     */\n\n    this.destroyed = false;\n  } //######################### protected properties #########################\n\n  /**\n   * Gets element that is used within extension\n   */\n\n\n  get element() {\n    return this.componentElement;\n  }\n  /**\n   * Gets options that are used within extension\n   */\n\n\n  get extensionsOptions() {\n    return this.options;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n\n    for (const ext of this.extensions) {\n      ext.destroy();\n    }\n\n    this.onDestroy();\n  } //######################### public methods - implementation of LayoutComponent #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n\n      _this.initialized = true;\n      const extensionsOptions = _this.extensionsOptions;\n      yield _this.onInit();\n      yield _this.onOptionsSet();\n\n      if (extensionsOptions) {\n        for (const extension of _this.extensions) {\n          yield extension.initialize(_this.injector, _this.element, _this);\n        }\n      }\n\n      yield _this.afterInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnChanges(changes) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      //options has changed\n      if (nameof('options') in changes) {\n        yield _this2.onOptionsSet();\n        const extensionsOptions = _this2.extensionsOptions; //set options in extensions\n\n        if (extensionsOptions) {\n          for (const extension of _this2.extensions) {\n            yield extension.optionsChange(extensionsOptions);\n          }\n        }\n\n        if (!_this2.initialized) {\n          return;\n        }\n\n        yield _this2.onOptionsChange();\n      }\n\n      delete changes[nameof('options')];\n\n      if (!isEmptyObject(changes)) {\n        _this2.onChanges(changes);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  registerExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialzation of component, options are already set\n   */\n\n\n  onInit() {}\n  /**\n   * Called right after initialization finished, including extesions\n   */\n\n\n  afterInit() {}\n  /**\n   * Called on change of options, after initialization\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Occurs when some property changes on component\n   * @param _changes - Changes that occured on component\n   */\n\n\n  onChanges(_changes) {}\n  /**\n   * Called everytime options are set, after initialization and later\n   */\n\n\n  onOptionsSet() {}\n  /**\n   * Called when component is being destroyed\n   */\n\n\n  onDestroy() {}\n\n}\n\nLayoutComponentBase.ɵfac = function LayoutComponentBase_Factory(t) {\n  return new (t || LayoutComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nLayoutComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutComponentBase,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","//TODO: rework also with symbol\n\n/**\n * Sets dynamic metadata to class on which is this decorator applied\n * @param metadataLoader - Metadata loader function used for obtaining metadata\n * @param propertyName - Name of property where will be metadata instance stored\n */\nexport function DynamicClassMetadata(metadataLoader, propertyName) {\n  if (ngDesignerMetadata) {\n    return function (target) {\n      target[propertyName] = metadataLoader();\n      return target;\n    };\n  }\n\n  return function (target) {\n    return target;\n  };\n}"],"names":["x","String","create","isColorSupported","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","module","exports","createColors","isFileInArray","file","arr","some","ruleOrString","RegExp","test","includes","options","prefix","prefixWithSpace","ignoreFiles","concat","includeFiles","root","length","source","input","walkRules","rule","parent","name","selectors","map","selector","exclude","excludeArr","excludeRule","excludeSelector","transform","Container","require","AtRule","constructor","defaults","super","this","type","append","children","proxyOf","nodes","prepend","default","registerAtRule","Node","Comment","parse","Rule","isClean","my","Declaration","cleanSource","i","markDirtyUp","node","push","child","each","callback","index","result","iterator","getIterator","indexes","walk","e","addToError","walkDecls","prop","walkAtRules","walkComments","normalize","last","markDirty","reverse","first","unshift","id","cleanRaws","keepBetween","insertBefore","exist","add","splice","insertAfter","removeChild","undefined","removeAll","replaceValues","pattern","opts","decl","props","fast","value","replace","every","condition","indexOf","sample","Array","isArray","slice","Error","text","rebuild","raws","before","getProxyProcessor","set","get","startsWith","args","toProxy","cb","other","lastEach","registerParse","dependant","registerRule","Object","setPrototypeOf","prototype","forEach","pico","terminalHighlight","CssSyntaxError","message","line","column","plugin","reason","endLine","endColumn","setMessage","captureStackTrace","showSourceCode","color","css","mark","aside","lines","split","start","Math","max","end","min","maxWidth","str","number","gutter","spacing","join","toString","code","variable","LazyResult","Processor","Document","toResult","stringify","registerLazyResult","registerProcessor","PreviousMap","Input","Root","fromJSON","json","inputs","n","ownInputs","inputHydrated","__proto__","inputId","SourceMapConsumer","SourceMapGenerator","fileURLToPath","pathToFileURL","resolve","isAbsolute","nanoid","fromOffsetCache","Symbol","sourceMapAvailable","Boolean","pathAvailable","hasBOM","from","consumer","mapResolve","fromOffset","offset","lastLine","lineToIndex","prevIndex","l","mid","col","error","pos","origin","url","to","fromUrl","originalPositionFor","URL","sourceRoot","mapFile","protocol","sourceContentFor","toJSON","consumerCache","registerInput","MapGenerator","Result","TYPE_TO_CLASS_NAME","document","atrule","comment","PLUGIN_PROPS","postcssPlugin","prepare","Once","DeclarationExit","RuleExit","AtRuleExit","CommentExit","RootExit","DocumentExit","OnceExit","NOT_VISITORS","isPromise","obj","then","getEvents","key","toLowerCase","toStack","events","eventIndex","visitors","visitorIndex","cleanMarks","postcss","processor","stringified","processed","inline","prev","parser","syntax","helpers","plugins","toStringTag","content","sync","messages","warnings","onFulfilled","onRejected","async","catch","finally","onFinally","Promise","reject","processing","runAsync","getAsyncError","runOnRoot","prepareVisitors","hasListener","walkSync","listeners","subRoot","visitSync","stringifier","data","generate","event","visitor","promise","lastPlugin","handleError","roots","all","postcssVersion","err","console","stack","visitTick","version","filter","keys","visit","pop","registerPostcss","list","string","separators","array","current","func","quote","escape","letter","trim","space","comma","dirname","relative","sep","cssString","mapOpts","isMap","previous","previousMaps","isInline","annotation","isSourcesContent","sourcesContent","withContent","clearAnnotation","setSourcesContent","already","setSourceContent","toUrl","path","applyPrevMaps","applySourceMap","isAnnotation","toBase64","Buffer","window","btoa","unescape","encodeURIComponent","addAnnotation","outputFile","eol","generateMap","generateString","fromSourceMap","addMapping","generated","original","absolute","encodeURI","sourcePath","noSource","mapping","match","lastIndexOf","p","semicolon","NoWorkResult","_processor","_css","_opts","_map","self","defineProperty","generatedCSS","generatedMap","_root","Stringifier","cloneNode","cloned","hasOwnProperty","call","j","clone","rangeBy","warn","remove","assign","overrides","cloneBefore","cloneAfter","replaceWith","bookmark","foundSelf","next","after","raw","defaultType","between","_","fixed","emitInputs","Map","inputsNextIndex","positionInside","positionBy","word","endIndex","proxyCache","Proxy","postcssNode","s","Parser","tokenizer","SAFE_COMMENT_NEIGHBOR","empty","spaces","customProperty","createTokenizer","token","endOfFile","nextToken","freeSemicolon","emptyRule","endFile","init","getPosition","left","right","colon","bracket","brackets","tokens","back","unclosedBracket","unknownWord","spacesAndCommentsFromEnd","findLastWithPosition","shift","firstSpaces","precheckMissedSemicolon","important","stringFrom","spacesFromEnd","cache","checkMissedSemicolon","unnamedAtrule","open","params","afterName","spacesAndCommentsFromStart","unexpectedClose","unclosedBlock","ownSemicolon","clean","reduce","lastTokenType","element","entries","doubleColon","founded","Warning","initializer","warningPrinted","creator","process","env","LANG","transformer","processOpts","pluginOpts","atRule","existsSync","readFileSync","loadAnnotation","startWith","loadMap","substr","getAnnotationURL","sourceMapString","comments","substring","decodeInline","decodeURIComponent","lastMatch","atob","encoding","loadFile","JSON","prevPath","mappings","_mappings","sections","use","normalized","warning","ignore","values","DEFAULT_RAW","indent","beforeDecl","beforeRule","beforeOpen","beforeClose","beforeComment","emptyBody","commentLeft","commentRight","builder","body","rawValue","block","own","detect","rawCache","beforeAfter","method","toUpperCase","rawSemicolon","rawEmptyBody","rawIndent","parts","rawBeforeComment","rawBeforeDecl","rawBeforeRule","rawBeforeClose","rawBeforeOpen","rawColon","buf","depth","step","SINGLE_QUOTE","charCodeAt","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","escaped","escapePos","currentToken","valueOf","ignoreErrors","buffer","returned","unclosed","what","ignoreUnclosed","controlChar","fromCharCode","lastIndex","charAt","position","printed","range","opt","customAlphabet","alphabet","defaultSize","size","random","asyncGeneratorStep","gen","_next","_throw","arg","info","done","StyleBlockLayoutMetadataLoader","fn","_ref","StyleBlockLayoutEditorMetadata","arguments","apply","StyleBlockSAComponent_ng_template_0_Template","rf","ctx","StyleBlockSAComponent","changeDetector","injector","logger","onInit","cssProcessor","onOptionsSet","style","createElement","innerText","head","onDestroy","t","hostVars","hostBindings","standalone","features","decls","vars","consts","template","dependencies","styles","changeDetection","LayoutEditorMetadata","metadataLoader","_asyncToGenerator","LayoutComponentBase","componentElement","extensions","initialized","destroyed","extensionsOptions","ngOnDestroy","ext","destroy","ngOnInit","_this","extension","initialize","afterInit","ngOnChanges","changes","_this2","optionsChange","onOptionsChange","onChanges","registerExtensions","invalidateVisuals","detectChanges","_changes","DynamicClassMetadata","propertyName","target"],"sourceRoot":""}