{"version":3,"file":"1248.client.chunk.6ff41c95c8fd8e9c6a55.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/dynamicItems/submitButton/metadata/submitButton.model.ts","webpack://ng-universal-demo/./app/dynamicItems/submitButton/metadata/submitButton.layoutMetadata.ts","webpack://ng-universal-demo/../../../forms/src/modules/formPipes/pipes/asFormControl/asFormControl.pipe.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/modules/propertyTypeControls/directives/propertyTypeControlRenderer/propertyTypeControlRenderer.directive.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/modules/propertiesControls/components/genericPropertiesControl/genericPropertiesControl.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/modules/propertyTypeControls/modules/propertyTypeControls.module.js"],"sourcesContent":["import {DefaultKnownPropertyTypes, LayoutPropertyDescription, LayoutPropertyName, LayoutPropertyType} from '@anglr/dynamic/layout-editor';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {SubmitButtonComponentOptions} from '../submitButton.options';\n\n/**\n * Submit button model for properties editor\n */\nexport class SubmitButtonModel implements SubmitButtonComponentOptions\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Text')\n    @LayoutPropertyDescription('Text to be displayed in button')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public text: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Disabled')\n    @LayoutPropertyDescription('Indication whether is button disabled')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputBoolean')\n    public disabled: boolean|undefined|null = false;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Button css class')\n    @LayoutPropertyDescription('Css class applied to button element itself')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public buttonCssClass: string|undefined|null = null;\n    \n    //######################### constructor #########################\n    constructor(value: SubmitButtonComponentOptions|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","import {ComponentStylingModel, ComponentStylingPropertiesControlComponent, genericPropertiesControlFor, LayoutEditorMetadataDescriptor, LayoutEditorMetadataInfo} from '@anglr/dynamic/layout-editor';\n\nimport {SubmitButtonComponentOptions} from '../submitButton.options';\nimport {SubmitButtonModel} from './submitButton.model';\n\n/**\n * Submit button layout metadata\n */\nexport class SubmitButtonLayoutEditorMetadata implements LayoutEditorMetadataDescriptor<SubmitButtonComponentOptions>\n{\n    //######################### public properties - implementation of LayoutEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: LayoutEditorMetadataInfo<SubmitButtonComponentOptions> =\n    {\n        name: 'Submit button',\n        description: 'Form submit button',\n        group: 'Buttons',\n        optionsMetadata:\n        {\n            propertiesMetadata:\n            [\n                {\n                    modelType: ComponentStylingModel,\n                    propertiesControls: \n                    [\n                        ComponentStylingPropertiesControlComponent,\n                    ],\n                },\n                {\n                    modelType: SubmitButtonModel,\n                    propertiesControls: \n                    [\n                        genericPropertiesControlFor<SubmitButtonModel>(['buttonCssClass', 'text', 'disabled']),\n                    ],\n                },\n            ],\n        },\n        defaultOptions:\n        {\n            text: 'Submit',\n            disabled: false,\n            buttonCssClass: 'btn btn-primary',\n        }\n    };\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {Inject, Optional, Pipe} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Tries to convert `AbstractControl` to `FormControl`\n */\n@Pipe({name: 'asFormControl'})\nexport class AsFormControlPipe\n{\n    //######################### constructors #########################\n    constructor(@Optional() @Inject(LOGGER) private _logger?: Logger)\n    {\n    }\n\n    //######################### public methods - implementation of PipeTransform #########################\n\n    /**\n     * Allows casting of `AbstractControl` to `FormControl`\n     * @param value - `AbstractControl` to be cast to `FormControl`\n     * @param _valueHash - Parameter that can be used to change value, indicates that pipe input value has changed\n     */\n    public transform<TModel>(value: AbstractControl<TModel>|null|undefined, _valueHash?: any): FormControl<TModel>|null\n    {\n        if(isBlank(value))\n        {\n            return null;\n        }\n\n        if(value instanceof FormControl)\n        {\n            return value as FormControl<TModel>;\n        }\n\n        this._logger?.warn('Failed to cast AbstractControl to FormControl');\n\n        return null;\n    }\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { Directive, Inject, Input, Optional, ViewContainerRef } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { LAYOUT_EDITOR_PROPERTY_TYPE_CONTROLS } from '../../../../misc/tokens';\nimport * as i0 from \"@angular/core\";\n/**\n * Directive used for rendering property type control\n */\n\nexport class PropertyTypeControlRendererDirective {\n  //######################### constructor #########################\n  constructor(_viewContainerRef, _typeControls, _logger) {\n    this._viewContainerRef = _viewContainerRef;\n    this._typeControls = _typeControls;\n    this._logger = _logger; //######################### protected fields #########################\n\n    /**\n     * Created component reference\n     */\n\n    this._componentRef = null;\n    /**\n     * Array of available values\n     */\n\n    this.values = [];\n  } //######################### public methods - implementation of OnChanges #########################\n\n  /**\n   * Called when input value changes\n   */\n\n\n  ngOnChanges() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const typeName = _this.typeName ?? 'inputString';\n      _this._logger?.debug('PropertyTypeControlRendererDirective: rendering property type control {@type}', {\n        type: typeName\n      });\n\n      _this.ngOnDestroy();\n\n      _this._viewContainerRef.clear(); // metadata are present\n\n\n      if (_this.typeName) {\n        const injector = _this._viewContainerRef.injector;\n        const type = _this._typeControls[typeName];\n\n        if (!type) {\n          _this._logger?.error('PropertyTypeControlRendererDirective: unable to find property type control {@type}', {\n            type: typeName\n          });\n          throw new Error(`unable to find property type control ${typeName}`);\n        }\n\n        _this._componentRef = _this._viewContainerRef.createComponent(type, {\n          injector\n        });\n\n        if (_this._componentRef) {\n          const component = _this._componentRef.instance;\n          component.control = _this.control;\n          component.values = _this.values;\n          yield component.initialize();\n          component.invalidateVisuals();\n        }\n      }\n    })();\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this._componentRef) {\n      this._logger?.debug('PropertyTypeControlRendererDirective: destroying property type control {@type}', {\n        type: this.typeName ?? 'inputString'\n      });\n      this._componentRef?.destroy();\n      this._componentRef = null;\n    }\n  }\n\n}\n\nPropertyTypeControlRendererDirective.ɵfac = function PropertyTypeControlRendererDirective_Factory(t) {\n  return new (t || PropertyTypeControlRendererDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(LAYOUT_EDITOR_PROPERTY_TYPE_CONTROLS), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nPropertyTypeControlRendererDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PropertyTypeControlRendererDirective,\n  selectors: [[\"\", \"propertyTypeControl\", \"\"]],\n  inputs: {\n    control: \"control\",\n    typeName: [\"propertyTypeControl\", \"typeName\"],\n    values: \"values\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PropertyTypeControlRendererDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[propertyTypeControl]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_EDITOR_PROPERTY_TYPE_CONTROLS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    control: [{\n      type: Input\n    }],\n    typeName: [{\n      type: Input,\n      args: ['propertyTypeControl']\n    }],\n    values: [{\n      type: Input\n    }]\n  });\n})();","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from '@anglr/common';\nimport { FormPipesModule } from '@anglr/common/forms';\nimport { PropertiesControlBase } from '../propertiesControlBase';\nimport { PropertyTypeControlsModule } from '../../../propertyTypeControls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@anglr/common\";\nimport * as i3 from \"../../../propertyTypeControls/directives/propertyTypeControlRenderer/propertyTypeControlRenderer.directive\";\nimport * as i4 from \"@anglr/common/forms\";\n/**\n * Component used for displaying default generic properties control, displaying specified properties\n */\n\nfunction DefaultGenericPropertiesControlComponent_ng_container_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 5);\n  }\n\n  if (rf & 2) {\n    const property_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tooltip\", ctx_r2.propertiesMetadata == null ? null : ctx_r2.propertiesMetadata[property_r1] == null ? null : ctx_r2.propertiesMetadata[property_r1].description);\n  }\n}\n\nconst _c0 = function () {\n  return [];\n};\n\nfunction DefaultGenericPropertiesControlComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DefaultGenericPropertiesControlComponent_ng_container_0_span_4_Template, 1, 1, \"span\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainer(5, 4);\n    i0.ɵɵpipe(6, \"asFormControl\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const property_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_4_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", (tmp_0_0 = ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].name) !== null && tmp_0_0 !== undefined ? tmp_0_0 : property_r1, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"propertyTypeControl\", ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].type)(\"control\", i0.ɵɵpipeBind1(6, 5, ctx_r0.form == null ? null : ctx_r0.form.get(property_r1)))(\"values\", (tmp_4_0 = ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].values) !== null && tmp_4_0 !== undefined ? tmp_4_0 : i0.ɵɵpureFunction0(7, _c0));\n  }\n}\n\nfunction GenericPropertiesControl_ng_container_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 5);\n  }\n\n  if (rf & 2) {\n    const property_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tooltip\", ctx_r2.propertiesMetadata == null ? null : ctx_r2.propertiesMetadata[property_r1] == null ? null : ctx_r2.propertiesMetadata[property_r1].description);\n  }\n}\n\nfunction GenericPropertiesControl_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, GenericPropertiesControl_ng_container_0_span_4_Template, 1, 1, \"span\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainer(5, 4);\n    i0.ɵɵpipe(6, \"asFormControl\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const property_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_4_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", (tmp_0_0 = ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].name) !== null && tmp_0_0 !== undefined ? tmp_0_0 : property_r1, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"propertyTypeControl\", ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].type)(\"control\", i0.ɵɵpipeBind1(6, 5, ctx_r0.form == null ? null : ctx_r0.form.get(property_r1)))(\"values\", (tmp_4_0 = ctx_r0.propertiesMetadata == null ? null : ctx_r0.propertiesMetadata[property_r1] == null ? null : ctx_r0.propertiesMetadata[property_r1].values) !== null && tmp_4_0 !== undefined ? tmp_4_0 : i0.ɵɵpureFunction0(7, _c0));\n  }\n}\n\nexport class DefaultGenericPropertiesControlComponent extends PropertiesControlBase {\n  constructor() {\n    super(...arguments); //######################### public properties - inputs #########################\n\n    /**\n     * Array of properties that should be displayed by this component\n     */\n\n    this.properties = [];\n  }\n\n}\n\nDefaultGenericPropertiesControlComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGenericPropertiesControlComponent_BaseFactory;\n  return function DefaultGenericPropertiesControlComponent_Factory(t) {\n    return (ɵDefaultGenericPropertiesControlComponent_BaseFactory || (ɵDefaultGenericPropertiesControlComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGenericPropertiesControlComponent)))(t || DefaultGenericPropertiesControlComponent);\n  };\n}();\n\nDefaultGenericPropertiesControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DefaultGenericPropertiesControlComponent,\n  selectors: [[\"default-generic-properties-control\"]],\n  inputs: {\n    properties: \"properties\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"properties-form-group\"], [1, \"properties-control-label\"], [\"class\", \"fas fa-info-circle\", 3, \"tooltip\", 4, \"ngIf\"], [3, \"propertyTypeControl\", \"control\", \"values\"], [1, \"fas\", \"fa-info-circle\", 3, \"tooltip\"]],\n  template: function DefaultGenericPropertiesControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DefaultGenericPropertiesControlComponent_ng_container_0_Template, 7, 8, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.properties);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.TooltipDirective, i3.PropertyTypeControlRendererDirective, i4.AsFormControlPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGenericPropertiesControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'default-generic-properties-control',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngFor=\\\"let property of properties\\\">\\n    <!-- TODO pipe for control.control -->\\n    <div class=\\\"properties-form-group\\\">\\n        <label class=\\\"properties-control-label\\\">{{propertiesMetadata?.[property]?.name ?? property}} <span *ngIf=\\\"propertiesMetadata?.[property]?.description\\\" class=\\\"fas fa-info-circle\\\" [tooltip]=\\\"propertiesMetadata?.[property]?.description\\\"></span></label>\\n        <ng-container [propertyTypeControl]=\\\"propertiesMetadata?.[property]?.type\\\" [control]=\\\"$any(form?.get(property) | asFormControl)\\\" [values]=\\\"propertiesMetadata?.[property]?.values ?? []\\\"></ng-container>\\n    </div>\\n</ng-container>\"\n    }]\n  }], null, {\n    properties: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Gets generic properties control component for specific properties\n * @param properties - Array of properties which will be displayed in generic properties control\n */\n\n\nexport function genericPropertiesControlFor(properties) {\n  class GenericPropertiesControl extends DefaultGenericPropertiesControlComponent {\n    constructor() {\n      super(...arguments);\n      /**\n       * @inheritdoc\n       */\n\n      this.properties = properties;\n    }\n\n  }\n\n  GenericPropertiesControl.ɵfac = /* @__PURE__ */function () {\n    let ɵGenericPropertiesControl_BaseFactory;\n    return function GenericPropertiesControl_Factory(t) {\n      return (ɵGenericPropertiesControl_BaseFactory || (ɵGenericPropertiesControl_BaseFactory = i0.ɵɵgetInheritedFactory(GenericPropertiesControl)))(t || GenericPropertiesControl);\n    };\n  }();\n\n  GenericPropertiesControl.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: GenericPropertiesControl,\n    selectors: [[\"generic-properties-control\"]],\n    inputs: {\n      properties: \"properties\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"properties-form-group\"], [1, \"properties-control-label\"], [\"class\", \"fas fa-info-circle\", 3, \"tooltip\", 4, \"ngIf\"], [3, \"propertyTypeControl\", \"control\", \"values\"], [1, \"fas\", \"fa-info-circle\", 3, \"tooltip\"]],\n    template: function GenericPropertiesControl_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GenericPropertiesControl_ng_container_0_Template, 7, 8, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.properties);\n      }\n    },\n    dependencies: [CommonModule, i1.NgForOf, i1.NgIf, TooltipModule, i2.TooltipDirective, PropertyTypeControlsModule, i3.PropertyTypeControlRendererDirective, FormPipesModule, i4.AsFormControlPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GenericPropertiesControl, [{\n      type: Component,\n      args: [{\n        selector: 'generic-properties-control',\n        standalone: true,\n        imports: [CommonModule, TooltipModule, PropertyTypeControlsModule, FormPipesModule],\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        template: \"<ng-container *ngFor=\\\"let property of properties\\\">\\n    <!-- TODO pipe for control.control -->\\n    <div class=\\\"properties-form-group\\\">\\n        <label class=\\\"properties-control-label\\\">{{propertiesMetadata?.[property]?.name ?? property}} <span *ngIf=\\\"propertiesMetadata?.[property]?.description\\\" class=\\\"fas fa-info-circle\\\" [tooltip]=\\\"propertiesMetadata?.[property]?.description\\\"></span></label>\\n        <ng-container [propertyTypeControl]=\\\"propertiesMetadata?.[property]?.type\\\" [control]=\\\"$any(form?.get(property) | asFormControl)\\\" [values]=\\\"propertiesMetadata?.[property]?.values ?? []\\\"></ng-container>\\n    </div>\\n</ng-container>\"\n      }]\n    }], null, {\n      properties: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return GenericPropertiesControl;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CastPipesModule } from '@anglr/common';\nimport { NumberInputModule } from '@anglr/common/forms';\nimport { InputBooleanComponent, InputNumberComponent, InputSizeComponent, InputStringComponent, SelectValueComponent } from '../components';\nimport { PropertyTypeControlRendererDirective } from '../directives';\nimport * as i0 from \"@angular/core\";\n/**\n * Module containing built-in property type controls\n */\n\nexport class PropertyTypeControlsModule {}\n\nPropertyTypeControlsModule.ɵfac = function PropertyTypeControlsModule_Factory(t) {\n  return new (t || PropertyTypeControlsModule)();\n};\n\nPropertyTypeControlsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PropertyTypeControlsModule\n});\nPropertyTypeControlsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, ReactiveFormsModule, CastPipesModule, NumberInputModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PropertyTypeControlsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule, CastPipesModule, NumberInputModule],\n      declarations: [InputStringComponent, InputBooleanComponent, InputNumberComponent, InputSizeComponent, SelectValueComponent, PropertyTypeControlRendererDirective],\n      exports: [InputStringComponent, InputBooleanComponent, InputNumberComponent, InputSizeComponent, SelectValueComponent, PropertyTypeControlRendererDirective]\n    }]\n  }], null, null);\n})();"],"names":["SubmitButtonModel","constructor","value","text","disabled","buttonCssClass","mapValuesToThis","this","__decorate","LayoutPropertyName","LayoutPropertyDescription","LayoutPropertyType","SubmitButtonLayoutEditorMetadata","metaInfo","name","description","group","optionsMetadata","propertiesMetadata","modelType","ComponentStylingModel","propertiesControls","ComponentStylingPropertiesControlComponent","genericPropertiesControlFor","defaultOptions","Object","freeze","AsFormControlPipe","_logger","transform","_valueHash","isBlank","FormControl","warn","LOGGER","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","PropertyTypeControlRendererDirective","_viewContainerRef","_typeControls","_componentRef","values","ngOnChanges","fn","_this","typeName","debug","type","ngOnDestroy","clear","injector","Error","createComponent","component","instance","control","initialize","invalidateVisuals","self","args","arguments","apply","err","undefined","destroy","t","selectors","inputs","features","DefaultGenericPropertiesControlComponent_ng_container_0_span_4_Template","rf","ctx","property_r1","$implicit","ctx_r2","_c0","DefaultGenericPropertiesControlComponent_ng_container_0_Template","ctx_r0","tmp_0_0","tmp_4_0","form","get","GenericPropertiesControl_ng_container_0_span_4_Template","GenericPropertiesControl_ng_container_0_Template","DefaultGenericPropertiesControlComponent","super","properties","GenericPropertiesControl","standalone","decls","vars","consts","template","dependencies","i","encapsulation","changeDetection","PropertyTypeControlsModule","imports"],"sourceRoot":""}