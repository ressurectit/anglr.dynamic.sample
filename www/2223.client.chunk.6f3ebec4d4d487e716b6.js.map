{"version":3,"file":"2223.client.chunk.6f3ebec4d4d487e716b6.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../forms/src/modules/formPipes/pipes/asFormControl/asFormControl.pipe.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/components/formComponentBase/formComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/checkbox/checkbox.metadata.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/checkbox/checkbox.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/checkbox/type.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/misc/tokens.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/decorators/layoutEditorMetadata/layoutEditorMetadata.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/components/layoutComponentBase/layoutComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/extensions/componentStyling/componentStyling.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations/src/decorators/dynamicOutput/dynamicOutput.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations/src/extensions/relationsRegistration/relationsRegistration.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/src/misc/dynamicItemExtensionBase.js"],"sourcesContent":["import {Inject, Optional, Pipe} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Tries to convert `AbstractControl` to `FormControl`\n */\n@Pipe({name: 'asFormControl'})\nexport class AsFormControlPipe\n{\n    //######################### constructors #########################\n    constructor(@Optional() @Inject(LOGGER) private _logger?: Logger)\n    {\n    }\n\n    //######################### public methods - implementation of PipeTransform #########################\n\n    /**\n     * Allows casting of `AbstractControl` to `FormControl`\n     * @param value - `AbstractControl` to be cast to `FormControl`\n     * @param _valueHash - Parameter that can be used to change value, indicates that pipe input value has changed\n     */\n    public transform<TModel>(value: AbstractControl<TModel>|null|undefined, _valueHash?: any): FormControl<TModel>|null\n    {\n        if(isBlank(value))\n        {\n            return null;\n        }\n\n        if(value instanceof FormControl)\n        {\n            return value as FormControl<TModel>;\n        }\n\n        this._logger?.warn('Failed to cast AbstractControl to FormControl');\n\n        return null;\n    }\n}","import { __decorate, __metadata } from \"tslib\";\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { LayoutComponentBase } from '@anglr/dynamic/layout';\nimport { LOGGER } from '@anglr/common';\nimport { DynamicOutput } from '@anglr/dynamic/relations';\nimport { FORM_COMPONENT_CONTROL } from '../../misc/tokens';\nimport { FormComponentControlType } from '../../misc/enums';\nimport { getControlForType, getFormControl } from '../../misc/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\n/**\n * Base component for form component\n */\n\nexport class FormComponentBase extends LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(_changeDetector, _element, _injector, _parentControl, _logger) {\n    super(_changeDetector, _element, _injector, _logger);\n    this._parentControl = _parentControl; //######################### protected properties #########################\n\n    /**\n     * Form component control\n     */\n\n    this.control = new FormControl();\n  } //######################### public properties - inputs #########################\n\n  /**\n   * Form component value\n   */\n\n\n  set value(value) {\n    const oldValue = this.value;\n    this.valueOutput = value;\n\n    if (value !== oldValue) {\n      this.control?.patchValue(value);\n    }\n  }\n\n  get value() {\n    return this.valueOutput;\n  }\n  /**\n   * Indication whether form component is required\n   */\n\n\n  set required(value) {\n    this._required = value;\n\n    if (value === true) {\n      this.control?.addValidators(Validators.required);\n      return;\n    }\n\n    this.control?.removeValidators(Validators.required);\n  }\n\n  get required() {\n    return this._required;\n  }\n  /**\n   * Indication whether form component is disabled\n   */\n\n\n  set disabled(value) {\n    this._disabled = value;\n\n    if (value === true) {\n      this.control?.disable();\n      return;\n    }\n\n    this.control?.enable();\n  }\n\n  get disabled() {\n    return this._disabled;\n  } //######################### protected methods - _onOptionsSet implementation #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  onOptionsSet() {\n    if (!this.options) {\n      return;\n    }\n\n    this.controlSubscription?.unsubscribe();\n    this.controlSubscription = null;\n    this.control = this._getFormControl(this.options?.controlName, this._parentControl, FormComponentControlType.FormControl, this.value);\n\n    this._registerValidations();\n\n    this.controlSubscription = this.control?.valueChanges?.subscribe(value => {\n      this.valueOutput = value;\n    });\n  } //######################### protected methods #########################\n\n  /**\n   * Registers component-specific validators\n   */\n\n\n  _registerValidations() {} //######################### private methods #########################\n\n  /**\n   * Gets form component control for control name\n   * @param controlName Form component control name\n   * @param parentControl Parent form control\n   * @param defaultControlType Default control type when parent does not exists or not contains control with specified name\n   * @param initValue Initial value for control\n   * @returns Specified type of control\n   */\n\n\n  _getFormControl(controlName, parentControl, defaultControlType = FormComponentControlType.FormControl, initValue) {\n    let control = getFormControl(controlName, parentControl, defaultControlType, initValue);\n\n    if (!control) {\n      this.logger?.warn('FormComponentBase: Unable to find control with name {@name}', {\n        name: controlName\n      });\n      control = getControlForType(defaultControlType, initValue);\n    }\n\n    if (this.required) {\n      control.addValidators(Validators.required);\n    }\n\n    if (this.disabled) {\n      control.disable();\n    }\n\n    return control;\n  }\n\n}\n\nFormComponentBase.ɵfac = function FormComponentBase_Factory(t) {\n  return new (t || FormComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(FORM_COMPONENT_CONTROL, 8), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nFormComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FormComponentBase,\n  inputs: {\n    value: \"value\",\n    required: \"required\",\n    disabled: \"disabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([DynamicOutput(), __metadata(\"design:type\", Object)], FormComponentBase.prototype, \"valueOutput\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: i1.AbstractControl,\n      decorators: [{\n        type: Inject,\n        args: [FORM_COMPONENT_CONTROL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    valueOutput: []\n  });\n})();","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Checkbox layout metadata loader\n */\nexport const CheckboxLayoutMetadataLoader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    return new (yield import('./metadata/checkbox.layoutMetadata')).CheckboxLayoutEditorMetadata();\n  });\n\n  return function CheckboxLayoutMetadataLoader() {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Checkbox relations metadata loader\n */\n\nexport const CheckboxRelationsMetadataLoader = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    return new (yield import('./metadata/checkbox.relationsMetadata')).CheckboxRelationsEditorMetadata();\n  });\n\n  return function CheckboxRelationsMetadataLoader() {\n    return _ref2.apply(this, arguments);\n  };\n}();","import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LayoutEditorMetadata } from '@anglr/dynamic/layout-editor';\nimport { CastPipesModule, HostDisplayBlockStyle } from '@anglr/common';\nimport { FormPipesModule } from '@anglr/common/forms';\nimport { FormComponentBase, FormComponentControlSAPipe } from '@anglr/dynamic/form';\nimport { RelationsEditorMetadata } from '@anglr/dynamic/relations-editor';\nimport { CheckboxLayoutMetadataLoader, CheckboxRelationsMetadataLoader } from './checkbox.metadata';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@anglr/common/forms\";\nimport * as i2 from \"@anglr/common\";\nimport * as i3 from \"@angular/forms\";\n/**\n * Component used for displaying  checkbox\n */\n\nlet CheckboxSAComponent = class CheckboxSAComponent extends FormComponentBase {};\n\nCheckboxSAComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵCheckboxSAComponent_BaseFactory;\n  return function CheckboxSAComponent_Factory(t) {\n    return (ɵCheckboxSAComponent_BaseFactory || (ɵCheckboxSAComponent_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxSAComponent)))(t || CheckboxSAComponent);\n  };\n}();\n\nCheckboxSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CheckboxSAComponent,\n  selectors: [[\"form-checkbox\"]],\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 5,\n  vars: 6,\n  consts: [[\"type\", \"checkbox\", 3, \"formControl\"]],\n  template: function CheckboxSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵelement(1, \"input\", 0);\n      i0.ɵɵpipe(2, \"asRequired\");\n      i0.ɵɵpipe(3, \"asFormControl\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", i0.ɵɵpipeBind1(2, 2, i0.ɵɵpipeBind1(3, 4, ctx.control)));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.options == null ? null : ctx.options.label);\n    }\n  },\n  dependencies: [FormPipesModule, i1.AsFormControlPipe, CastPipesModule, i2.AsRequiredTypePipe, ReactiveFormsModule, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.FormControlDirective],\n  styles: [\"[_nghost-%COMP%]{display: block;}\"],\n  changeDetection: 0\n});\nCheckboxSAComponent = __decorate([RelationsEditorMetadata(CheckboxRelationsMetadataLoader), LayoutEditorMetadata(CheckboxLayoutMetadataLoader)], CheckboxSAComponent);\nexport { CheckboxSAComponent };\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'form-checkbox',\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [FormPipesModule, CastPipesModule, FormComponentControlSAPipe, ReactiveFormsModule],\n      template: \"<label><input type=\\\"checkbox\\\" [formControl]=\\\"control|asFormControl|asRequired\\\">{{options?.label}}</label>\",\n      styles: [\":host{display: block;}\"]\n    }]\n  }], null, null);\n})();","import { ComponentStylingExtension } from '@anglr/dynamic/layout';\nimport { RelationsRegistrationExtension } from '@anglr/dynamic/relations';\nimport { CheckboxSAComponent } from './checkbox.component';\nexport default CheckboxSAComponent;\nexport const extensions = [ComponentStylingExtension, RelationsRegistrationExtension];","import { InjectionToken } from '@angular/core';\n/**\n * Injection token for form component control\n */\n\nexport const FORM_COMPONENT_CONTROL = new InjectionToken('FORM_COMPONENT_CONTROL');","import { DynamicClassMetadata } from '@anglr/dynamic';\n/**\n * Sets layout editor metadata to class on which is this decorator applied\n * @param metadataLoader - Layout editor metadata loader function used for obtaining metadata\n */\n\nexport function LayoutEditorMetadata(metadataLoader) {\n  return DynamicClassMetadata(metadataLoader, 'layoutEditorMetadata');\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Optional } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { isEmptyObject, nameof } from '@jscrpt/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Base component for layout component\n */\n\nexport class LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, componentElement, injector, logger) {\n    this.changeDetector = changeDetector;\n    this.componentElement = componentElement;\n    this.injector = injector;\n    this.logger = logger; //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n\n    this.extensions = [];\n    /**\n     * Indication whether initialization was already done\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether was component destroyed\n     */\n\n    this.destroyed = false;\n  } //######################### protected properties #########################\n\n  /**\n   * Gets element that is used within extension\n   */\n\n\n  get element() {\n    return this.componentElement;\n  }\n  /**\n   * Gets options that are used within extension\n   */\n\n\n  get extensionsOptions() {\n    return this.options;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n\n    for (const ext of this.extensions) {\n      ext.destroy();\n    }\n\n    this.onDestroy();\n  } //######################### public methods - implementation of LayoutComponent #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n\n      _this.initialized = true;\n      const extensionsOptions = _this.extensionsOptions;\n      yield _this.onInit();\n      yield _this.onOptionsSet();\n\n      if (extensionsOptions) {\n        for (const extension of _this.extensions) {\n          yield extension.initialize(_this.injector, _this.element, _this);\n        }\n      }\n\n      yield _this.afterInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnChanges(changes) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      //options has changed\n      if (nameof('options') in changes) {\n        yield _this2.onOptionsSet();\n        const extensionsOptions = _this2.extensionsOptions; //set options in extensions\n\n        if (extensionsOptions) {\n          for (const extension of _this2.extensions) {\n            yield extension.optionsChange(extensionsOptions);\n          }\n        }\n\n        if (!_this2.initialized) {\n          return;\n        }\n\n        yield _this2.onOptionsChange();\n      }\n\n      delete changes[nameof('options')];\n\n      if (!isEmptyObject(changes)) {\n        _this2.onChanges(changes);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  registerExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialzation of component, options are already set\n   */\n\n\n  onInit() {}\n  /**\n   * Called right after initialization finished, including extesions\n   */\n\n\n  afterInit() {}\n  /**\n   * Called on change of options, after initialization\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Occurs when some property changes on component\n   * @param _changes - Changes that occured on component\n   */\n\n\n  onChanges(_changes) {}\n  /**\n   * Called everytime options are set, after initialization and later\n   */\n\n\n  onOptionsSet() {}\n  /**\n   * Called when component is being destroyed\n   */\n\n\n  onDestroy() {}\n\n}\n\nLayoutComponentBase.ɵfac = function LayoutComponentBase_Factory(t) {\n  return new (t || LayoutComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nLayoutComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutComponentBase,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","import { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { isPresent } from '@jscrpt/common';\n/**\n * Extension that applies common component styling to component\n */\n\nexport class ComponentStylingExtension extends DynamicItemExtensionBase {\n  //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n  onInit() {\n    this._applyStyling();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onOptionsChange() {\n    this._applyStyling();\n  } //######################### protected methods #########################\n\n  /**\n   * Applies component styling to element\n   */\n\n\n  _applyStyling() {\n    const options = this.options;\n    const style = this.element?.nativeElement.style;\n\n    if (this.element) {\n      if (isPresent(this.lastCssClass)) {\n        for (const cssClass of this.lastCssClass.split(' ')) {\n          if (cssClass) {\n            this.element.nativeElement.classList.remove(cssClass);\n          }\n        }\n      }\n\n      this.lastCssClass = options?.cssClass;\n\n      if (options?.cssClass) {\n        for (const cssClass of options.cssClass.split(' ')) {\n          if (cssClass) {\n            this.element?.nativeElement.classList.add(cssClass);\n          }\n        }\n      }\n    }\n\n    if (isPresent(style)) {\n      if (options?.margin) {\n        if (isPresent(options.margin.bottom)) {\n          style.marginBottom = options.margin.bottom;\n        }\n\n        if (isPresent(options.margin.right)) {\n          style.marginRight = options.margin.right;\n        }\n\n        if (isPresent(options.margin.top)) {\n          style.marginTop = options.margin.top;\n        }\n\n        if (isPresent(options.margin.left)) {\n          style.marginLeft = options.margin.left;\n        }\n      }\n\n      if (options?.padding) {\n        if (isPresent(options.padding.bottom)) {\n          style.paddingBottom = options.padding.bottom;\n        }\n\n        if (isPresent(options.padding.right)) {\n          style.paddingRight = options.padding.right;\n        }\n\n        if (isPresent(options.padding.top)) {\n          style.paddingTop = options.padding.top;\n        }\n\n        if (isPresent(options.padding.left)) {\n          style.paddingLeft = options.padding.left;\n        }\n      }\n\n      if (options?.textStyling) {\n        if (isPresent(options.textStyling.fontSize)) {\n          style.fontSize = options.textStyling.fontSize;\n        }\n\n        if (isPresent(options.textStyling.fontWeight)) {\n          style.fontWeight = options.textStyling.fontWeight.toString();\n        }\n      }\n    }\n  }\n\n}","import { Subject } from 'rxjs';\n/**\n * Creates dynamic output for property\n */\n\nexport function DynamicOutput() {\n  return function (target, propertyKey) {\n    const prop = propertyKey;\n    Object.defineProperty(target, `${prop}Change`, {\n      get: function () {\n        if (!this[`ɵ${prop}Change`]) {\n          this[`ɵ${prop}Change`] = new Subject();\n        }\n\n        return this[`ɵ${prop}Change`];\n      }\n    });\n    Object.defineProperty(target, prop, {\n      get: function () {\n        return this[`ɵ${prop}`];\n      },\n      set: function (value) {\n        this[`ɵ${prop}`] = value;\n        this[`${prop}Change`].next();\n      }\n    });\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { RelationsComponentManager, RelationsProcessor } from '../../services';\n/**\n * Extension that allows registration of component for relations\n */\n\nexport class RelationsRegistrationExtension extends DynamicItemExtensionBase {\n  constructor() {\n    //######################### protected properties #########################\n    super(...arguments);\n    /**\n     * Instance of relations processor\n     */\n\n    this.relationsProcessor = null;\n    /**\n     * Instance of component manager\n     */\n\n    this.componentManager = null;\n  } //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  onInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.injector || !_this.metadata || !_this.instance) {\n        return;\n      }\n\n      _this.relationsProcessor ?? (_this.relationsProcessor = _this.injector.get(RelationsProcessor, null));\n      _this.componentManager ?? (_this.componentManager = _this.injector.get(RelationsComponentManager, null));\n\n      if (!_this.relationsProcessor || !_this.componentManager) {\n        return;\n      }\n\n      _this.componentManager.registerComponent(_this.metadata.id, _this.instance);\n\n      yield _this.relationsProcessor.initialized;\n\n      _this.relationsProcessor.updateRelations(_this.metadata.id);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onDestroy() {\n    if (!this.relationsProcessor || !this.componentManager || !this.metadata) {\n      return;\n    }\n\n    this.relationsProcessor.destroyComponent(this.metadata.id);\n    this.componentManager.unregisterComponent(this.metadata.id);\n  }\n\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Dynamic item extension base class\n */\nexport class DynamicItemExtensionBase {\n  //######################### constructor #########################\n  constructor(metadata) {\n    this.metadata = metadata;\n    /**\n     * Indication whether was extension initialized\n     */\n\n    this.initialized = false;\n  } //######################### public methods - implementation of DynamicItemExtension #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  initialize(injector, element, instance) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.initialized = true;\n      _this.injector = injector;\n      _this.element = element;\n      _this.instance = instance;\n      yield _this.onInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  optionsChange(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.options = options;\n\n      if (!_this2.initialized) {\n        return;\n      }\n\n      yield _this2.onOptionsChange();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  destroy() {\n    this.onDestroy();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialization of component\n   */\n\n\n  onInit() {}\n  /**\n   * Called on change of options of component\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Called on destruction of component\n   */\n\n\n  onDestroy() {}\n\n}"],"names":["AsFormControlPipe","constructor","_logger","transform","value","_valueHash","isBlank","FormControl","this","warn","LOGGER","FormComponentBase","_changeDetector","_element","_injector","_parentControl","super","control","oldValue","valueOutput","patchValue","required","_required","removeValidators","addValidators","disabled","_disabled","enable","disable","onOptionsSet","options","controlSubscription","unsubscribe","_getFormControl","controlName","_registerValidations","valueChanges","subscribe","parentControl","defaultControlType","initValue","logger","name","t","type","inputs","features","Object","prototype","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","CheckboxLayoutMetadataLoader","_ref","CheckboxLayoutEditorMetadata","CheckboxRelationsMetadataLoader","_ref2","CheckboxRelationsEditorMetadata","CheckboxSAComponent","selectors","standalone","decls","vars","consts","template","rf","ctx","label","dependencies","i","styles","changeDetection","extensions","FORM_COMPONENT_CONTROL","LayoutEditorMetadata","metadataLoader","LayoutComponentBase","changeDetector","componentElement","injector","initialized","destroyed","element","extensionsOptions","ngOnDestroy","ext","destroy","onDestroy","ngOnInit","_this","onInit","extension","initialize","afterInit","ngOnChanges","changes","_this2","optionsChange","onOptionsChange","onChanges","registerExtensions","invalidateVisuals","detectChanges","_changes","ComponentStylingExtension","_applyStyling","style","nativeElement","lastCssClass","cssClass","split","classList","remove","add","margin","bottom","marginBottom","right","marginRight","top","marginTop","left","marginLeft","padding","paddingBottom","paddingRight","paddingTop","paddingLeft","textStyling","fontSize","fontWeight","toString","DynamicOutput","target","propertyKey","prop","defineProperty","get","set","next","RelationsRegistrationExtension","relationsProcessor","componentManager","metadata","instance","registerComponent","id","updateRelations","destroyComponent","unregisterComponent","DynamicItemExtensionBase"],"sourceRoot":""}