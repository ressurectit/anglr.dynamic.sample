{"version":3,"file":"3729.client.chunk.19ad06beaf67de061420.js","mappings":"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","sources":["webpack://ng-universal-demo/./node_modules/@anglr/common/src/modules/tooltip/components/tooltip/tooltip.component.html","webpack://ng-universal-demo/../../../src/modules/tooltip/components/tooltip/tooltip.component.ts","webpack://ng-universal-demo/../../../src/modules/tooltip/components/tooltip/tooltip.component.html","webpack://ng-universal-demo/../../../src/modules/tooltip/misc/tokens.ts","webpack://ng-universal-demo/../../../src/modules/tooltip/directives/tooltipTemplate/tooltipTemplate.directive.ts","webpack://ng-universal-demo/../../../src/modules/tooltip/directives/tooltip/tooltip.directive.ts","webpack://ng-universal-demo/../../../src/services/position/position.utils.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/components/relationsNodeBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/components/relationsNodeEndpointBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/components/relationsNodePropertiesEditor/relationsNodePropertiesEditor.model.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/components/relationsNodePropertiesEditor/relationsNodePropertiesEditor.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/pipes/toColor/toColor.pipe.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/components/relationsNodeHeader/relationsNodeHeader.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/components/relationsNodeInput/relationsNodeInput.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations-editor/src/components/relationsNodeOutput/relationsNodeOutput.component.js"],"sourcesContent":[null,"import {Component, ChangeDetectionStrategy, TemplateRef, ChangeDetectorRef, ElementRef, HostListener} from '@angular/core';\n\nimport {TooltipTemplateContext} from '../../directives';\nimport {TooltipRenderer} from '../../misc/tooltip.interface';\n\n/**\n * Component used for displaying tooltip content\n */\n@Component(\n{\n    selector: 'tooltip-popup',\n    templateUrl: 'tooltip.component.html',\n    styleUrls: ['tooltip.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TooltipComponent<TData = any> implements TooltipRenderer<TData>\n{\n    //######################### protected fields #########################\n\n    /**\n     * Called when mouse enter tooltip component, hover\n     */\n    protected _enterFn: () => void = () => null;\n\n    /**\n     * Called when mouse leaves tooltip component\n     */\n    protected _leaveFn: () => void = () => null;\n\n    //######################### public properties - implementation of TooltipRenderer #########################\n\n    /**\n     * Data that are rendered in tooltip\n     */\n    public data: TData|null|undefined;\n\n    /**\n     * Template used for rendering tooltip\n     */\n    public template: TemplateRef<TooltipTemplateContext<TData>>|null|undefined;\n\n    /**\n     * Indication whether are html tags allowed in tooltip text\n     */\n    public allowHtml: boolean = false;\n\n    /**\n     * Css class that is applied to tooltip renderer component\n     */\n    public cssClass: string|null|undefined;\n\n    //######################### constructor #########################\n    constructor(protected _changeDetector: ChangeDetectorRef,\n                protected _element: ElementRef<HTMLElement>)\n    {\n    }\n\n    //######################### public methods - implementation of TooltipRenderer #########################\n\n    /**\n     * Registers handlers that allows reaction to entering or leaving tooltip\n     * @param enter - Called when mouse enter tooltip component, hover\n     * @param leave - Called when mouse leaves tooltip component\n     */\n    public registerHoverEvents(enter: () => void, leave: () => void): void\n    {\n        this._enterFn = enter;\n        this._leaveFn = leave;\n    }\n\n    /**\n     * Explicitly runs invalidation of content (change detection)\n     */\n    public invalidateVisuals(): void\n    {\n        if(this.cssClass)\n        {\n            this._element.nativeElement.classList.add(this.cssClass);\n        }\n\n        this._changeDetector.detectChanges();\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Handles mouse enter event over tooltip\n     * @internal\n     */\n    @HostListener('mouseenter')\n    public mouseEnter(): void\n    {\n        this._enterFn();\n    }\n\n    /**\n     * Handles mouse leave event over tooltip\n     * @internal\n     */\n    @HostListener('mouseleave')\n    public mouseLeave(): void\n    {\n        this._leaveFn();\n    }\n}","<div *ngIf=\"!template && !allowHtml\">{{data}}</div>\r\n<div *ngIf=\"!template && allowHtml\" [innerHTML]=\"data\"></div>\r\n\r\n<ng-template [ngIf]=\"template\">\r\n    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: data}\"></ng-container>\r\n</ng-template>","import {InjectionToken} from '@angular/core';\n\nimport {TooltipOptions} from './tooltip.interface';\n\n/**\n * Injection token used for injecting tooltip options\n */\nexport const TOOLTIP_OPTIONS: InjectionToken<Partial<TooltipOptions>> = new InjectionToken<Partial<TooltipOptions>>('TOOLTIP_OPTIONS');\n","import {Directive, TemplateRef} from '@angular/core';\n\nimport {TooltipTemplateContext} from './tooltipTemplate.context';\n\n/**\n * Directive used for obtaining custom tooltip template\n */\n@Directive(\n{\n    selector: '[tooltipTemplate]'\n})\nexport class TooltipTemplateDirective<TData = any>\n{\n    //######################### constructor #########################\n    constructor(public template: TemplateRef<TooltipTemplateContext<TData>>)\n    {\n    }\n\n    //######################### ng language server #########################\n    \n    /**\n     * Allows typechecking for template\n     */\n    static ngTemplateContextGuard(_dir: TooltipTemplateDirective, _ctx: unknown): _ctx is TooltipTemplateContext\n    {\n        return true;\n    }\n}","import {ComponentRef, ContentChild, Directive, ElementRef, EmbeddedViewRef, HostListener, Inject, Injector, Input, OnChanges, OnDestroy, Optional, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {AnimationBuilder, AnimationFactory} from '@angular/animations';\nimport {DOCUMENT} from '@angular/common';\nimport {fadeInAnimation, fadeOutAnimation} from '@anglr/animations';\nimport {extend, isBlank, isPresent, nameof} from '@jscrpt/common';\n\nimport {TooltipComponent} from '../../components/tooltip/tooltip.component';\nimport {TooltipOptions, TooltipRenderer} from '../../misc/tooltip.interface';\nimport {TOOLTIP_OPTIONS} from '../../misc/tokens';\nimport {applyPositionResult, Position, PositionOffset, PositionPlacement} from '../../../../services/position';\nimport {TooltipTemplateDirective} from '../tooltipTemplate/tooltipTemplate.directive';\nimport {TooltipTemplateContext} from '../tooltipTemplate/tooltipTemplate.context';\nimport {POSITION} from '../../../../types/tokens';\n\n/**\n * Default options for tooltip\n */\nconst defaultOptions: TooltipOptions =\n{\n    delay: 200,\n    position:\n    {\n        offset: PositionOffset.MouseEnter,\n        placement: PositionPlacement.TopStart\n    },\n    allowSelection: false,\n    tooltipRenderer: TooltipComponent,\n    tooltipCssClass: null,\n    stopPropagation: false,\n    enterAnimation: fadeInAnimation,\n    exitAnimation: fadeOutAnimation,\n};\n\n/**\n * Directive used for rendering tooltip\n */\n@Directive(\n{\n    selector: '[tooltip]'\n})\nexport class TooltipDirective<TData = any> implements OnChanges, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Instance of component used for rendering tooltip\n     */\n    protected _tooltipComponent?: ComponentRef<TooltipRenderer<TData>>;\n\n    /**\n     * Instance of HTML element for tooltip renderer\n     */\n    protected _tooltipElement?: HTMLElement;\n\n    /**\n     * Animation factory used for enter animation of tooltip\n     */\n    protected _enterAnimation: AnimationFactory;\n\n    /**\n     * Animation factory used for exit animation of tooltip\n     */\n    protected _exitAnimation: AnimationFactory;\n\n    /**\n     * Instance of options provided for this tooltip\n     */\n    protected _options: TooltipOptions;\n\n    /**\n     * Indication whether there is active show tooltip request\n     */\n    protected _showRequest: boolean = false;\n\n    /**\n     * Indication whether keep open tooltip component\n     */\n    protected _keepOpen: boolean = false;\n\n    /**\n     * Timeout that is used for handling mouse move\n     */\n    protected _timeout: number|null = null;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Tooltip text that is displayed, or any data that could be passed to template\n     */\n    @Input()\n    public tooltip?: TData;\n\n    /**\n     * Indication whether are html tags allowed in tooltip text\n     */\n    @Input()\n    public allowHtml: boolean = false;\n\n    /**\n     * Instance of tooltip template that is used for rendering\n     */\n    @Input()\n    public template?: TemplateRef<TooltipTemplateContext<TData>>;\n\n    /**\n     * Options used for displaying tooltip\n     */\n    @Input()\n    public get tooltipOptions(): Partial<TooltipOptions>\n    {\n        return this._options;\n    }\n    public set tooltipOptions(value: Partial<TooltipOptions>)\n    {\n        this._options = extend(true, {}, this._options, value);\n\n        this._enterAnimation = this._animationsPlayer.build(this._options.enterAnimation);\n        this._exitAnimation = this._animationsPlayer.build(this._options.exitAnimation);\n    }\n\n    /**\n     * Gets or sets indication whether is tooltip visible, if has boolean value, mouse events cant override this\n     */\n    @Input()\n    public tooltipVisible?: boolean;\n\n    //######################### public properties - children #########################\n\n    /**\n     * Instance of template from element content, used for rendering\n     */\n    @ContentChild(TooltipTemplateDirective)\n    public tooltipTemplateChild?: TooltipTemplateDirective;\n\n    //######################### constructor #########################\n    constructor(protected _viewContainerRef: ViewContainerRef,\n                protected _injector: Injector,\n                protected _element: ElementRef<HTMLElement>,\n                protected _animationsPlayer: AnimationBuilder,\n                @Inject(DOCUMENT) protected _document: Document,\n                @Inject(POSITION) protected _position: Position,\n                @Optional() @Inject(TOOLTIP_OPTIONS) options?: Partial<TooltipOptions>,)\n    {\n        this._options = extend(true, {}, defaultOptions, options);\n\n        this._enterAnimation = this._animationsPlayer.build(this._options.enterAnimation);\n        this._exitAnimation = this._animationsPlayer.build(this._options.exitAnimation);\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n\n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<TooltipDirective>('tooltipVisible') in changes)\n        {\n            if(this.tooltipVisible)\n            {\n                this._showTooltip();\n            }\n            else\n            {\n                this._hideTooltip();\n            }\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this._timeout)\n        {\n            clearTimeout(this._timeout);\n        }\n\n        this._destroyTooltip();\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Handles mouse leave event, hover ends\n     * @param event - Mouse event that occured\n     * @internal\n     */\n    @HostListener('mouseleave', ['$event'])\n    public mouseLeave(event: MouseEvent): void\n    {\n        if(this._options.stopPropagation)\n        {\n            event.stopPropagation();\n        }\n\n        if(isBlank(this.tooltipVisible))\n        {\n            setTimeout(() =>\n            {\n                if(!this._keepOpen)\n                {\n                    this._showRequest = false;\n                    this._hideTooltip();\n                }\n            }, 10);\n        }\n    }\n\n    /**\n     * Handles mouse move event, displaying tooltip\n     * @param event - Mouse event that occured\n     * @internal\n     */\n    @HostListener('mousemove', ['$event'])\n    public mouseMove(event: MouseEvent): void\n    {\n        if(this._options.stopPropagation)\n        {\n            event.stopPropagation();\n        }\n\n        this._showRequest = true;\n\n        //do nothing if tooltip is visible\n        if(this._tooltipComponent || isPresent(this.tooltipVisible))\n        {\n            return;\n        }\n\n        if(isPresent(this._timeout))\n        {\n            clearTimeout(this._timeout);\n        }\n\n        this._timeout = setTimeout(() =>\n        {\n            this._timeout = null;\n\n            if(this._showRequest)\n            {\n                this._showTooltip(event);\n\n                this._showRequest = false;\n            }\n        }, this._options.delay) as any;\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Shows tooltip\n     * @param event - Mouse event\n     */\n    protected _showTooltip(event?: MouseEvent): void\n    {\n        this._createTooltip();\n\n        //if element was not created do nothing\n        if(!this._tooltipElement)\n        {\n            return;\n        }\n\n        this._showData();\n\n        this._position.placeElement(this._tooltipElement,\n                                    this._element.nativeElement,\n                                    {\n                                        placement: this._options.position.placement,\n                                        offset: this._options.position.offset,\n                                        flip: true,\n                                        mouseEvent: event,\n                                        autoUpdate: false\n                                    })\n            .toPromise()\n            .then(result => applyPositionResult(result));\n    }\n\n    /**\n     * Hides tooltip\n     */\n    protected _hideTooltip(): void\n    {\n        this._destroyTooltip();\n    }\n\n    /**\n     * Destroys tooltip component\n     */\n    protected _destroyTooltip(): void\n    {\n        if(this._tooltipComponent)\n        {\n            const component = this._tooltipComponent;\n            const element = this._tooltipElement;\n\n            const exitAnimation = this._exitAnimation.create(element);\n\n            exitAnimation.onDone(() =>\n            {\n                component.destroy();\n                exitAnimation.destroy();\n            });\n            \n            this._tooltipComponent = undefined;\n            this._tooltipElement = undefined;\n\n            exitAnimation.play();\n        }\n    }\n\n    /**\n     * Creates tooltip renderer component\n     */\n    protected _createTooltip(): void\n    {\n        // 0. Destroys tooltip if it exists\n        this._destroyTooltip();\n\n        // 1. Create a component reference from the component\n        this._tooltipComponent = this._viewContainerRef\n            .createComponent(this._options.tooltipRenderer,\n                             {\n                                 injector: this._injector\n                             });\n\n        // 3. Get DOM element from component\n        this._tooltipElement = (this._tooltipComponent.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n        this._document.body.appendChild(this._tooltipElement);\n        this._enterAnimation.create(this._tooltipElement).play();\n    }\n\n    /**\n     * Sets data to tooltip component and shows them\n     */\n    protected _showData(): void\n    {\n        if(this._tooltipComponent)\n        {\n            this._tooltipComponent.instance.allowHtml = this.allowHtml;\n            this._tooltipComponent.instance.data = this.tooltip;\n            this._tooltipComponent.instance.template = this.template ?? this.tooltipTemplateChild?.template;\n            this._tooltipComponent.instance.cssClass = this._options.tooltipCssClass;\n\n            this._tooltipComponent.instance.registerHoverEvents(() =>\n                                                                {\n                                                                    if(this._options.allowSelection)\n                                                                    {\n                                                                        this._keepOpen = true;\n                                                                        this._showRequest = false;\n                                                                    }\n                                                                },\n                                                                () =>\n                                                                {\n                                                                    setTimeout(() =>\n                                                                    {\n                                                                        this._keepOpen = false;\n\n                                                                        if(!this._showRequest)\n                                                                        {\n                                                                            this._hideTooltip();\n                                                                        }\n\n                                                                        this._showRequest = false;\n                                                                    }, 5);\n                                                                });\n\n            this._tooltipComponent.instance.invalidateVisuals();\n        }\n    }\n\n    //######################### ng language server #########################\n    \n    /**\n     * Custom input type for `tooltip` input\n     */\n    public static ngAcceptInputType_tooltip: any;\n}","import {PositionResult} from './position.interface';\n\n/**\n * Applies `PositionResult` to target element\n * @param result - Result of positioning process to be applied\n */\nexport function applyPositionResult(result: PositionResult<HTMLElement>): void\n{\n    Object.assign(result.target.style,\n                  {\n                      top: '0',\n                      left: '0',\n                      transform: `translate(${result.x}px, ${result.y}px)`,\n                  });\n}\n","import { HostListener, ViewChildren, QueryList, ChangeDetectorRef, ElementRef, Directive, inject } from '@angular/core';\nimport { nameof } from '@jscrpt/common';\nimport { Subject } from 'rxjs';\nimport { RelationNodeOutputSAComponent } from './relationsNodeOutput/relationsNodeOutput.component';\nimport { RelationNodeInputSAComponent } from './relationsNodeInput/relationsNodeInput.component';\nimport { RELATIONS_HISTORY_MANAGER } from '../misc/tokens';\nimport * as i0 from \"@angular/core\";\n/**\n * Base class for relations node components\n */\n\nexport class RelationsNodeBase {\n  //######################### constructor #########################\n  constructor(changeDetector, element) {\n    this.changeDetector = changeDetector;\n    this.element = element;\n    /**\n     * Metadata history manager\n     */\n\n    this.history = inject(RELATIONS_HISTORY_MANAGER);\n    /**\n     * Indication whether is node initialized\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether user is dragging\n     */\n\n    this.isDragging = false;\n    /**\n     * Indication whether user moved node during drag\n     */\n\n    this.moved = false;\n    /**\n     * Last mouse down position\n     */\n\n    this.lastMouseDownPosition = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * Node position on last mouse down event\n     */\n\n    this.lastMouseDownNodePosition = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * Node position\n     */\n\n    this.nodePosition = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * Array of all available outputs\n     */\n\n    this.ɵAllOutputs = [];\n    /**\n     * Object storing inputs by their names\n     */\n\n    this.ɵInputs = {};\n    /**\n     * Object storing outputs by their names\n     */\n\n    this.ɵOutputs = {};\n    /**\n     * Subject used for destroying node by user\n     */\n\n    this.destroySubject = new Subject(); //######################### public properties - implementation of RelationsNode #########################\n\n    /**\n     * @inheritdoc\n     */\n\n    this.zoomLevel = 1;\n    this.element.nativeElement.classList.add('relations-node');\n    this.updatePosition();\n    this.observer = new ResizeObserver(() => this.updateRelations());\n    this.observer.observe(this.element.nativeElement);\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  get id() {\n    return this.metadata?.id ?? '';\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  get allOutputs() {\n    return this.ɵAllOutputs;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  get inputs() {\n    return this.ɵInputs;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  get outputs() {\n    return this.ɵOutputs;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  get destroy() {\n    return this.destroySubject.asObservable();\n  } //######################### public methods - implementation of OnChanges #########################\n\n  /**\n   * Called when input value changes\n   */\n\n\n  ngOnChanges(changes) {\n    //initial change of metadata\n    if (nameof('metadata') in changes && this.metadata) {\n      if (this.metadata.nodeMetadata?.coordinates) {\n        this.nodePosition = this.metadata.nodeMetadata.coordinates;\n        this.updatePosition();\n      }\n\n      this.metadataSet();\n    }\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    this.observer?.disconnect();\n  } //######################### public methods - implementation of RelationsNode #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initEndpoints();\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  initialize() {} //######################### protected methods methods - host listeners #########################\n\n  /**\n   * Mouse down event\n   * @param event\n   */\n\n\n  onMouseDown(event) {\n    this.moved = false;\n    this.isDragging = true;\n    this.lastMouseDownPosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    this.lastMouseDownNodePosition = {\n      x: this.nodePosition.x,\n      y: this.nodePosition.y\n    };\n    event.stopImmediatePropagation();\n  }\n  /**\n   * Mouse move event\n   * @param event\n   */\n\n\n  onMouseMove(event) {\n    if (this.isDragging) {\n      this.moved = true;\n      this.nodePosition = {\n        x: this.lastMouseDownNodePosition.x + (event.clientX - this.lastMouseDownPosition.x) * 1 / this.zoomLevel,\n        y: this.lastMouseDownNodePosition.y + (event.clientY - this.lastMouseDownPosition.y) * 1 / this.zoomLevel\n      };\n      this.updatePosition();\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      this.updateRelations();\n    }\n  }\n  /**\n   * Mouse up event\n   * @param event\n   */\n\n\n  onMouseUp(event) {\n    if (this.isDragging) {\n      if (this.moved) {\n        this.history.getNewState();\n      }\n\n      this.isDragging = false;\n      event.stopImmediatePropagation();\n      event.preventDefault();\n    }\n  } //######################### protected methods #########################\n\n  /**\n   * Initialize endpoints\n   */\n\n\n  initEndpoints() {\n    const updateInputs = () => {\n      this.ɵInputs = {};\n      this.inputsChildren?.forEach(input => {\n        if (input.name) {\n          this.ɵInputs[input.name] = input;\n        }\n      });\n      Object.freeze(this.ɵInputs);\n    };\n\n    const updateOutputs = () => {\n      this.ɵAllOutputs = this.outputsChildren.toArray();\n      this.ɵOutputs = {};\n      this.outputsChildren?.forEach(output => {\n        if (output.name) {\n          this.ɵOutputs[output.name] = output;\n        }\n      });\n      Object.freeze(this.ɵOutputs);\n    };\n\n    this.inputsChildren?.changes.subscribe(() => updateInputs());\n    this.outputsChildren?.changes.subscribe(() => updateOutputs());\n    updateInputs();\n    updateOutputs();\n  }\n  /**\n   * Updates node relations\n   */\n\n\n  updateRelations() {\n    this.inputsChildren.forEach(input => {\n      input.updateRelation();\n    });\n    this.outputsChildren.forEach(output => {\n      output.updateRelation();\n    });\n  }\n  /**\n   * Updates node position\n   */\n\n\n  updatePosition() {\n    this.element.nativeElement.style.left = `${this.nodePosition.x}px`;\n    this.element.nativeElement.style.top = `${this.nodePosition.y}px`;\n\n    if (this.metadata?.nodeMetadata?.coordinates) {\n      this.metadata.nodeMetadata.coordinates.x = this.nodePosition.x;\n      this.metadata.nodeMetadata.coordinates.y = this.nodePosition.y;\n    }\n  }\n  /**\n   * Allows code to be called after metadata were set\n   */\n\n\n  metadataSet() {}\n\n}\n\nRelationsNodeBase.ɵfac = function RelationsNodeBase_Factory(t) {\n  return new (t || RelationsNodeBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nRelationsNodeBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RelationsNodeBase,\n  viewQuery: function RelationsNodeBase_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(RelationNodeInputSAComponent, 5);\n      i0.ɵɵviewQuery(RelationNodeOutputSAComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputsChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.outputsChildren = _t);\n    }\n  },\n  hostBindings: function RelationsNodeBase_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function RelationsNodeBase_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      })(\"mousemove\", function RelationsNodeBase_mousemove_HostBindingHandler($event) {\n        return ctx.onMouseMove($event);\n      }, false, i0.ɵɵresolveWindow)(\"mouseup\", function RelationsNodeBase_mouseup_HostBindingHandler($event) {\n        return ctx.onMouseUp($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RelationsNodeBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    inputsChildren: [{\n      type: ViewChildren,\n      args: [RelationNodeInputSAComponent]\n    }],\n    outputsChildren: [{\n      type: ViewChildren,\n      args: [RelationNodeOutputSAComponent]\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    onMouseMove: [{\n      type: HostListener,\n      args: ['window:mousemove', ['$event']]\n    }],\n    onMouseUp: [{\n      type: HostListener,\n      args: ['window:mouseup', ['$event']]\n    }]\n  });\n})();","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\nimport { RelationsNodeManager } from '../services';\nimport { RelationsCanvasSAComponent } from './relationsCanvas/relationsCanvas.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services\";\nimport * as i2 from \"./relationsCanvas/relationsCanvas.component\";\n/**\n * Base class for relations node endpoints (inputs/outputs)\n */\n\nexport class RelationNodeEndpointBase {\n  //######################### constructor #########################\n  constructor(_element, _relationManager, _canvas) {\n    this._element = _element;\n    this._relationManager = _relationManager;\n    this._canvas = _canvas;\n    /**\n     * Indication whether component is dragging\n     */\n\n    this._isDragging = false;\n    /**\n     * Indication whether node endpoint is highlighted\n     */\n\n    this._isHighlighted = false;\n    /**\n     * Last mouse down position\n     */\n\n    this._lastMouseDownPosition = {\n      x: 0,\n      y: 0\n    }; //######################### public properties - inputs #########################\n\n    /**\n     * Parent zoom level\n     */\n\n    this.zoomLevel = 1;\n    /**\n     * Parent node coordinates\n     */\n\n    this.parentCoordiantes = {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  get parentId() {\n    return this.parent?.id ?? '';\n  } //######################### public methods - implementation of OnInit #########################\n\n  /**\n   * Initialize component\n   */\n\n\n  ngOnInit() {\n    if (!this.parent) {\n      throw new Error('Every input or output endpoint must have parent specified');\n    }\n  } //######################### public methods #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  getCoordinates() {\n    return {\n      x: this.parentCoordiantes.x + this._element.nativeElement.offsetLeft + this._element.nativeElement.offsetWidth / 2,\n      y: this.parentCoordiantes.y + this._element.nativeElement.offsetTop + this._element.nativeElement.offsetHeight / 2\n    };\n  }\n  /**\n   * Highlight node endpoit\n   */\n\n\n  highlight() {\n    this._isHighlighted = true;\n  }\n  /**\n   * Cancel highlight for node endpoint\n   */\n\n\n  cancelHighlight() {\n    this._isHighlighted = false;\n  }\n\n}\n\nRelationNodeEndpointBase.ɵfac = function RelationNodeEndpointBase_Factory(t) {\n  return new (t || RelationNodeEndpointBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.RelationsNodeManager), i0.ɵɵdirectiveInject(i2.RelationsCanvasSAComponent));\n};\n\nRelationNodeEndpointBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RelationNodeEndpointBase,\n  hostVars: 2,\n  hostBindings: function RelationNodeEndpointBase_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"highlighted\", ctx._isHighlighted);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    zoomLevel: \"zoomLevel\",\n    parentCoordiantes: \"parentCoordiantes\",\n    parent: \"parent\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RelationNodeEndpointBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.RelationsNodeManager\n    }, {\n      type: i2.RelationsCanvasSAComponent\n    }];\n  }, {\n    _isHighlighted: [{\n      type: HostBinding,\n      args: ['class.highlighted']\n    }],\n    name: [{\n      type: Input\n    }],\n    zoomLevel: [{\n      type: Input\n    }],\n    parentCoordiantes: [{\n      type: Input\n    }],\n    parent: [{\n      type: Input\n    }]\n  });\n})();","import { mapValuesToThis } from '@jscrpt/common';\n/**\n * Relations node properties model\n */\n\nexport class RelationsNodePropertiesModel {\n  //######################### constructor #########################\n  constructor(value) {\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    this.displayName = null;\n    /**\n     * @inheritdoc\n     */\n\n    this.scope = null;\n    mapValuesToThis.bind(this)(value);\n  }\n\n}","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TITLED_DIALOG_DATA } from '@anglr/common/material';\nimport { FormModelBuilder } from '@anglr/common/forms';\nimport { RelationsNodePropertiesModel } from './relationsNodePropertiesEditor.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@anglr/common/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\n/**\n * Component used for editing display name of relations node\n */\n\nfunction RelationsNodePropertiesEditorSAComponent_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 8);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"readonly\", true);\n  }\n}\n\nfunction RelationsNodePropertiesEditorSAComponent_select_7_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const scope_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", scope_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(scope_r3);\n  }\n}\n\nfunction RelationsNodePropertiesEditorSAComponent_select_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 9)(1, \"option\", 10);\n    i0.ɵɵtext(2, \"---\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, RelationsNodePropertiesEditorSAComponent_select_7_option_3_Template, 2, 2, \"option\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.scopes);\n  }\n}\n\nexport class RelationsNodePropertiesEditorSAComponent {\n  //######################### constructor #########################\n  constructor(data, formModelBuilder) {\n    this.data = data;\n    /**\n     * Array of available scopes\n     */\n\n    this.scopes = [];\n    this.form = formModelBuilder.build(new RelationsNodePropertiesModel(data.properties));\n    this.scopes = data.scopeRegister.scopes;\n  }\n\n}\n\nRelationsNodePropertiesEditorSAComponent.ɵfac = function RelationsNodePropertiesEditorSAComponent_Factory(t) {\n  return new (t || RelationsNodePropertiesEditorSAComponent)(i0.ɵɵdirectiveInject(TITLED_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FormModelBuilder));\n};\n\nRelationsNodePropertiesEditorSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RelationsNodePropertiesEditorSAComponent,\n  selectors: [[\"relations-node-properties-editor\"]],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([FormModelBuilder]), i0.ɵɵStandaloneFeature],\n  decls: 15,\n  vars: 5,\n  consts: [[1, \"dynamic-form-group\", 3, \"formGroup\"], [1, \"dynamic-control-label\"], [\"type\", \"text\", \"formControlName\", \"displayName\", 1, \"dynamic-form-control\"], [\"class\", \"dynamic-form-control\", \"type\", \"text\", \"formControlName\", \"scope\", 3, \"readonly\", 4, \"ngIf\"], [\"class\", \"dynamic-form-control\", \"formControlName\", \"scope\", 4, \"ngIf\"], [1, \"dynamic-flex-row\", \"dynamic-flex-end\", \"dynamic-margin-top-small\"], [\"type\", \"button\", 1, \"dynamic-btn\", \"dynamic-btn-info\", \"dynamic-margin-right-extra-small\", 3, \"mat-dialog-close\"], [\"type\", \"button\", 1, \"dynamic-btn\", \"dynamic-btn-primary\", 3, \"mat-dialog-close\"], [\"type\", \"text\", \"formControlName\", \"scope\", 1, \"dynamic-form-control\", 3, \"readonly\"], [\"formControlName\", \"scope\", 1, \"dynamic-form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function RelationsNodePropertiesEditorSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"display name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"label\", 1);\n      i0.ɵɵtext(5, \"scope\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, RelationsNodePropertiesEditorSAComponent_input_6_Template, 1, 1, \"input\", 3);\n      i0.ɵɵtemplate(7, RelationsNodePropertiesEditorSAComponent_select_7_Template, 4, 1, \"select\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6)(10, \"span\");\n      i0.ɵɵtext(11, \"cancel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 7)(13, \"span\");\n      i0.ɵɵtext(14, \"ok\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !ctx.data.scopeConfigurable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.data.scopeConfigurable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"mat-dialog-close\", null);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"mat-dialog-close\", ctx.form.value);\n    }\n  },\n  dependencies: [CommonModule, i2.NgForOf, i2.NgIf, MatDialogModule, i3.MatDialogClose, ReactiveFormsModule, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RelationsNodePropertiesEditorSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'relations-node-properties-editor',\n      standalone: true,\n      imports: [CommonModule, MatDialogModule, ReactiveFormsModule],\n      providers: [FormModelBuilder],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"dynamic-form-group\\\" [formGroup]=\\\"form\\\">\\n    <label class=\\\"dynamic-control-label\\\">display name</label>\\n    <input class=\\\"dynamic-form-control\\\" type=\\\"text\\\" formControlName=\\\"displayName\\\">\\n\\n    <label class=\\\"dynamic-control-label\\\">scope</label>\\n    <input class=\\\"dynamic-form-control\\\" type=\\\"text\\\" formControlName=\\\"scope\\\" [readonly]=\\\"true\\\" *ngIf=\\\"!data.scopeConfigurable\\\">\\n\\n    <select class=\\\"dynamic-form-control\\\" formControlName=\\\"scope\\\" *ngIf=\\\"data.scopeConfigurable\\\">\\n        <option value=\\\"\\\">---</option>\\n        <option *ngFor=\\\"let scope of scopes\\\" [value]=\\\"scope\\\">{{scope}}</option>\\n    </select>\\n</div>\\n\\n<div class=\\\"dynamic-flex-row dynamic-flex-end dynamic-margin-top-small\\\">\\n    <button type=\\\"button\\\" class=\\\"dynamic-btn dynamic-btn-info dynamic-margin-right-extra-small\\\" [mat-dialog-close]=\\\"null\\\">\\n        <span>cancel</span>\\n    </button>\\n\\n    <button type=\\\"button\\\" class=\\\"dynamic-btn dynamic-btn-primary\\\" [mat-dialog-close]=\\\"form.value\\\">\\n        <span>ok</span>\\n    </button>\\n</div>\"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TITLED_DIALOG_DATA]\n      }]\n    }, {\n      type: i1.FormModelBuilder\n    }];\n  }, null);\n})();","import { Pipe } from '@angular/core';\nimport { stringToColour } from '../../misc/utils';\nimport * as i0 from \"@angular/core\";\n/**\n * Converts string to color code\n */\n\nexport class ToColorSAPipe {\n  /**\n   * Converts string to color code\n   * @param value - String to be converted\n   */\n  transform(value) {\n    if (!value) {\n      return null;\n    }\n\n    return stringToColour(value);\n  }\n\n}\n\nToColorSAPipe.ɵfac = function ToColorSAPipe_Factory(t) {\n  return new (t || ToColorSAPipe)();\n};\n\nToColorSAPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"toColor\",\n  type: ToColorSAPipe,\n  pure: true,\n  standalone: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToColorSAPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'toColor',\n      standalone: true\n    }]\n  }], null, null);\n})();","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { Component, ChangeDetectionStrategy, Input, ChangeDetectorRef, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TitledDialogService } from '@anglr/common/material';\nimport { MetadataHistoryManager } from '@anglr/dynamic';\nimport { TooltipModule } from '@anglr/common';\nimport { lastValueFrom } from 'rxjs';\nimport { RelationsNodePropertiesEditorSAComponent } from '../relationsNodePropertiesEditor/relationsNodePropertiesEditor.component';\nimport { ToColorSAPipe } from '../../pipes/toColor/toColor.pipe';\nimport { RELATIONS_HISTORY_MANAGER } from '../../misc/tokens';\nimport { ScopeRegister } from '../../services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@anglr/common/material\";\nimport * as i2 from \"../../services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@anglr/common\";\nimport * as i5 from \"@anglr/dynamic\";\n/**\n * Component used for displaying relations node header\n */\n\nfunction RelationsNodeHeaderSAComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵpipe(1, \"toColor\");\n    i0.ɵɵtext(2, \"{}\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"color\", i0.ɵɵpipeBind1(1, 3, ctx_r0.parent == null ? null : ctx_r0.parent.metadata == null ? null : ctx_r0.parent.metadata.scope));\n    i0.ɵɵproperty(\"tooltip\", ctx_r0.parent == null ? null : ctx_r0.parent.metadata == null ? null : ctx_r0.parent.metadata.scope);\n  }\n}\n\nfunction RelationsNodeHeaderSAComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function RelationsNodeHeaderSAComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.destroySubject.next());\n    });\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class RelationsNodeHeaderSAComponent {\n  //######################### constructor #########################\n  constructor(dialog, changeDetector, scopeRegister, history) {\n    this.dialog = dialog;\n    this.changeDetector = changeDetector;\n    this.scopeRegister = scopeRegister;\n    this.history = history;\n  } //######################### protected methods - template bindings #########################\n\n  /**\n   * Opens editation of properties\n   */\n\n\n  editProperties() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield lastValueFrom(_this.dialog.open(RelationsNodePropertiesEditorSAComponent, {\n        title: 'edit properties',\n        width: '30vw',\n        data: {\n          properties: {\n            displayName: _this.parent?.metadata?.displayName || _this.name || _this.parent?.metadata?.id || '',\n            scope: _this.parent?.metadata?.scope ?? ''\n          },\n          scopeConfigurable: _this.parent?.metadata?.nodeMetadata?.scopeConfigurable ?? false,\n          scopeRegister: _this.scopeRegister\n        }\n      }).afterClosed());\n\n      if (result && _this.parent?.metadata) {\n        _this.parent.metadata.displayName = result.displayName ?? undefined;\n        _this.parent.metadata.scope = result.scope ?? undefined;\n\n        _this.history.getNewState();\n\n        _this.changeDetector.detectChanges();\n      }\n    })();\n  }\n\n}\n\nRelationsNodeHeaderSAComponent.ɵfac = function RelationsNodeHeaderSAComponent_Factory(t) {\n  return new (t || RelationsNodeHeaderSAComponent)(i0.ɵɵdirectiveInject(i1.TitledDialogService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ScopeRegister), i0.ɵɵdirectiveInject(RELATIONS_HISTORY_MANAGER));\n};\n\nRelationsNodeHeaderSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RelationsNodeHeaderSAComponent,\n  selectors: [[\"relations-node-header\"]],\n  inputs: {\n    parent: \"parent\",\n    destroySubject: \"destroySubject\",\n    name: \"name\"\n  },\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"header-content\"], [\"class\", \"dynamic-margin-horizontal-extra-small dynamic-bold\", 3, \"tooltip\", \"color\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"dynamic-btn-icon\", \"edit-icon\", 3, \"click\"], [1, \"fas\", \"fa-pen\"], [\"type\", \"button\", \"class\", \"dynamic-btn-icon destroy-icon\", 3, \"click\", 4, \"ngIf\"], [1, \"dynamic-margin-horizontal-extra-small\", \"dynamic-bold\", 3, \"tooltip\"], [\"type\", \"button\", 1, \"dynamic-btn-icon\", \"destroy-icon\", 3, \"click\"], [1, \"fas\", \"fa-times\"]],\n  template: function RelationsNodeHeaderSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, RelationsNodeHeaderSAComponent_span_2_Template, 3, 5, \"span\", 1);\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function RelationsNodeHeaderSAComponent_Template_button_click_3_listener() {\n        return ctx.editProperties();\n      });\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, RelationsNodeHeaderSAComponent_button_5_Template, 2, 0, \"button\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate((ctx.parent == null ? null : ctx.parent.metadata == null ? null : ctx.parent.metadata.displayName) || ctx.name || (ctx.parent == null ? null : ctx.parent.metadata == null ? null : ctx.parent.metadata.id));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.parent == null ? null : ctx.parent.metadata == null ? null : ctx.parent.metadata.scope);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.destroySubject);\n    }\n  },\n  dependencies: [CommonModule, i3.NgIf, TooltipModule, i4.TooltipDirective, ToColorSAPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RelationsNodeHeaderSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'relations-node-header',\n      standalone: true,\n      imports: [CommonModule, TooltipModule, ToColorSAPipe],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"header-content\\\">{{parent?.metadata?.displayName || name || parent?.metadata?.id}}</div>\\n\\n<span *ngIf=\\\"parent?.metadata?.scope\\\" [tooltip]=\\\"parent?.metadata?.scope\\\" [style.color]=\\\"parent?.metadata?.scope | toColor\\\" class=\\\"dynamic-margin-horizontal-extra-small dynamic-bold\\\">&#123;&#125;</span>\\n\\n<button type=\\\"button\\\" class=\\\"dynamic-btn-icon edit-icon\\\" (click)=\\\"editProperties()\\\">\\n    <span class=\\\"fas fa-pen\\\"></span>\\n</button>\\n\\n<button type=\\\"button\\\" *ngIf=\\\"destroySubject\\\" class=\\\"dynamic-btn-icon destroy-icon\\\" (click)=\\\"destroySubject.next()\\\">\\n    <span class=\\\"fas fa-times\\\"></span>\\n</button>\"\n    }]\n  }], function () {\n    return [{\n      type: i1.TitledDialogService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.ScopeRegister\n    }, {\n      type: i5.MetadataHistoryManager,\n      decorators: [{\n        type: Inject,\n        args: [RELATIONS_HISTORY_MANAGER]\n      }]\n    }];\n  }, {\n    parent: [{\n      type: Input\n    }],\n    destroySubject: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }]\n  });\n})();","import { Component, ChangeDetectionStrategy, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RelationNodeEndpointBase } from '../relationsNodeEndpointBase';\nimport { MouseButton } from '../../misc/enums';\nimport { INVALIDATE_DROP } from '../../misc/constants';\nimport * as i0 from \"@angular/core\";\n/**\n * Component used to display relation node input\n */\n\nexport class RelationNodeInputSAComponent extends RelationNodeEndpointBase {\n  //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n  ngOnDestroy() {\n    if (this._relation) {\n      this._relation.destroy();\n    }\n  } //######################### public methods - implementation of RelationsInput #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  addRelation(relation) {\n    if (this._relation) {\n      //Same relation\n      if (this._relation.start?.x === relation.start?.x && this._relation.start?.y === relation.start?.y) {\n        return false;\n      }\n\n      this._relation.destroy();\n    }\n\n    this._relation = relation;\n    return true;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  endRelation(relation) {\n    if (this.addRelation(relation)) {\n      this.updateRelation();\n    }\n  } //######################### public methods - overrides #########################\n\n  /**\n   * Updates node output relation\n   */\n\n\n  updateRelation() {\n    if (!this._relation) {\n      return;\n    }\n\n    this._relation.end = this.getCoordinates();\n    this._relation.input = this;\n\n    this._relation.invalidateVisuals();\n  } //######################### protected methods - host listeners #########################\n\n  /**\n   * Mouse enter event, marks input as active\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseEnter(event) {\n    if (event.buttons === MouseButton.LEFT) {\n      this._relationManager.setActiveInput(this);\n    }\n\n    this._relation?.highlight();\n  }\n  /**\n   * Mouse leave event, clears marked active input\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseLeave(event) {\n    if (event.buttons === MouseButton.LEFT) {\n      this._relationManager.setActiveInput(null);\n    }\n\n    this._relation?.cancelHighlight();\n  }\n  /**\n   * Mouse down event, starts dragging\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseDown(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n    this._lastMouseDownPosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    this._tempRelation = this._relation;\n    this._relation = null;\n    this._isDragging = true;\n  }\n  /**\n   * Mouse move event on whole window\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseMove(event) {\n    if (this._isDragging) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n\n      if (this._tempRelation) {\n        this._tempRelation.end = {\n          x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition?.x) * 1 / this.zoomLevel,\n          y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition?.y) * 1 / this.zoomLevel\n        };\n\n        this._tempRelation.invalidateVisuals();\n      }\n    }\n  }\n  /**\n   * Mouse up event on whole window\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseUp(event) {\n    if (this._isDragging) {\n      this._isDragging = false;\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      this._tempRelation?.invalidateVisuals(INVALIDATE_DROP);\n    }\n  }\n\n}\n\nRelationNodeInputSAComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵRelationNodeInputSAComponent_BaseFactory;\n  return function RelationNodeInputSAComponent_Factory(t) {\n    return (ɵRelationNodeInputSAComponent_BaseFactory || (ɵRelationNodeInputSAComponent_BaseFactory = i0.ɵɵgetInheritedFactory(RelationNodeInputSAComponent)))(t || RelationNodeInputSAComponent);\n  };\n}();\n\nRelationNodeInputSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RelationNodeInputSAComponent,\n  selectors: [[\"relation-node-input\"]],\n  hostBindings: function RelationNodeInputSAComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function RelationNodeInputSAComponent_mouseenter_HostBindingHandler($event) {\n        return ctx._onMouseEnter($event);\n      })(\"mouseleave\", function RelationNodeInputSAComponent_mouseleave_HostBindingHandler($event) {\n        return ctx._onMouseLeave($event);\n      })(\"mousedown\", function RelationNodeInputSAComponent_mousedown_HostBindingHandler($event) {\n        return ctx._onMouseDown($event);\n      })(\"mousemove\", function RelationNodeInputSAComponent_mousemove_HostBindingHandler($event) {\n        return ctx._onMouseMove($event);\n      }, false, i0.ɵɵresolveWindow)(\"mouseup\", function RelationNodeInputSAComponent_mouseup_HostBindingHandler($event) {\n        return ctx._onMouseUp($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 0,\n  vars: 0,\n  template: function RelationNodeInputSAComponent_Template(rf, ctx) {},\n  dependencies: [CommonModule],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RelationNodeInputSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'relation-node-input',\n      template: '',\n      standalone: true,\n      imports: [CommonModule],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    _onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter', ['$event']]\n    }],\n    _onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event']]\n    }],\n    _onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    _onMouseMove: [{\n      type: HostListener,\n      args: ['window:mousemove', ['$event']]\n    }],\n    _onMouseUp: [{\n      type: HostListener,\n      args: ['window:mouseup', ['$event']]\n    }]\n  });\n})();","import { Component, ChangeDetectionStrategy, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RelationNodeEndpointBase } from '../relationsNodeEndpointBase';\nimport { INVALIDATE_DROP } from '../../misc/constants';\nimport * as i0 from \"@angular/core\";\n/**\n * Component used to display relation node output\n */\n\nexport class RelationNodeOutputSAComponent extends RelationNodeEndpointBase {\n  constructor() {\n    super(...arguments); //######################### protected properties #########################\n\n    /**\n     * Relations\n     */\n\n    this._relations = [];\n  } //######################### public properties - implementation of RelationsOutput #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  get relations() {\n    return this._relations;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this._relations) {\n      const relations = [...this._relations];\n\n      for (const relation of relations) {\n        relation.destroy();\n      }\n    }\n  } //######################### public methods - implementation of RelationsOutput #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  startRelation() {\n    const relation = this._canvas.createRelation();\n\n    relation.start = this.getCoordinates();\n    relation.output = this;\n    relation.destroying.subscribe(() => {\n      const index = this._relations.indexOf(relation);\n\n      if (index >= 0) {\n        this._relations.splice(index, 1);\n      }\n    });\n\n    this._relations.push(relation);\n\n    return relation;\n  } //######################### public methods - overrides #########################\n\n  /**\n   * Updates node output relations\n   */\n\n\n  updateRelation() {\n    if (!this._relations) {\n      return;\n    }\n\n    for (const relation of this._relations) {\n      relation.start = this.getCoordinates();\n      relation.invalidateVisuals();\n    }\n  } //######################### protected methods - host listeners #########################\n\n  /**\n   * Mouse down event, creates new relation\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseDown(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n    this._isDragging = true;\n    this._lastMouseDownPosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    this._relation = this.startRelation();\n  }\n  /**\n   * Mouse enter event, marks input as active\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseEnter(_) {\n    this._relations?.forEach(relation => relation?.highlight());\n  }\n  /**\n   * Mouse leave event, clears marked active input\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseLeave(_) {\n    this._relations?.forEach(relation => relation?.cancelHighlight());\n  }\n  /**\n   * Mouse move event - whole window\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseMove(event) {\n    if (this._isDragging) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n\n      if (this._relation) {\n        this._relation.end = {\n          x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition.x) * 1 / this.zoomLevel,\n          y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition.y) * 1 / this.zoomLevel\n        };\n\n        this._relation.invalidateVisuals();\n      }\n    }\n  }\n  /**\n   * Mouse up event - whole window\n   * @param event - Mouse event that occured\n   */\n\n\n  _onMouseUp(event) {\n    if (this._isDragging) {\n      this._isDragging = false;\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      this._relation?.invalidateVisuals(INVALIDATE_DROP);\n    }\n  }\n\n}\n\nRelationNodeOutputSAComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵRelationNodeOutputSAComponent_BaseFactory;\n  return function RelationNodeOutputSAComponent_Factory(t) {\n    return (ɵRelationNodeOutputSAComponent_BaseFactory || (ɵRelationNodeOutputSAComponent_BaseFactory = i0.ɵɵgetInheritedFactory(RelationNodeOutputSAComponent)))(t || RelationNodeOutputSAComponent);\n  };\n}();\n\nRelationNodeOutputSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RelationNodeOutputSAComponent,\n  selectors: [[\"relation-node-output\"]],\n  hostBindings: function RelationNodeOutputSAComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function RelationNodeOutputSAComponent_mousedown_HostBindingHandler($event) {\n        return ctx._onMouseDown($event);\n      })(\"mouseenter\", function RelationNodeOutputSAComponent_mouseenter_HostBindingHandler($event) {\n        return ctx._onMouseEnter($event);\n      })(\"mouseleave\", function RelationNodeOutputSAComponent_mouseleave_HostBindingHandler($event) {\n        return ctx._onMouseLeave($event);\n      })(\"mousemove\", function RelationNodeOutputSAComponent_mousemove_HostBindingHandler($event) {\n        return ctx._onMouseMove($event);\n      }, false, i0.ɵɵresolveWindow)(\"mouseup\", function RelationNodeOutputSAComponent_mouseup_HostBindingHandler($event) {\n        return ctx._onMouseUp($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 0,\n  vars: 0,\n  template: function RelationNodeOutputSAComponent_Template(rf, ctx) {},\n  dependencies: [CommonModule],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RelationNodeOutputSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'relation-node-output',\n      template: '',\n      standalone: true,\n      imports: [CommonModule],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    _onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    _onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter', ['$event']]\n    }],\n    _onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event']]\n    }],\n    _onMouseMove: [{\n      type: HostListener,\n      args: ['window:mousemove', ['$event']]\n    }],\n    _onMouseUp: [{\n      type: HostListener,\n      args: ['window:mouseup', ['$event']]\n    }]\n  });\n})();"],"names":["TooltipComponent","constructor","_changeDetector","_element","_enterFn","_leaveFn","allowHtml","registerHoverEvents","enter","leave","this","invalidateVisuals","cssClass","nativeElement","classList","add","detectChanges","mouseEnter","mouseLeave","i0","i1","TOOLTIP_OPTIONS","InjectionToken","TooltipTemplateDirective","template","_dir","_ctx","defaultOptions","delay","position","offset","PositionOffset","placement","PositionPlacement","allowSelection","tooltipRenderer","tooltipCssClass","stopPropagation","enterAnimation","fadeInAnimation","exitAnimation","fadeOutAnimation","TooltipDirective","_viewContainerRef","_injector","_animationsPlayer","_document","_position","options","_showRequest","_keepOpen","_timeout","_options","extend","_enterAnimation","build","_exitAnimation","tooltipOptions","value","ngOnChanges","changes","nameof","tooltipVisible","_showTooltip","_hideTooltip","ngOnDestroy","clearTimeout","_destroyTooltip","event","isBlank","setTimeout","mouseMove","_tooltipComponent","isPresent","_createTooltip","_tooltipElement","_showData","placeElement","flip","mouseEvent","autoUpdate","toPromise","then","result","applyPositionResult","component","element","create","onDone","destroy","undefined","play","createComponent","injector","hostView","rootNodes","body","appendChild","instance","data","tooltip","tooltipTemplateChild","DOCUMENT","POSITION","Object","assign","target","style","top","left","transform","x","y","RelationsNodeBase","changeDetector","history","initialized","isDragging","moved","lastMouseDownPosition","lastMouseDownNodePosition","nodePosition","destroySubject","zoomLevel","updatePosition","observer","ResizeObserver","updateRelations","observe","id","metadata","allOutputs","inputs","outputs","asObservable","nodeMetadata","coordinates","metadataSet","disconnect","initEndpoints","initialize","onMouseDown","clientX","clientY","stopImmediatePropagation","onMouseMove","preventDefault","onMouseUp","getNewState","updateInputs","inputsChildren","forEach","input","name","freeze","updateOutputs","outputsChildren","toArray","output","subscribe","updateRelation","t","type","viewQuery","rf","ctx","_t","hostBindings","$event","features","RelationNodeEndpointBase","_relationManager","_canvas","_isDragging","_isHighlighted","_lastMouseDownPosition","parentCoordiantes","parentId","parent","ngOnInit","Error","getCoordinates","offsetLeft","offsetWidth","offsetTop","offsetHeight","highlight","cancelHighlight","hostVars","RelationsNodePropertiesModel","displayName","scope","RelationsNodePropertiesEditorSAComponent_input_6_Template","RelationsNodePropertiesEditorSAComponent_select_7_option_3_Template","scope_r3","$implicit","RelationsNodePropertiesEditorSAComponent_select_7_Template","ctx_r1","scopes","RelationsNodePropertiesEditorSAComponent","formModelBuilder","form","properties","scopeRegister","selectors","standalone","decls","vars","consts","scopeConfigurable","dependencies","encapsulation","changeDetection","ToColorSAPipe","pure","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","RelationsNodeHeaderSAComponent_span_2_Template","ctx_r0","RelationsNodeHeaderSAComponent_button_5_Template","_r3","ctx_r2","next","RelationsNodeHeaderSAComponent","dialog","editProperties","fn","_this","lastValueFrom","open","title","width","afterClosed","self","args","arguments","apply","err","i","RelationNodeInputSAComponent","_relation","addRelation","relation","start","endRelation","end","_onMouseEnter","buttons","setActiveInput","_onMouseLeave","_onMouseDown","_tempRelation","_onMouseMove","_onMouseUp","RelationNodeOutputSAComponent","super","_relations","relations","startRelation","createRelation","destroying","index","indexOf","splice","push","_"],"sourceRoot":""}