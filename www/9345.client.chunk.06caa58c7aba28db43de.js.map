{"version":3,"file":"9345.client.chunk.06caa58c7aba28db43de.js","mappings":"mMASM,MAAOA,EA2DTC,cApDO,KAAAC,SACP,CACIC,KAAM,aACNC,YAAa,0CACbC,MAAO,SACPC,gBACA,CACIC,mBACA,CACI,CACIC,UAAWC,EAAAA,EACXC,mBACA,CACIC,EAAAA,OAUb,KAAAC,cAAuF,CAACC,EAAUC,KAErGA,EAAQC,QAAUF,CAAlB,EAMG,KAAAG,gBAA8EF,IAAYA,GAASC,QAKnG,KAAAE,qBAAuDC,GAAWA,EAAQC,cAAc,QAKxF,KAAAC,eAA+FN,GAAWA,GAASC,QAAU,CAACD,GAASC,SAAW,GAKlJ,KAAAM,iBAAiE,CAACC,EAAGR,KAExEA,EAAQC,QAAU,IAAlB,EAMAQ,OAAOC,OAAOC,KACjB,E,8FC9DC,MAAOC,EAGTzB,YAAgD0B,GAAA,KAAAA,QAAAA,CAE/C,CASMC,UAAkBC,EAA+CC,GAEpE,OAAGC,EAAAA,EAAAA,IAAQF,GAEA,KAGRA,aAAiBG,EAAAA,GAETH,GAGXJ,KAAKE,SAASM,KAAK,iDAEZ,KACV,E,iCA7BQP,GAAAA,EAAAA,EAGuBQ,EAAAA,GAAMA,I,0CAH7BR,E","sources":["webpack://ng-universal-demo/./app/dynamicItems/formBlock/metadata/formBlock.layoutMetadata.ts","webpack://ng-universal-demo/../../../forms/src/modules/formPipes/pipes/asFormControl/asFormControl.pipe.ts"],"sourcesContent":["import {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {ComponentStylingModel, ComponentStylingPropertiesControlComponent, LayoutEditorMetadataDescriptor, LayoutEditorMetadataInfo} from '@anglr/dynamic/layout-editor';\nimport {Action, Func} from '@jscrpt/common';\n\nimport {FormBlockComponentOptions} from '../formBlock.options';\n\n/**\n * Form block layout metadata\n */\nexport class FormBlockLayoutEditorMetadata implements LayoutEditorMetadataDescriptor<FormBlockComponentOptions>\n{\n    //######################### public properties - implementation of LayoutEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: LayoutEditorMetadataInfo<FormBlockComponentOptions> =\n    {\n        name: 'Form block',\n        description: 'Represents form with its inputs outputs',\n        group: 'Layout',\n        optionsMetadata:\n        {\n            propertiesMetadata:\n            [\n                {\n                    modelType: ComponentStylingModel,\n                    propertiesControls: \n                    [\n                        ComponentStylingPropertiesControlComponent,\n                    ],\n                },\n            ]\n        },\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public addDescendant?: Action<[LayoutComponentMetadata, FormBlockComponentOptions, number]> = (metadata, options) =>\n    {\n        options.content = metadata;\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public canDropMetadata?: Func<boolean, [FormBlockComponentOptions|undefined|null]> = options => !options?.content;\n\n    /**\n     * @inheritdoc\n     */\n    public getChildrenContainer?: Func<Element|null, [Element]> = element => element.querySelector('form');\n\n    /**\n     * @inheritdoc\n     */\n    public getDescendants?: Func<LayoutComponentMetadata[], [FormBlockComponentOptions|undefined|null]> = options => options?.content ? [options?.content] : [];\n\n    /**\n     * @inheritdoc\n     */\n    public removeDescendant?: Action<[string, FormBlockComponentOptions]> = (_, options) =>\n    {\n        options.content = null;\n    }\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {Inject, Optional, Pipe} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Tries to convert `AbstractControl` to `FormControl`\n */\n@Pipe({name: 'asFormControl'})\nexport class AsFormControlPipe\n{\n    //######################### constructors #########################\n    constructor(@Optional() @Inject(LOGGER) private _logger?: Logger)\n    {\n    }\n\n    //######################### public methods - implementation of PipeTransform #########################\n\n    /**\n     * Allows casting of `AbstractControl` to `FormControl`\n     * @param value - `AbstractControl` to be cast to `FormControl`\n     * @param _valueHash - Parameter that can be used to change value, indicates that pipe input value has changed\n     */\n    public transform<TModel>(value: AbstractControl<TModel>|null|undefined, _valueHash?: any): FormControl<TModel>|null\n    {\n        if(isBlank(value))\n        {\n            return null;\n        }\n\n        if(value instanceof FormControl)\n        {\n            return value as FormControl<TModel>;\n        }\n\n        this._logger?.warn('Failed to cast AbstractControl to FormControl');\n\n        return null;\n    }\n}"],"names":["FormBlockLayoutEditorMetadata","constructor","metaInfo","name","description","group","optionsMetadata","propertiesMetadata","modelType","ComponentStylingModel","propertiesControls","ComponentStylingPropertiesControlComponent","addDescendant","metadata","options","content","canDropMetadata","getChildrenContainer","element","querySelector","getDescendants","removeDescendant","_","Object","freeze","this","AsFormControlPipe","_logger","transform","value","_valueHash","isBlank","FormControl","warn","LOGGER"],"sourceRoot":""}