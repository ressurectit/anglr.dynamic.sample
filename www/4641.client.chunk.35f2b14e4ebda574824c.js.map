{"version":3,"file":"4641.client.chunk.35f2b14e4ebda574824c.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.model.ts","webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.html","webpack://ng-universal-demo/../../../layout-relations/src/dynamicItems/componentInputs/node/componentInputsNode.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/layout-relations/src/dynamicItems/componentInputs/node/componentInputsNode.component.html","webpack://ng-universal-demo/../../../layout-relations/src/dynamicItems/componentInputs/metadata/componentInputs.relationsMetadata.ts"],"sourcesContent":["import {mapValuesToThis} from '@jscrpt/common';\n\nimport {ComponentEndpointDef} from '../../interfaces';\n\n/**\n * Component endopoint model\n */\nexport class ComponentEndpointModel<TValue = any> implements ComponentEndpointDef<TValue>\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public defaultValue: TValue|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public name: string = '';\n\n    /**\n     * @inheritdoc\n     */\n    public skipInit: boolean = false;\n    \n    //######################### constructor #########################\n    constructor(value: ComponentEndpointDef|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TitledDialogService, TITLED_DIALOG_DATA} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {CodeEditorContent, CodeEditorDialogComponent, CodeEditorDialogData, getJson, JsonLanguageModel} from '@anglr/dynamic';\nimport {extend, isPresent} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ComponentEndpointDef} from '../../interfaces';\nimport {ComponentEndpointModel} from './configureNodeEndpoint.model';\nimport {ConfigureNodeEndpointData} from './configureNodeEndpoint.interface';\n\n/**\n * Component used for configuring node endpoint\n */\n@Component(\n{\n    selector: 'configure-node-endpoint',\n    templateUrl: 'configureNodeEndpoint.component.html',\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n        MatDialogModule,\n        CommonModule,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigureNodeEndpointSAComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of form group that is bound to form\n     */\n    protected form: FormGroup<FormModelGroup<ComponentEndpointDef>>;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: ConfigureNodeEndpointData,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,)\n    {\n\n        this.form = formModelBuilder.build<ComponentEndpointDef>(new ComponentEndpointModel(data));\n        this.form.valueChanges.subscribe(value => extend(data, value));\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows code editor\n     */\n    protected async showCodeEditor(): Promise<void>\n    {\n        const content = isPresent(this.data.defaultValue) ? JSON.stringify(this.data.defaultValue, null, 4) : '';\n\n        const result = await lastValueFrom(this.dialog.open<CodeEditorDialogComponent, CodeEditorDialogData, CodeEditorContent|null>(CodeEditorDialogComponent,\n        {\n            title: 'Code editor',\n            width: '75vw',\n            height: '75vh',\n            data: \n            {\n                content,\n                languageModel: JsonLanguageModel,\n\n            }\n        }).afterClosed());\n\n        if(isPresent(result))\n        {\n            this.data.defaultValue = getJson(result.content);\n        }\n    }\n}",null,"import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RelationsNode, RelationsNodeBase, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent} from '@anglr/dynamic/relations-editor';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {extend} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ComponentInputsRelationsOptions} from '../componentInputs.options';\nimport {ConfigureNodeEndpointData, ConfigureNodeEndpointSAComponent} from '../../../components';\n\n/**\n * Relations node component for component inputs\n */\n@Component(\n{\n    selector: 'component-inputs-node',\n    templateUrl: 'componentInputsNode.component.html',\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComponentInputsNodeSAComponent extends RelationsNodeBase<ComponentInputsRelationsOptions> implements RelationsNode<ComponentInputsRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets component inputs\n     */\n    protected get endpoints(): ConfigureNodeEndpointData[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            inputs: []\n        };\n\n        return (this.metadata.relationsOptions.inputs ??= []);\n    }\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new input endpoint\n     */\n    protected async addEndpoint(): Promise<void>\n    {\n        const param: ConfigureNodeEndpointData = \n        {\n            name: '',\n            defaultValue: null,\n            skipInit: false,\n            allowSkipInit: true,\n        };\n\n        if(await this.configureEndpoint(param))\n        {\n            this.endpoints.push(param);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Removes endpoint\n     * @param endpoint - Endpoint to be removed\n     */\n    protected removeEndpoint(endpoint: ConfigureNodeEndpointData): void\n    {\n        const index = this.endpoints.indexOf(endpoint);\n\n        if(index >= 0)\n        {\n            this.endpoints.splice(index, 1);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Configures endpoint\n     * @param endpoint - Endpoint to be configured\n     */\n    protected async configureEndpoint(endpoint: ConfigureNodeEndpointData): Promise<boolean>\n    {\n        const original = JSON.parse(JSON.stringify(endpoint));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureNodeEndpointSAComponent, ConfigureNodeEndpointData, true|undefined|null>(ConfigureNodeEndpointSAComponent,\n        {\n            title: 'configure component input',\n            width: '60vw',\n            data: endpoint\n        }).afterClosed());\n\n        if(!result)\n        {\n            extend(endpoint, original);\n        }\n        else\n        {\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n}",null,"import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {ComponentInputsNodeSAComponent} from '../node/componentInputsNode.component';\n\n/**\n * Component inputs relations metadata\n */\nexport class ComponentInputsRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Component inputs',\n        description: 'Definition of relations component inputs',\n        group: 'Component',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = ComponentInputsNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["ComponentEndpointModel","constructor","value","defaultValue","name","skipInit","mapValuesToThis","this","ConfigureNodeEndpointSAComponent","data","dialog","formModelBuilder","form","build","valueChanges","subscribe","extend","showCodeEditor","content","isPresent","JSON","stringify","result","lastValueFrom","open","CodeEditorDialogComponent","title","width","height","languageModel","JsonLanguageModel","afterClosed","getJson","TITLED_DIALOG_DATA","FormModelBuilder","ReactiveFormsModule","MatDialogModule","CommonModule","ComponentInputsNodeSAComponent","RelationsNodeBase","endpoints","metadata","relationsOptions","inputs","changeDetector","element","super","addEndpoint","param","allowSkipInit","configureEndpoint","push","history","getNewState","removeEndpoint","endpoint","index","indexOf","splice","original","parse","RelationsNodeHeaderSAComponent","RelationNodeOutputSAComponent","ComponentInputsRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze"],"sourceRoot":""}