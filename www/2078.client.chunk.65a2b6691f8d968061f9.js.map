{"version":3,"file":"2078.client.chunk.65a2b6691f8d968061f9.js","mappings":"2UAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAUE,EAAQD,EAAKC,KAAgD,CAAvC,MAAOC,GAAwB,YAAfP,EAAOO,EAAgB,CAAMF,EAAKG,KAAQT,EAAQO,GAAiBG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAAW,CAMxQ,SAASS,EAAsBC,GAAK,SAASC,EAAkCC,GAAK,GAAIC,OAAOD,KAAOA,EAAG,OAAOL,QAAQT,OAAO,IAAIgB,UAAUF,EAAI,uBAAwB,IAAIN,EAAOM,EAAEN,KAAM,OAAOC,QAAQV,QAAQe,EAAER,OAAOI,MAAK,SAAUJ,GAAS,MAAO,CAAEA,MAAOA,EAAOE,KAAMA,EAAQ,GAAI,CAAE,OAAOG,EAAwB,SAAUC,GAAKK,KAAKL,EAAIA,EAAGK,KAAKC,EAAIN,EAAEO,IAAM,EAAGR,EAAsBS,UAAY,CAAER,EAAG,KAAMM,EAAG,KAAMC,KAAM,WAAc,OAAON,EAAkCI,KAAKC,EAAEG,MAAMJ,KAAKL,EAAGU,WAAa,EAAGC,OAAQ,SAAUjB,GAAS,IAAIkB,EAAMP,KAAKL,EAAEW,OAAQ,YAAO,IAAWC,EAAMf,QAAQV,QAAQ,CAAEO,MAAOA,EAAOE,MAAM,IAAQK,EAAkCW,EAAIH,MAAMJ,KAAKL,EAAGU,WAAa,EAAGG,MAAO,SAAUnB,GAAS,IAAIoB,EAAMT,KAAKL,EAAEW,OAAQ,YAAO,IAAWG,EAAMjB,QAAQT,OAAOM,GAASO,EAAkCa,EAAIL,MAAMJ,KAAKL,EAAGU,WAAa,GAAK,IAAIX,EAAsBC,EAAI,CAQn4B,MAAMe,EAEXC,YAAYC,GACVZ,KAAKY,cAAgBA,CACvB,CASAC,MAAMC,GACJ,IA1BuBC,EA0BnBC,EAAQhB,KAEZ,OA5BuBe,EA4BE,YACvB,MAAME,EAAY,IAAI,KAAU,CAAC,GACjC,IAAIC,EAAcD,EAClB,IAGIE,EAHAC,GAA4B,EAC5BC,GAAoB,EAIxB,IACE,IAAK,IAAoFC,EAAhFC,EAnCjB,SAAwBC,GAAY,IAAIC,EAAQC,EAAOC,EAAMC,EAAQ,EAAG,IAAK,oBAAsBC,SAAWH,EAAQG,OAAOC,cAAeH,EAAOE,OAAOE,UAAWH,KAAU,CAAE,GAAIF,GAAS,OAASD,EAASD,EAASE,IAAS,OAAOD,EAAOO,KAAKR,GAAW,GAAIG,GAAQ,OAASF,EAASD,EAASG,IAAQ,OAAO,IAAIjC,EAAsB+B,EAAOO,KAAKR,IAAYE,EAAQ,kBAAmBC,EAAO,YAAc,CAAE,MAAM,IAAI5B,UAAU,+BAAiC,CAmClbkC,CAAejB,EAAMJ,cAAcsB,eAAepB,IAAyBM,IAA8BE,QAAcC,EAAUrB,QAAQX,KAAM6B,GAA4B,EAAO,CACrM,MAAMe,EAAeb,EAAMjC,MAErB+C,EAAcpB,EAAMqB,gBAAgBF,EAAaG,UAEvD,GAAIF,EAAa,CACf,MAAMG,EAAUvB,EAAMwB,uBAAuBL,EAAaG,UAE1DtB,EAAMyB,gBAAgBN,EAAaO,OAAQxB,GAAayB,WAAWP,EAAaG,GAE5EA,aAAmB,OACrBrB,EAAcqB,EAElB,CACF,CAcF,CAbE,MAAOK,GACPvB,GAAoB,EACpBF,EAAiByB,CACnB,CAAE,QACA,IACMxB,GAAiD,MAApBG,EAAUjB,eACnCiB,EAAUjB,SAMpB,CAJE,QACA,GAAIe,EACF,MAAMF,CAEV,CACF,CAEA,OAAOF,CACT,EApEoC,WAAc,IAAI4B,EAAO7C,KAAM8C,EAAOzC,UAAW,OAAO,IAAIb,SAAQ,SAAUV,EAASC,GAAU,IAAIF,EAAMkC,EAAGX,MAAMyC,EAAMC,GAAO,SAAS9D,EAAMK,GAAST,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAAQ,CAAE,SAASJ,EAAO2D,GAAOhE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS2D,EAAM,CAAE5D,OAAM+D,EAAY,GAAI,IAqE/X,CAUAN,gBAAgBO,EAAgBC,GAE9B,IAAKA,EAAMP,SAAWM,EACpB,OAAOC,EAGT,MAAMC,EAAoBlD,KAAKqC,gBAAgBW,EAAeV,UAG9D,OAAIY,EAEED,EAAMP,OAAOS,IAAID,GACZD,EAGAjD,KAAKyC,gBAAgBO,EAAgBC,EAAMP,QAE1CM,EAAeN,OAKpB1C,KAAKyC,gBAAgBO,EAAeN,OAAQO,GAJ1CjD,KAAKyC,gBAAgBO,EAAeN,OAAQO,EAAMG,KAK7D,CAQAf,gBAAgBC,GACd,OAAKA,EAIEA,EAASe,SAASjB,YAHhB,IAIX,CAQAI,uBAAuBF,GACrB,OAAQA,GAAUe,SAASC,aACzB,KAAK,cACH,OAAO,IAAI,KAAU,IAEvB,KAAK,cACH,OAAO,IAAI,KAAU,CAAC,GAExB,QACE,OAAO,IAAI,KAEjB,EAIF5C,EAA4B,KAAO,SAA6C6C,GAC9E,OAAO,IAAKA,GAAK7C,GAA6B,KAAY,KAC5D,EAEAA,EAA4B,MAAuB,KAAsB,CACvE8C,MAAO9C,EACP+C,QAAS/C,EAA4B,O,4WC1IhC,MAAMgD,EAA6B,oBAAqF,mBAAY,WAAW,0DAA+CC,8BAAtE,IAArF,qDAK7BC,EAAgC,oBAA6D,mBAAY,WAAW,kEAAkDC,iCAAzE,IAA7D,qD,+PCsBhCC,EAAoB,cAAuBC,EAAAA,E,kCAO1C,KAAAC,6BAA2DC,EAAAA,EAAAA,IAAOvD,GAKlE,KAAAwD,cAAyBD,EAAAA,EAAAA,IAAOE,EAAAA,GAmBnC,KAAAC,OAAqB,CAAC,CA4DhC,CApDaC,WAAWC,GAEjBA,EAAMC,iBACND,EAAME,kBAENxE,KAAKoE,OAAS,CAAC,CAClB,CAOwBK,SAAM,I,EAAA,c,EAAA,YAE3B,EAAKxD,gBAAkB,EAAK+C,4BAA4BnD,MACxD,CACI6D,IAAIC,EAAAA,EAAAA,IAAW,IACfC,KAAM,YACNC,QAAS,oBACTxB,QAAS,EAAKA,UAGlB,EAAKpC,UAAU6D,aAAaC,WAAU1F,GAAS,EAAKA,MAAQA,IAC5D,EAAKA,MAAQ,EAAK4B,UAAU5B,MAE5B,EAAK6E,aAAeC,EAAAA,EAAAA,OACpB,CACIzB,OAAQ,EAAKsC,SACbC,UACA,CAEI,CACIC,QAASC,EAAAA,EACTC,SAAU,EAAKnE,cAK3B,EAAKoE,eAAeC,eA1BO,E,gLA2B9B,CAKkBC,UAAUC,IAEtBC,EAAAA,EAAAA,GAA6B,WAAYD,GAExCxF,KAAKiB,WAAWyE,WAAW1F,KAAKX,OAAS,CAAC,EAAG,CAACsG,WAAW,GAEhE,G,6DA1FQ7B,KAAoBP,GAApBO,EAAoB,E,qBAApBA,EAAoB8B,UAAAA,CAAAA,CAAAA,eAAAC,YAAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAT7B,CACIpF,EACAqF,EAAAA,EACAC,EAAAA,IACHC,EAAAA,EAAAA,EAAAA,GAAAC,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA,0BAAAA,oCAAAC,SAAAA,SAAAA,EAAAA,GAAA,MC/BLJ,EAAAA,GAAAA,EAAAA,OAAAA,GAAMA,EAAAA,EAAC,UAADA,SAAAA,GAAA,OAAUK,EAAAA,WAAAA,EAAkB,IAC9BL,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,cAAAA,GACJA,EAAAA,M,MADiBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,0BAAAA,MAAAA,EAAAA,QAAAA,KAAAA,EAAAA,QAAAA,QAAAA,CAA4C,kCAAAK,EAAAA,c,gBDuBrDC,EAAAA,GAAkCC,OAAAA,CAAAA,qCAAAC,gBAAAA,K,UAoCrCC,EAAAA,EAAAA,MAAa,4D,UAMbA,EAAAA,EAAAA,MAAa,4DA9BL5C,GAAoB,UAFhC6C,EAAAA,EAAAA,GAAwB/C,IACxBgD,EAAAA,EAAAA,GAAqBlD,IACTI,GEhCb,UAGa+C,EAAa,CAACC,EAAAA,E,mCCFpB,MAAM3B,EAAyB,I,SAAI,GAAe,yB,kDCClD,SAASyB,EAAqBG,GACnC,OAAO,OAAqBA,EAAgB,uBAC9C,C,sICRA,SAASnI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAUE,EAAQD,EAAKC,KAAgD,CAAvC,MAAOC,GAAwB,YAAfP,EAAOO,EAAgB,CAAMF,EAAKG,KAAQT,EAAQO,GAAiBG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAAW,CAExQ,SAAS+H,EAAkBjG,GAAM,OAAO,WAAc,IAAI8B,EAAO7C,KAAM8C,EAAOzC,UAAW,OAAO,IAAIb,SAAQ,SAAUV,EAASC,GAAU,IAAIF,EAAMkC,EAAGX,MAAMyC,EAAMC,GAAO,SAAS9D,EAAMK,GAAST,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAAQ,CAAE,SAASJ,EAAO2D,GAAOhE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS2D,EAAM,CAAE5D,OAAM+D,EAAY,GAAI,CAAG,CAU7X,MAAMgB,EAEXpD,YAAY0E,EAAgB4B,EAAkBjC,EAAUkC,GACtDlH,KAAKqF,eAAiBA,EACtBrF,KAAKiH,iBAAmBA,EACxBjH,KAAKgF,SAAWA,EAChBhF,KAAKkH,OAASA,EAMdlH,KAAK6G,WAAa,GAKlB7G,KAAKmH,aAAc,EAKnBnH,KAAKoH,WAAY,CACnB,CAOIC,cACF,OAAOrH,KAAKiH,gBACd,CAMIK,wBACF,OAAOtH,KAAKqD,OACd,CAOAkE,cACE,IAAIvH,KAAKoH,UAAT,CAIApH,KAAKoH,WAAY,EAEjB,IAAK,MAAMI,KAAOxH,KAAK6G,WACrBW,EAAIC,UAGNzH,KAAK0H,WARL,CASF,CAOAC,WACE,IAAI3G,EAAQhB,KAEZ,OAAOgH,GAAkB,YACvB,GAAIhG,EAAMmG,YACR,OAGFnG,EAAMmG,aAAc,EACpB,MAAMG,EAAoBtG,EAAMsG,kBAIhC,SAHMtG,EAAMyD,eACNzD,EAAM4G,eAERN,EACF,IAAK,MAAMO,KAAa7G,EAAM6F,iBACtBgB,EAAUC,WAAW9G,EAAMgE,SAAUhE,EAAMqG,QAASrG,SAIxDA,EAAM+G,WACd,GAjBOf,EAkBT,CAMAgB,YAAYxC,GACV,IAAIyC,EAASjI,KAEb,OAAOgH,GAAkB,YAEvB,IAAI,OAAO,aAAcxB,EAAS,OAC1ByC,EAAOL,eACb,MAAMN,EAAoBW,EAAOX,kBAEjC,GAAIA,EACF,IAAK,MAAMO,KAAaI,EAAOpB,iBACvBgB,EAAUK,cAAcZ,GAIlC,IAAKW,EAAOd,YACV,aAGIc,EAAOE,iBACf,QAEO3C,GAAQ,OAAO,aAEjB,QAAcA,IACjByC,EAAO1C,UAAUC,EAErB,GAxBOwB,EAyBT,CAMAoB,mBAAmBvB,GACjB7G,KAAK6G,WAAaA,CACpB,CAMAwB,oBACErI,KAAKqF,eAAeC,eACtB,CAOAb,SAAU,CAMVsD,YAAa,CAMbI,kBAAmB,CAOnB5C,UAAU+C,GAAW,CAMrBV,eAAgB,CAMhBF,YAAa,EAIf3D,EAAoB,KAAO,SAAqCR,GAC9D,OAAO,IAAKA,GAAKQ,GAAqB,IAAqB,KAAuB,IAAqB,MAAgB,IAAqB,KAAc,IAAqB,KAAQ,GACzL,EAEAA,EAAoB,KAAsB,KAAqB,CAC7DwE,KAAMxE,EACN+B,SAAU,CAAC,M,kDChMN,SAASY,IACd,OAAO,SAAU8B,EAAQC,GACvB,MAAMC,EAAOD,EACb3I,OAAO6I,eAAeH,EAAQ,GAAGE,UAAc,CAC7CvF,IAAK,WAKH,OAJKnD,KAAK,IAAI0I,aACZ1I,KAAK,IAAI0I,WAAgB,IAAI,KAGxB1I,KAAK,IAAI0I,UAClB,IAEF5I,OAAO6I,eAAeH,EAAQE,EAAM,CAClCvF,IAAK,WACH,OAAOnD,KAAK,IAAI0I,IAClB,EACAE,IAAK,SAAUvJ,GACbW,KAAK,IAAI0I,KAAUrJ,EACnBW,KAAK,GAAG0I,WAAcxI,MACxB,GAEJ,CACF,C,sEC3BA,SAAStB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAUE,EAAQD,EAAKC,KAAgD,CAAvC,MAAOC,GAAwB,YAAfP,EAAOO,EAAgB,CAAMF,EAAKG,KAAQT,EAAQO,GAAiBG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAAW,CAUjQ,MAAM6H,UAAuC,IAClDnG,cAEEkI,SAASxI,WAKTL,KAAK8I,mBAAqB,KAK1B9I,KAAK+I,iBAAmB,IAC1B,CAOAtE,SACE,IA9BuB1D,EA8BnBC,EAAQhB,KAEZ,OAhCuBe,EAgCE,YAClBC,EAAMgE,UAAahE,EAAMsB,UAAatB,EAAMgI,WAIjDhI,EAAM8H,qBAAuB9H,EAAM8H,mBAAqB9H,EAAMgE,SAAS7B,IAAI,IAAoB,OAC/FnC,EAAM+H,mBAAqB/H,EAAM+H,iBAAmB/H,EAAMgE,SAAS7B,IAAI,IAA2B,OAE7FnC,EAAM8H,oBAAuB9H,EAAM+H,mBAIxC/H,EAAM+H,iBAAiBE,kBAAkBjI,EAAMsB,SAASoC,GAAI1D,EAAMgI,gBAE5DhI,EAAM8H,mBAAmB3B,YAE/BnG,EAAM8H,mBAAmBI,gBAAgBlI,EAAMsB,SAASoC,KAC1D,EAjDoC,WAAc,IAAI7B,EAAO7C,KAAM8C,EAAOzC,UAAW,OAAO,IAAIb,SAAQ,SAAUV,EAASC,GAAU,IAAIF,EAAMkC,EAAGX,MAAMyC,EAAMC,GAAO,SAAS9D,EAAMK,GAAST,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAAQ,CAAE,SAASJ,EAAO2D,GAAOhE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS2D,EAAM,CAAE5D,OAAM+D,EAAY,GAAI,IAkD/X,CAMA2E,YACO1H,KAAK8I,oBAAuB9I,KAAK+I,kBAAqB/I,KAAKsC,WAIhEtC,KAAK8I,mBAAmBK,iBAAiBnJ,KAAKsC,SAASoC,IACvD1E,KAAK+I,iBAAiBK,oBAAoBpJ,KAAKsC,SAASoC,IAC1D,E,kBCjEF,SAAS9F,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAUE,EAAQD,EAAKC,KAAgD,CAAvC,MAAOC,GAAwB,YAAfP,EAAOO,EAAgB,CAAMF,EAAKG,KAAQT,EAAQO,GAAiBG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAAW,CAExQ,SAAS+H,EAAkBjG,GAAM,OAAO,WAAc,IAAI8B,EAAO7C,KAAM8C,EAAOzC,UAAW,OAAO,IAAIb,SAAQ,SAAUV,EAASC,GAAU,IAAIF,EAAMkC,EAAGX,MAAMyC,EAAMC,GAAO,SAAS9D,EAAMK,GAAST,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAAQ,CAAE,SAASJ,EAAO2D,GAAOhE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS2D,EAAM,CAAE5D,OAAM+D,EAAY,GAAI,CAAG,C,iBAK7X,MAAMsG,EAEX1I,YAAY2B,GACVtC,KAAKsC,SAAWA,EAKhBtC,KAAKmH,aAAc,CACrB,CAOAW,WAAW9C,EAAUqC,EAAS2B,GAC5B,IAAIhI,EAAQhB,KAEZ,OAAOgH,GAAkB,YACvBhG,EAAMmG,aAAc,EACpBnG,EAAMgE,SAAWA,EACjBhE,EAAMqG,QAAUA,EAChBrG,EAAMgI,SAAWA,QACXhI,EAAMyD,QACd,GANOuC,EAOT,CAMAkB,cAAc7E,GACZ,IAAI4E,EAASjI,KAEb,OAAOgH,GAAkB,YACvBiB,EAAO5E,QAAUA,EAEZ4E,EAAOd,oBAINc,EAAOE,kBACf,GAROnB,EAST,CAMAS,UACEzH,KAAK0H,WACP,CAOAjD,SAAU,CAMV0D,kBAAmB,CAMnBT,YAAa,E","sources":["webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/services/formComponentControlBuilder/formComponentControlBuilder.service.js","webpack://ng-universal-demo/./app/dynamicItems/formBlock/formBlock.metadata.ts","webpack://ng-universal-demo/./app/dynamicItems/formBlock/formBlock.component.ts","webpack://ng-universal-demo/./app/dynamicItems/formBlock/formBlock.component.html","webpack://ng-universal-demo/./app/dynamicItems/formBlock/type.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/misc/tokens.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/decorators/layoutEditorMetadata/layoutEditorMetadata.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/components/layoutComponentBase/layoutComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations/src/decorators/dynamicOutput/dynamicOutput.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations/src/extensions/relationsRegistration/relationsRegistration.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/src/misc/dynamicItemExtensionBase.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function (s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function () { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function (value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function (value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nimport { Injectable } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { LayoutComponentsIteratorService } from '@anglr/dynamic/layout-editor';\nimport { FormComponentControlType } from '../../misc/enums';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@anglr/dynamic/layout-editor\";\nexport class FormComponentControlBuilder {\n  //######################### constructor #########################\n  constructor(_iteratorsSvc) {\n    this._iteratorsSvc = _iteratorsSvc;\n  } //######################### public methods #########################\n\n  /**\n   * Build form group from layout metadata\n   * @param layoutMetadata\n   * @returns\n   */\n\n\n  build(layoutMetadata) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const formGroup = new FormGroup({});\n      let activeGroup = formGroup;\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(_this._iteratorsSvc.getIteratorFor(layoutMetadata)), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const iteratorItem = _step.value;\n\n          const controlName = _this._getControlName(iteratorItem.metadata);\n\n          if (controlName) {\n            const control = _this._getControlForMetadata(iteratorItem.metadata);\n\n            _this._getActiveGroup(iteratorItem.parent, activeGroup).addControl(controlName, control);\n\n            if (control instanceof FormGroup) {\n              activeGroup = control;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return formGroup;\n    })();\n  } //######################### private methods #########################\n\n  /**\n   * Get active form group for specific layout component\n   * @param parentIterator parent layout component iterator item\n   * @param group active form group\n   * @returns\n   */\n\n\n  _getActiveGroup(parentIterator, group) {\n    //Already on root FormGroup\n    if (!group.parent || !parentIterator) {\n      return group;\n    }\n\n    const parentControlName = this._getControlName(parentIterator.metadata); //Parent component is of Form Component control type\n\n\n    if (parentControlName) {\n      //Current group is parent component\n      if (group.parent.get(parentControlName)) {\n        return group;\n      } //We have to find parent form group\n      else {\n        return this._getActiveGroup(parentIterator, group.parent);\n      }\n    } else if (!parentIterator.parent) {\n      return this._getActiveGroup(parentIterator.parent, group.root);\n    } //Parent component is not of Form Component control type\n\n\n    return this._getActiveGroup(parentIterator.parent, group);\n  }\n  /**\n   * Gets component control name\n   * @param metadata component metadata\n   * @returns\n   */\n\n\n  _getControlName(metadata) {\n    if (!metadata) {\n      return null;\n    }\n\n    return metadata.options?.controlName;\n  }\n  /**\n   * Gets specific control for layout component\n   * @param metadata component metadata\n   * @returns\n   */\n\n\n  _getControlForMetadata(metadata) {\n    switch (metadata?.options?.controlType) {\n      case FormComponentControlType.FormArray:\n        return new FormArray([]);\n\n      case FormComponentControlType.FormGroup:\n        return new FormGroup({});\n\n      default:\n        return new FormControl();\n    }\n  }\n\n}\n\nFormComponentControlBuilder.ɵfac = function FormComponentControlBuilder_Factory(t) {\n  return new (t || FormComponentControlBuilder)(i0.ɵɵinject(i1.LayoutComponentsIteratorService));\n};\n\nFormComponentControlBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FormComponentControlBuilder,\n  factory: FormComponentControlBuilder.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormComponentControlBuilder, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.LayoutComponentsIteratorService\n    }];\n  }, null);\n})();","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {LayoutEditorMetadataDescriptor} from '@anglr/dynamic/layout-editor';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\nimport {FormBlockComponentOptions} from './formBlock.options';\n\n/**\n * Form block layout metadata loader\n */\nexport const FormBlockLayoutMetadataLoader: DynamicMetadataLoader<LayoutEditorMetadataDescriptor<FormBlockComponentOptions>> = async () => new (await import('./metadata/formBlock.layoutMetadata')).FormBlockLayoutEditorMetadata();\n\n/**\n * Form block relations metadata loader\n */\nexport const FormBlockRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/formBlock.relationsMetadata')).FormBlockRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, inject, Injector, ValueProvider, SimpleChanges} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {LayoutComponent, LayoutComponentBase, LayoutComponentMetadata, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {LayoutComponentsIteratorService, LayoutEditorMetadata, LayoutEditorMetadataExtractor} from '@anglr/dynamic/layout-editor';\nimport {HostDisplayBlockStyle} from '@anglr/common';\nimport {RelationsEditorMetadata, VoidObject} from '@anglr/dynamic/relations-editor';\nimport {FormComponentControlBuilder, FORM_COMPONENT_CONTROL} from '@anglr/dynamic/form';\nimport {DynamicOutput} from '@anglr/dynamic/relations';\nimport {generateId, nameof} from '@jscrpt/common';\n\nimport {FormBlockComponentOptions} from './formBlock.options';\nimport {FormBlockLayoutMetadataLoader, FormBlockRelationsMetadataLoader} from './formBlock.metadata';\n\n/**\n * Component used for displaying form block\n */\n@Component(\n{\n    selector: 'form-block',\n    templateUrl: 'formBlock.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        LayoutComponentRendererSADirective,\n    ],\n    providers:\n    [\n        FormComponentControlBuilder,\n        LayoutComponentsIteratorService,\n        LayoutEditorMetadataExtractor,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(FormBlockRelationsMetadataLoader)\n@LayoutEditorMetadata(FormBlockLayoutMetadataLoader)\nexport class FormBlockSAComponent<TValue = any> extends LayoutComponentBase<FormBlockComponentOptions> implements LayoutComponent<FormBlockComponentOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Root form group builder\n     */\n    protected formComponentControlBuilder: FormComponentControlBuilder = inject(FormComponentControlBuilder);\n\n    /**\n     * Angular injector for component\n     */\n    protected formInjector: Injector = inject(Injector);\n\n    /**\n     * Instance of root form group\n     */\n    protected formGroup: FormGroup|undefined|null;\n\n    //######################### public properties - dynamic outputs #########################\n\n    /**\n     * Instance of current form value\n     */\n    @DynamicOutput()\n    public value: TValue|undefined|null;\n\n    /**\n     * Occurs when form is submitted\n     */\n    @DynamicOutput()\n    public submit: VoidObject = {};\n\n    //######################### protected methdos - template bindings #########################\n\n    /**\n     * Triggers submit event of form block\n     * @param event - Event that occured\n     */\n    protected submitForm(event: SubmitEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.submit = {};\n    }\n\n    //######################### protected methods - overrides #########################\n    \n    /**\n     * @inheritdoc\n     */\n    protected override async onInit(): Promise<void>\n    {\n        this.formGroup = await this.formComponentControlBuilder.build(<LayoutComponentMetadata<FormBlockComponentOptions>>\n        {\n            id: generateId(10),\n            name: 'formBlock',\n            package: 'sample-components',\n            options: this.options,\n        });\n\n        this.formGroup.valueChanges.subscribe(value => this.value = value);\n        this.value = this.formGroup.value;\n\n        this.formInjector = Injector.create(\n        {\n            parent: this.injector,\n            providers:\n            [\n                <ValueProvider>\n                {\n                    provide: FORM_COMPONENT_CONTROL,\n                    useValue: this.formGroup,\n                }\n            ]\n        });\n\n        this.changeDetector.detectChanges();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override onChanges(changes: SimpleChanges): void\n    {\n        if(nameof<FormBlockSAComponent>('value') in changes)\n        {\n            this.formGroup?.patchValue(this.value ?? {}, {emitEvent: false});\n        }\n    }\n}","<form (submit)=\"submitForm($event)\">\n    <ng-template [layoutComponentRenderer]=\"options?.content\" [layoutComponentRendererInjector]=\"formInjector\"></ng-template>\n</form>","import {RelationsRegistrationExtension} from '@anglr/dynamic/relations';\n\nimport {FormBlockSAComponent} from './formBlock.component';\n\nexport default FormBlockSAComponent;\n\n\nexport const extensions = [RelationsRegistrationExtension];","import { InjectionToken } from '@angular/core';\n/**\n * Injection token for form component control\n */\n\nexport const FORM_COMPONENT_CONTROL = new InjectionToken('FORM_COMPONENT_CONTROL');","import { DynamicClassMetadata } from '@anglr/dynamic';\n/**\n * Sets layout editor metadata to class on which is this decorator applied\n * @param metadataLoader - Layout editor metadata loader function used for obtaining metadata\n */\n\nexport function LayoutEditorMetadata(metadataLoader) {\n  return DynamicClassMetadata(metadataLoader, 'layoutEditorMetadata');\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Optional } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { isEmptyObject, nameof } from '@jscrpt/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Base component for layout component\n */\n\nexport class LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, componentElement, injector, logger) {\n    this.changeDetector = changeDetector;\n    this.componentElement = componentElement;\n    this.injector = injector;\n    this.logger = logger; //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n\n    this.extensions = [];\n    /**\n     * Indication whether initialization was already done\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether was component destroyed\n     */\n\n    this.destroyed = false;\n  } //######################### protected properties #########################\n\n  /**\n   * Gets element that is used within extension\n   */\n\n\n  get element() {\n    return this.componentElement;\n  }\n  /**\n   * Gets options that are used within extension\n   */\n\n\n  get extensionsOptions() {\n    return this.options;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n\n    for (const ext of this.extensions) {\n      ext.destroy();\n    }\n\n    this.onDestroy();\n  } //######################### public methods - implementation of LayoutComponent #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n\n      _this.initialized = true;\n      const extensionsOptions = _this.extensionsOptions;\n      yield _this.onInit();\n      yield _this.onOptionsSet();\n\n      if (extensionsOptions) {\n        for (const extension of _this.extensions) {\n          yield extension.initialize(_this.injector, _this.element, _this);\n        }\n      }\n\n      yield _this.afterInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnChanges(changes) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      //options has changed\n      if (nameof('options') in changes) {\n        yield _this2.onOptionsSet();\n        const extensionsOptions = _this2.extensionsOptions; //set options in extensions\n\n        if (extensionsOptions) {\n          for (const extension of _this2.extensions) {\n            yield extension.optionsChange(extensionsOptions);\n          }\n        }\n\n        if (!_this2.initialized) {\n          return;\n        }\n\n        yield _this2.onOptionsChange();\n      }\n\n      delete changes[nameof('options')];\n\n      if (!isEmptyObject(changes)) {\n        _this2.onChanges(changes);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  registerExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialzation of component, options are already set\n   */\n\n\n  onInit() {}\n  /**\n   * Called right after initialization finished, including extesions\n   */\n\n\n  afterInit() {}\n  /**\n   * Called on change of options, after initialization\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Occurs when some property changes on component\n   * @param _changes - Changes that occured on component\n   */\n\n\n  onChanges(_changes) {}\n  /**\n   * Called everytime options are set, after initialization and later\n   */\n\n\n  onOptionsSet() {}\n  /**\n   * Called when component is being destroyed\n   */\n\n\n  onDestroy() {}\n\n}\n\nLayoutComponentBase.ɵfac = function LayoutComponentBase_Factory(t) {\n  return new (t || LayoutComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nLayoutComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutComponentBase,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","import { Subject } from 'rxjs';\n/**\n * Creates dynamic output for property\n */\n\nexport function DynamicOutput() {\n  return function (target, propertyKey) {\n    const prop = propertyKey;\n    Object.defineProperty(target, `${prop}Change`, {\n      get: function () {\n        if (!this[`ɵ${prop}Change`]) {\n          this[`ɵ${prop}Change`] = new Subject();\n        }\n\n        return this[`ɵ${prop}Change`];\n      }\n    });\n    Object.defineProperty(target, prop, {\n      get: function () {\n        return this[`ɵ${prop}`];\n      },\n      set: function (value) {\n        this[`ɵ${prop}`] = value;\n        this[`${prop}Change`].next();\n      }\n    });\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { RelationsComponentManager, RelationsProcessor } from '../../services';\n/**\n * Extension that allows registration of component for relations\n */\n\nexport class RelationsRegistrationExtension extends DynamicItemExtensionBase {\n  constructor() {\n    //######################### protected properties #########################\n    super(...arguments);\n    /**\n     * Instance of relations processor\n     */\n\n    this.relationsProcessor = null;\n    /**\n     * Instance of component manager\n     */\n\n    this.componentManager = null;\n  } //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  onInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.injector || !_this.metadata || !_this.instance) {\n        return;\n      }\n\n      _this.relationsProcessor ?? (_this.relationsProcessor = _this.injector.get(RelationsProcessor, null));\n      _this.componentManager ?? (_this.componentManager = _this.injector.get(RelationsComponentManager, null));\n\n      if (!_this.relationsProcessor || !_this.componentManager) {\n        return;\n      }\n\n      _this.componentManager.registerComponent(_this.metadata.id, _this.instance);\n\n      yield _this.relationsProcessor.initialized;\n\n      _this.relationsProcessor.updateRelations(_this.metadata.id);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onDestroy() {\n    if (!this.relationsProcessor || !this.componentManager || !this.metadata) {\n      return;\n    }\n\n    this.relationsProcessor.destroyComponent(this.metadata.id);\n    this.componentManager.unregisterComponent(this.metadata.id);\n  }\n\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Dynamic item extension base class\n */\nexport class DynamicItemExtensionBase {\n  //######################### constructor #########################\n  constructor(metadata) {\n    this.metadata = metadata;\n    /**\n     * Indication whether was extension initialized\n     */\n\n    this.initialized = false;\n  } //######################### public methods - implementation of DynamicItemExtension #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  initialize(injector, element, instance) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.initialized = true;\n      _this.injector = injector;\n      _this.element = element;\n      _this.instance = instance;\n      yield _this.onInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  optionsChange(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.options = options;\n\n      if (!_this2.initialized) {\n        return;\n      }\n\n      yield _this2.onOptionsChange();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  destroy() {\n    this.onDestroy();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialization of component\n   */\n\n\n  onInit() {}\n  /**\n   * Called on change of options of component\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Called on destruction of component\n   */\n\n\n  onDestroy() {}\n\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","AsyncFromSyncIterator","s","AsyncFromSyncIteratorContinuation","r","Object","TypeError","this","n","next","prototype","apply","arguments","return","ret","throw","thr","FormComponentControlBuilder","constructor","_iteratorsSvc","build","layoutMetadata","fn","_this","formGroup","activeGroup","_iteratorError","_iteratorAbruptCompletion","_didIteratorError","_step","_iterator","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","call","_asyncIterator","getIteratorFor","iteratorItem","controlName","_getControlName","metadata","control","_getControlForMetadata","_getActiveGroup","parent","addControl","err","self","args","undefined","parentIterator","group","parentControlName","get","root","options","controlType","t","token","factory","FormBlockLayoutMetadataLoader","FormBlockLayoutEditorMetadata","FormBlockRelationsMetadataLoader","FormBlockRelationsEditorMetadata","FormBlockSAComponent","LayoutComponentBase","formComponentControlBuilder","inject","formInjector","Injector","submit","submitForm","event","preventDefault","stopPropagation","onInit","id","generateId","name","package","valueChanges","subscribe","injector","providers","provide","FORM_COMPONENT_CONTROL","useValue","changeDetector","detectChanges","onChanges","changes","nameof","patchValue","emitEvent","selectors","standalone","features","LayoutComponentsIteratorService","LayoutEditorMetadataExtractor","i0","decls","vars","consts","template","ctx","LayoutComponentRendererSADirective","styles","changeDetection","DynamicOutput","RelationsEditorMetadata","LayoutEditorMetadata","extensions","RelationsRegistrationExtension","metadataLoader","_asyncToGenerator","componentElement","logger","initialized","destroyed","element","extensionsOptions","ngOnDestroy","ext","destroy","onDestroy","ngOnInit","onOptionsSet","extension","initialize","afterInit","ngOnChanges","_this2","optionsChange","onOptionsChange","registerExtensions","invalidateVisuals","_changes","type","target","propertyKey","prop","defineProperty","set","super","relationsProcessor","componentManager","instance","registerComponent","updateRelations","destroyComponent","unregisterComponent","DynamicItemExtensionBase"],"sourceRoot":""}