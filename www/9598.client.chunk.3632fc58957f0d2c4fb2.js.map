{"version":3,"file":"9598.client.chunk.3632fc58957f0d2c4fb2.js","mappings":"mVAMO,MAAMA,EAAqC,e,EAAA,G,EAA6D,mBAAY,WAAW,oEAAuDC,sCAA9E,E,+KAA7D,qDCOlD,IAAaC,EAAb,MAoCIC,YAAYC,GAER,MAAMC,EAAQD,EAASE,IAAIC,EAAAA,IAE3BF,EAAMG,OAAOC,WAAUD,GAAUE,KAAKF,OAASA,IAC/CH,EAAMM,KAAKF,WAAUE,IAEbC,QAAQC,IAAIF,GACZD,KAAKC,KAAOA,CAAZ,GAEX,CAOMG,oBAEN,IAxCDC,EAAAA,EAAAA,IAAAA,EADCC,EAAAA,EAAAA,MACD,6DAMAD,EAAAA,EAAAA,IAAAA,EADCC,EAAAA,EAAAA,MACD,kEAMAD,EAAAA,EAAAA,IAAAA,EADCC,EAAAA,EAAAA,MACD,+DAMAD,EAAAA,EAAAA,IAAAA,EADCC,EAAAA,EAAAA,MACD,0DAjCSd,GAAuB,UAFnCe,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,GAAwBlB,IACW,6BAoCVmB,EAAAA,KApCbjB,GCXb,S,kDCGM,SAAUc,IAEZ,OAAO,SAASI,EAAaC,GAEzB,MAAMC,EAAOD,EAEbE,OAAOC,eAAeJ,EACA,GAAGE,UACH,CACIhB,IAAK,WAOD,OALII,KAAK,IAAIY,aAETZ,KAAK,IAAIY,WAAgB,IAAIG,EAAAA,GAG1Bf,KAAK,IAAIY,UACnB,IAG3BC,OAAOC,eAAeJ,EACAE,EACA,CACIhB,IAAK,WAED,OAAOI,KAAK,IAAIY,IACnB,EACDI,IAAK,SAASC,GAEVjB,KAAK,IAAIY,KAAUK,EACnBjB,KAAK,GAAGY,WAAcM,MACzB,GAE9B,CACJ,C","sources":["webpack://ng-universal-demo/./app/dynamicItems/activatedRoute/activatedRoute.metadata.ts","webpack://ng-universal-demo/./app/dynamicItems/activatedRoute/activatedRoute.relations.ts","webpack://ng-universal-demo/./app/dynamicItems/activatedRoute/type.ts","webpack://ng-universal-demo/../../../relations/src/decorators/dynamicOutput/dynamicOutput.decorator.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Activated route relations metadata loader\n */\nexport const ActivatedRouteRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/activatedRoute.relationsMetadata')).ActivatedRouteRelationsEditorMetadata();\n","import {Injector} from '@angular/core';\nimport {ActivatedRoute, Data, Params} from '@angular/router';\nimport {DynamicOutput, PureRelationsComponent, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {ActivatedRouteRelationsMetadataLoader} from './activatedRoute.metadata';\nimport {ActivatedRouteRelationsOptions} from './activatedRoute.options';\n\n/**\n * Activated route relations component\n */\n@PureRelationsComponent()\n@RelationsEditorMetadata(ActivatedRouteRelationsMetadataLoader)\nexport class ActivatedRouteRelations implements RelationsComponent<ActivatedRouteRelationsOptions>\n{\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: ActivatedRouteRelationsOptions|undefined|null;\n\n    //######################### public properties - dynamic outputs #########################\n\n    /**\n     * The matrix parameters scoped to this route.\n     */\n    @DynamicOutput()\n    public params: Params|undefined|null;\n\n    /**\n     * The query parameters shared by all the routes\n     */\n    @DynamicOutput()    \n    public queryParams: Params|undefined|null;\n\n    /**\n     * The URL fragment shared by all the routes\n     */\n    @DynamicOutput()    \n    public fragment: string|undefined|null;\n\n    /**\n     * The static and resolved data of this route\n     */\n    @DynamicOutput()    \n    public data: Data|undefined|null;\n\n    //######################### constructor #########################\n    constructor(injector: Injector,)\n    {\n        const route = injector.get(ActivatedRoute);\n\n        route.params.subscribe(params => this.params = params);\n        route.data.subscribe(data =>\n            {\n                console.log(data);\n                this.data = data;\n            } );\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n    \n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n}","import {ActivatedRouteRelations} from './activatedRoute.relations';\n\nexport default ActivatedRouteRelations;","import {Subject} from 'rxjs';\n\n/**\n * Creates dynamic output for property\n */\nexport function DynamicOutput(): PropertyDecorator\n{\n    return function(target: any, propertyKey: string|symbol)\n    {\n        const prop = propertyKey as string;\n\n        Object.defineProperty(target,\n                              `${prop}Change`,\n                              {\n                                  get: function()\n                                  {\n                                      if(!this[`ɵ${prop}Change`])\n                                      {\n                                          this[`ɵ${prop}Change`] = new Subject<void>();\n                                      }\n\n                                      return this[`ɵ${prop}Change`];\n                                  }\n                              });\n\n        Object.defineProperty(target,\n                              prop,\n                              {\n                                  get: function()\n                                  {\n                                      return this[`ɵ${prop}`];\n                                  },\n                                  set: function(value:any)\n                                  {\n                                      this[`ɵ${prop}`] = value;\n                                      this[`${prop}Change`].next();\n                                  }\n                              });\n    };\n}"],"names":["ActivatedRouteRelationsMetadataLoader","ActivatedRouteRelationsEditorMetadata","ActivatedRouteRelations","constructor","injector","route","get","ActivatedRoute","params","subscribe","this","data","console","log","invalidateVisuals","__decorate","DynamicOutput","PureRelationsComponent","RelationsEditorMetadata","Injector","target","propertyKey","prop","Object","defineProperty","Subject","set","value","next"],"sourceRoot":""}