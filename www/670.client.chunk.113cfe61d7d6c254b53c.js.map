{"version":3,"file":"670.client.chunk.113cfe61d7d6c254b53c.js","mappings":"8UAQM,MAAOA,UAAqCC,EAAAA,EAOrBC,SAAM,I,EAAA,c,EAAA,YAExB,EAAKC,iBAEE,EAAKA,SAASC,2BAA2B,EAAKC,SAASC,MAJtC,E,gLAM9B,ECdL,QAAeC,EAAf,EAEaC,EAAa,CAACC,EAAAA,EAA2BT,EAA8BU,EAAAA,E,6DCD9E,MAAOD,UAAkCR,EAAAA,EAcxBC,SAEfS,KAAKC,eACR,CAKkBC,kBAEfF,KAAKC,eACR,CAOSA,gBAEN,MAAME,EAAUH,KAAKG,QACfC,EAAQJ,KAAKK,SAASC,cAAcF,MAE1C,GAAGJ,KAAKK,QACR,CACI,IAAGE,EAAAA,EAAAA,IAAUP,KAAKQ,cAEd,IAAI,MAAMC,KAAYT,KAAKQ,aAAaE,MAAM,KAEvCD,GAECT,KAAKK,QAAQC,cAAcK,UAAUC,OAAOH,GAOxD,GAFAT,KAAKQ,aAAeL,GAASM,SAE1BN,GAASM,SAER,IAAI,MAAMA,KAAYN,EAAQM,SAASC,MAAM,KAEtCD,GAECT,KAAKK,SAASC,cAAcK,UAAUE,IAAIJ,EAIzD,EAEEF,EAAAA,EAAAA,IAAUH,KAEND,GAASW,UAELP,EAAAA,EAAAA,IAAUJ,EAAQW,OAAOC,UAExBX,EAAMY,aAAeb,EAAQW,OAAOC,SAGrCR,EAAAA,EAAAA,IAAUJ,EAAQW,OAAOG,SAExBb,EAAMc,YAAcf,EAAQW,OAAOG,QAGpCV,EAAAA,EAAAA,IAAUJ,EAAQW,OAAOK,OAExBf,EAAMgB,UAAYjB,EAAQW,OAAOK,MAGlCZ,EAAAA,EAAAA,IAAUJ,EAAQW,OAAOO,QAExBjB,EAAMkB,WAAanB,EAAQW,OAAOO,OAIvClB,GAASoB,WAELhB,EAAAA,EAAAA,IAAUJ,EAAQoB,QAAQR,UAEzBX,EAAMoB,cAAgBrB,EAAQoB,QAAQR,SAGvCR,EAAAA,EAAAA,IAAUJ,EAAQoB,QAAQN,SAEzBb,EAAMqB,aAAetB,EAAQoB,QAAQN,QAGtCV,EAAAA,EAAAA,IAAUJ,EAAQoB,QAAQJ,OAEzBf,EAAMsB,WAAavB,EAAQoB,QAAQJ,MAGpCZ,EAAAA,EAAAA,IAAUJ,EAAQoB,QAAQF,QAEzBjB,EAAMuB,YAAcxB,EAAQoB,QAAQF,OAIzClB,GAASyB,eAELrB,EAAAA,EAAAA,IAAUJ,EAAQyB,YAAYC,YAE7BzB,EAAMyB,SAAW1B,EAAQyB,YAAYC,WAGtCtB,EAAAA,EAAAA,IAAUJ,EAAQyB,YAAYE,cAE7B1B,EAAM0B,WAAa3B,EAAQyB,YAAYE,WAAWC,aAIjE,E","sources":["webpack://ng-universal-demo/../../../layout-relations/src/dynamicItems/customComponent/extensions/customComponentData.extension.ts","webpack://ng-universal-demo/../../../layout-relations/src/dynamicItems/customComponent/type.ts","webpack://ng-universal-demo/../../../layout/src/extensions/componentStyling/componentStyling.extension.ts"],"sourcesContent":["import {DynamicItemExtension, DynamicItemExtensionBase} from '@anglr/dynamic';\n\nimport type {CustomComponentSAComponent} from '../customComponent.component';\nimport {CustomComponentDataExtensionOptions} from '../customComponentExtensions.options';\n\n/**\n * Extension that sets custom component data to instance\n */\nexport class CustomComponentDataExtension extends DynamicItemExtensionBase<CustomComponentDataExtensionOptions, CustomComponentSAComponent> implements DynamicItemExtension<CustomComponentDataExtensionOptions, CustomComponentSAComponent>\n{\n    //######################### public methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override async onInit(): Promise<void>\n    {\n        if(this.instance)\n        {\n            await this.instance.processCustomComponentData(this.metadata.name);\n        }\n    }\n}","// import {RelationsRegistrationExtension} from '@anglr/dynamic/relations';\nimport {ComponentStylingExtension} from '@anglr/dynamic/layout';\n\nimport {IdSetterExtension} from '../../misc/extensions';\nimport {CustomComponentSAComponent} from './customComponent.component';\nimport {CustomComponentDataExtension} from './extensions';\n\nexport default CustomComponentSAComponent;\n\nexport const extensions = [ComponentStylingExtension, CustomComponentDataExtension, IdSetterExtension];","import {DynamicItemExtension, DynamicItemExtensionBase} from '@anglr/dynamic';\nimport {isPresent} from '@jscrpt/common';\n\nimport {ComponentStylingOptions} from '../../interfaces';\n\n/**\n * Extension that applies common component styling to component\n */\nexport class ComponentStylingExtension extends DynamicItemExtensionBase<ComponentStylingOptions> implements DynamicItemExtension<ComponentStylingOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Value of last css class\n     */\n    protected lastCssClass: string|undefined|null;\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override onInit(): void\n    {\n        this._applyStyling();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override onOptionsChange(): void\n    {\n        this._applyStyling();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Applies component styling to element\n     */\n    protected _applyStyling(): void\n    {\n        const options = this.options;\n        const style = this.element?.nativeElement.style;\n\n        if(this.element)\n        {\n            if(isPresent(this.lastCssClass))\n            {\n                for(const cssClass of this.lastCssClass.split(' '))\n                {\n                    if(cssClass)\n                    {\n                        this.element.nativeElement.classList.remove(cssClass);\n                    }\n                }\n            }\n\n            this.lastCssClass = options?.cssClass;\n\n            if(options?.cssClass)\n            {\n                for(const cssClass of options.cssClass.split(' '))\n                {\n                    if(cssClass)\n                    {\n                        this.element?.nativeElement.classList.add(cssClass);\n                    }\n                }\n            }\n        }\n\n        if(isPresent(style))\n        {\n            if(options?.margin)\n            {\n                if(isPresent(options.margin.bottom))\n                {\n                    style.marginBottom = options.margin.bottom;\n                }\n\n                if(isPresent(options.margin.right))\n                {\n                    style.marginRight = options.margin.right;\n                }\n\n                if(isPresent(options.margin.top))\n                {\n                    style.marginTop = options.margin.top;\n                }\n\n                if(isPresent(options.margin.left))\n                {\n                    style.marginLeft = options.margin.left;\n                }\n            }\n\n            if(options?.padding)\n            {\n                if(isPresent(options.padding.bottom))\n                {\n                    style.paddingBottom = options.padding.bottom;\n                }\n\n                if(isPresent(options.padding.right))\n                {\n                    style.paddingRight = options.padding.right;\n                }\n\n                if(isPresent(options.padding.top))\n                {\n                    style.paddingTop = options.padding.top;\n                }\n\n                if(isPresent(options.padding.left))\n                {\n                    style.paddingLeft = options.padding.left;\n                }\n            }\n\n            if(options?.textStyling)\n            {\n                if(isPresent(options.textStyling.fontSize))\n                {\n                    style.fontSize = options.textStyling.fontSize;\n                }\n\n                if(isPresent(options.textStyling.fontWeight))\n                {\n                    style.fontWeight = options.textStyling.fontWeight.toString();\n                }\n            }\n        }\n    }\n}"],"names":["CustomComponentDataExtension","DynamicItemExtensionBase","onInit","instance","processCustomComponentData","metadata","name","CustomComponentSAComponent","extensions","ComponentStylingExtension","IdSetterExtension","this","_applyStyling","onOptionsChange","options","style","element","nativeElement","isPresent","lastCssClass","cssClass","split","classList","remove","add","margin","bottom","marginBottom","right","marginRight","top","marginTop","left","marginLeft","padding","paddingBottom","paddingRight","paddingTop","paddingLeft","textStyling","fontSize","fontWeight","toString"],"sourceRoot":""}