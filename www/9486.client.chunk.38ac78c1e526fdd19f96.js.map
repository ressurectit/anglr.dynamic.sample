{"version":3,"file":"9486.client.chunk.38ac78c1e526fdd19f96.js","mappings":"mMASM,MAAOA,EAGTC,YAAgDC,GAAA,KAAAA,QAAAA,CAE/C,CASMC,UAAkBC,EAA+CC,GAEpE,OAAGC,EAAAA,EAAAA,IAAQF,GAEA,KAGRA,aAAiBG,EAAAA,GAETH,GAGXI,KAAKN,SAASO,KAAK,iDAEZ,KACV,E,iCA7BQT,GAAAA,EAAAA,EAGuBU,EAAAA,GAAMA,I,0CAH7BV,E,6GCJN,MAAMW,EAEXV,cAMEO,KAAKI,SAAW,CACdC,MAAO,aACPC,gBAAiB,CACfC,mBAAoB,CAAC,CACnBC,UAAW,IACXC,mBAAoB,CAAC,QAGzBC,eAAgB,CAAC,GAEnBC,OAAOC,OAAOZ,KAChB,E","sources":["webpack://ng-universal-demo/../../../forms/src/modules/formPipes/pipes/asFormControl/asFormControl.pipe.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-relations/src/dynamicItems/customComponent/metadata/customComponent.layoutMetadata.js"],"sourcesContent":["import {Inject, Optional, Pipe} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Tries to convert `AbstractControl` to `FormControl`\n */\n@Pipe({name: 'asFormControl'})\nexport class AsFormControlPipe\n{\n    //######################### constructors #########################\n    constructor(@Optional() @Inject(LOGGER) private _logger?: Logger)\n    {\n    }\n\n    //######################### public methods - implementation of PipeTransform #########################\n\n    /**\n     * Allows casting of `AbstractControl` to `FormControl`\n     * @param value - `AbstractControl` to be cast to `FormControl`\n     * @param _valueHash - Parameter that can be used to change value, indicates that pipe input value has changed\n     */\n    public transform<TModel>(value: AbstractControl<TModel>|null|undefined, _valueHash?: any): FormControl<TModel>|null\n    {\n        if(isBlank(value))\n        {\n            return null;\n        }\n\n        if(value instanceof FormControl)\n        {\n            return value as FormControl<TModel>;\n        }\n\n        this._logger?.warn('Failed to cast AbstractControl to FormControl');\n\n        return null;\n    }\n}","import { ComponentStylingModel, ComponentStylingPropertiesControlComponent } from '@anglr/dynamic/layout-editor';\n/**\n * Custom component layout metadata\n */\n\nexport class CustomComponentLayoutEditorMetadata {\n  //######################### constructor #########################\n  constructor() {\n    //######################### public properties - implementation of LayoutEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    this.metaInfo = {\n      group: 'Components',\n      optionsMetadata: {\n        propertiesMetadata: [{\n          modelType: ComponentStylingModel,\n          propertiesControls: [ComponentStylingPropertiesControlComponent]\n        }]\n      },\n      defaultOptions: {}\n    };\n    Object.freeze(this);\n  }\n\n}"],"names":["AsFormControlPipe","constructor","_logger","transform","value","_valueHash","isBlank","FormControl","this","warn","LOGGER","CustomComponentLayoutEditorMetadata","metaInfo","group","optionsMetadata","propertiesMetadata","modelType","propertiesControls","defaultOptions","Object","freeze"],"sourceRoot":""}