{"version":3,"file":"5167.client.chunk.104aebb85f1f1f39a0f0.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/deconstruct/node/deconstructNode.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/basic-components/src/dynamicItems/deconstruct/node/deconstructNode.component.html","webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/deconstruct/metadata/deconstruct.relationsMetadata.ts","webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.model.ts","webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.html"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RelationsNode, RelationsNodeBase, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent, RelationNodeInputSAComponent} from '@anglr/dynamic/relations-editor';\nimport {ComponentEndpointDef, ConfigureNodeEndpointData, ConfigureNodeEndpointSAComponent} from '@anglr/dynamic/layout-relations';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {lastValueFrom} from 'rxjs';\n\nimport {DeconstructRelationsOptions} from '../deconstruct.options';\n\n/**\n * Relations node component for deconstruct\n */\n@Component(\n{\n    selector: 'deconstruct-node',\n    templateUrl: 'deconstructNode.component.html',\n    standalone: true,\n    imports:\n    [\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeconstructNodeSAComponent extends RelationsNodeBase<DeconstructRelationsOptions> implements RelationsNode<DeconstructRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets added property names\n     */\n    protected get properties(): ComponentEndpointDef[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            properties: [],\n        };\n\n        return this.metadata.relationsOptions.properties ?? [];\n    }\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new property\n     */\n    protected async addProperty(): Promise<void>\n    {\n        const name: ConfigureNodeEndpointData =\n        {\n            name: `property${this.properties.length + 1}`,\n            defaultValue: undefined,\n            noDefaultValue: true,\n            skipInit: false,\n            allowSkipInit: true,\n        };\n\n        await this.configureEndpoint(name);\n    }\n\n    /**\n     * Removes property\n     * @param name - Name of property to be removed\n     */\n    protected removeProperty(name: string): void\n    {\n        let index: number;\n\n        if(this.metadata?.relationsOptions?.properties && (index = this.metadata.relationsOptions.properties.findIndex(itm => itm.name == name)) >= 0)\n        {\n            this.metadata.relationsOptions.properties.splice(index, 1);\n\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Configures endpoint\n     * @param endpoint - Endpoint to be configured\n     */\n    protected async configureEndpoint(endpoint: ConfigureNodeEndpointData): Promise<boolean>\n    {\n        const newEndpoint = JSON.parse(JSON.stringify(endpoint));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureNodeEndpointSAComponent, ConfigureNodeEndpointData, true|undefined|null>(ConfigureNodeEndpointSAComponent,\n        {\n            title: 'configure property',\n            width: '60vw',\n            data: newEndpoint,\n        }).afterClosed());\n\n        //rename\n        if(result && this.metadata?.relationsOptions)\n        {\n            let index: number;\n\n            if(this.metadata.relationsOptions.properties && (index = this.metadata.relationsOptions.properties.findIndex(itm => itm.name == endpoint.name)) >= 0)\n            {\n                this.metadata.relationsOptions.properties.splice(index, 1);\n                this.metadata.relationsOptions.properties.splice(index, 0, newEndpoint);\n            }\n            else\n            {\n                this.metadata.relationsOptions.properties ??= [];\n                this.metadata.relationsOptions.properties.push(newEndpoint);\n            }\n\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n}",null,"import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {DeconstructNodeSAComponent} from '../node/deconstructNode.component';\n\n/**\n * Deconstruct relations metadata\n */\nexport class DeconstructRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Deconstruct',\n        description: 'Allows deconstruction of object into its properties as outputs',\n        group: 'Data',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = DeconstructNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {mapValuesToThis} from '@jscrpt/common';\n\nimport {ComponentEndpointDef} from '../../interfaces';\n\n/**\n * Component endopoint model\n */\nexport class ComponentEndpointModel<TValue = any> implements ComponentEndpointDef<TValue>\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public defaultValue: TValue|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public name: string = '';\n\n    /**\n     * @inheritdoc\n     */\n    public skipInit: boolean = false;\n    \n    //######################### constructor #########################\n    constructor(value: ComponentEndpointDef|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TitledDialogService, TITLED_DIALOG_DATA} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {CodeEditorContent, CodeEditorDialogComponent, CodeEditorDialogData, getJson, JsonLanguageModel} from '@anglr/dynamic';\nimport {extend, isPresent} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ComponentEndpointDef} from '../../interfaces';\nimport {ComponentEndpointModel} from './configureNodeEndpoint.model';\nimport {ConfigureNodeEndpointData} from './configureNodeEndpoint.interface';\n\n/**\n * Component used for configuring node endpoint\n */\n@Component(\n{\n    selector: 'configure-node-endpoint',\n    templateUrl: 'configureNodeEndpoint.component.html',\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n        MatDialogModule,\n        CommonModule,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigureNodeEndpointSAComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of form group that is bound to form\n     */\n    protected form: FormGroup<FormModelGroup<ComponentEndpointDef>>;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: ConfigureNodeEndpointData,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,)\n    {\n\n        this.form = formModelBuilder.build<ComponentEndpointDef>(new ComponentEndpointModel(data));\n        this.form.valueChanges.subscribe(value => extend(data, value));\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows code editor\n     */\n    protected async showCodeEditor(): Promise<void>\n    {\n        const content = isPresent(this.data.defaultValue) ? JSON.stringify(this.data.defaultValue, null, 4) : '';\n\n        const result = await lastValueFrom(this.dialog.open<CodeEditorDialogComponent, CodeEditorDialogData, CodeEditorContent|null>(CodeEditorDialogComponent,\n        {\n            title: 'Code editor',\n            width: '75vw',\n            height: '75vh',\n            data: \n            {\n                content,\n                languageModel: JsonLanguageModel,\n\n            }\n        }).afterClosed());\n\n        if(isPresent(result))\n        {\n            this.data.defaultValue = getJson(result.content);\n        }\n    }\n}"],"names":["DeconstructNodeSAComponent","RelationsNodeBase","properties","this","metadata","relationsOptions","constructor","changeDetector","element","dialog","super","addProperty","name","length","defaultValue","undefined","noDefaultValue","skipInit","allowSkipInit","configureEndpoint","removeProperty","index","findIndex","itm","splice","history","getNewState","endpoint","newEndpoint","JSON","parse","stringify","result","lastValueFrom","open","ConfigureNodeEndpointSAComponent","title","width","data","afterClosed","push","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","CommonModule","DeconstructRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze","ComponentEndpointModel","value","mapValuesToThis","formModelBuilder","form","build","valueChanges","subscribe","extend","showCodeEditor","content","isPresent","CodeEditorDialogComponent","height","languageModel","JsonLanguageModel","getJson","TITLED_DIALOG_DATA","FormModelBuilder","ReactiveFormsModule","MatDialogModule"],"sourceRoot":""}