{"version":3,"file":"7966.client.chunk.2d7a8ee2d4a9ea946d1d.js","mappings":"+aAAA,U,8BAGI,K,uBAAc,6N,ECqCZ,MAAOA,UAAuCC,EAAAA,EAO7BC,YAEf,GAAGC,KAAKC,kBACR,CACI,MAAMC,EAAyBF,KAAKG,uBAAuBC,QAE3D,IAAIF,EAEA,OAIJ,IAAIA,EAAuBG,wBAAwBL,KAAKM,IACxD,CACI,MAAMC,EAAc,wBAAwBP,KAAKG,uBAAuBG,MAAMN,KAAKM,KAEnFJ,EAAuBG,wBAAvBH,EAAuBG,sBAA0B,CAAC,GAClDH,EAAuBG,sBAAsBL,KAAKM,IAClD,CACIA,GAAIC,EACJC,KAAM,uBACNC,QAAS,oBACTC,YAAaH,EACbH,QAAS,CAAC,EAEjB,CACJ,CACJ,E,6DAlCQP,KAAAA,GAAAA,E,uBAAAA,E,iEAfT,CAEI,CACIc,QAASC,EAAAA,GACTC,WAAY,KAEqBC,EAAAA,EAAAA,IAAOC,EAAAA,EAA4B,CAACC,UAAU,KAC9BC,wBAAwBC,IAAIN,EAAAA,GAA4B,KAAMO,EAAAA,EAAAA,SAAqBA,EAAAA,EAAAA,UAE1GC,EAAAA,EAAmC,QATrE,S,yKDzBJ,iB,IAEA,mC,wBAF0B,4B,CAAA,a,iBCqBlBC,EAAAA,EAAYC,EAAAA,EACZC,EAAAA,G","sources":["webpack://ng-universal-demo/./node_modules/@anglr/dynamic/layout-relations/src/dynamicItems/placeholder/designer/placeholderDesigner.component.html","webpack://ng-universal-demo/../../../layout-relations/src/dynamicItems/placeholder/designer/placeholderDesigner.component.ts"],"sourcesContent":[null,"import {Component, ChangeDetectionStrategy, FactoryProvider, inject, InjectFlags} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LayoutComponent, LayoutComponentRendererSADirective, LAYOUT_COMPONENT_TRANSFORM} from '@anglr/dynamic/layout';\nimport {layoutDesignerComponentTransform} from '@anglr/dynamic/layout-editor';\nimport {HostDisplayBlockStyle} from '@anglr/common';\n\nimport {PlaceholderSAComponent} from '../placeholder.component';\nimport {PlaceholderComponentOptions} from '../placeholder.options';\nimport {CustomComponentSAComponent} from '../../customComponent/customComponent.component';\n\n/**\n * Component used for displaying placeholder designer\n */\n@Component(\n{\n    selector: 'placeholder-designer',\n    templateUrl: 'placeholderDesigner.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        LayoutComponentRendererSADirective,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_COMPONENT_TRANSFORM,\n            useFactory: () =>\n            {\n                const customComponentOwner = inject(CustomComponentSAComponent, {optional: true});\n                const isDesignTime = !!customComponentOwner?.customComponentInjector.get(LAYOUT_COMPONENT_TRANSFORM, null, InjectFlags.Optional|InjectFlags.SkipSelf);\n\n                return isDesignTime ? layoutDesignerComponentTransform : null;\n            }\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaceholderDesignerSAComponent extends PlaceholderSAComponent implements LayoutComponent<PlaceholderComponentOptions>\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override afterInit(): void\n    {\n        if(this.inCustomComponent)\n        {\n            const customComponentOptions = this.parentCustomComponent?.options;\n\n            if(!customComponentOptions)\n            {\n                return;\n            }\n\n            //placeholder container metadata does not exists yet\n            if(!customComponentOptions.placeholderContainers?.[this.id])\n            {\n                const containerId = `placeholderContainer-${this.parentCustomComponent?.id}-${this.id}`;\n\n                customComponentOptions.placeholderContainers ??= {};\n                customComponentOptions.placeholderContainers[this.id] =\n                {\n                    id: containerId,\n                    name: 'placeholderContainer',\n                    package: 'custom-components',\n                    displayName: containerId,\n                    options: {},\n                };\n            }\n        }\n    }\n}"],"names":["PlaceholderDesignerSAComponent","PlaceholderSAComponent","afterInit","this","inCustomComponent","customComponentOptions","parentCustomComponent","options","placeholderContainers","id","containerId","name","package","displayName","provide","LAYOUT_COMPONENT_TRANSFORM","useFactory","inject","CustomComponentSAComponent","optional","customComponentInjector","get","InjectFlags","layoutDesignerComponentTransform","CommonModule","i1","LayoutComponentRendererSADirective"],"sourceRoot":""}