{"version":3,"file":"9646.client.chunk.4d77d25ba25ffa0eb28b.js","mappings":"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","sources":["webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/gridPanelCell/gridPanelCell.utils.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/gridPanelCell/gridPanelCell.metadata.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/gridPanelCell/gridPanelCell.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/gridPanelCell/type.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/decorators/layoutEditorMetadata/layoutEditorMetadata.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/components/layoutComponentBase/layoutComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/src/decorators/dynamicMetadata/dynamicClassMetadata.decorator.js"],"sourcesContent":["/**\n * Applies CSS styles of element applying grid panel css grid coordinates\n * @param options - Options for grid panel cell component\n * @param styles - CSS styles of element that should be updated\n */\nexport const applyGridCoordinates = (options, style) => {\n  style.gridRowStart = options?.gridRowStart?.toString() ?? '';\n  style.gridRowEnd = options?.gridRowEnd?.toString() ?? '';\n  style.gridColumnStart = options?.gridColumnStart?.toString() ?? '';\n  style.gridColumnEnd = options?.gridColumnEnd?.toString() ?? '';\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Grid panel cell layout metadata loader\n */\nexport const GridPanelCellLayoutMetadataLoader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    return new (yield import('./metadata/gridPanelCell.layoutMetadata')).GridPanelCellLayoutEditorMetadata();\n  });\n\n  return function GridPanelCellLayoutMetadataLoader() {\n    return _ref.apply(this, arguments);\n  };\n}();","import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { LayoutComponentBase, LayoutComponentRendererSADirective } from '@anglr/dynamic/layout';\nimport { LayoutEditorMetadata } from '@anglr/dynamic/layout-editor';\nimport { GridPanelCellLayoutMetadataLoader } from './gridPanelCell.metadata';\nimport { applyGridCoordinates } from './gridPanelCell.utils';\nimport * as i0 from \"@angular/core\";\n/**\n * Component used for displaying grid panel cell\n */\n\nfunction GridPanelCellSAComponent_ng_template_0_Template(rf, ctx) {}\n\nlet GridPanelCellSAComponent = class GridPanelCellSAComponent extends LayoutComponentBase {\n  //######################### protected methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n  onOptionsSet() {\n    const style = this.componentElement.nativeElement.style;\n    applyGridCoordinates(this.options, style);\n  }\n\n};\n\nGridPanelCellSAComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵGridPanelCellSAComponent_BaseFactory;\n  return function GridPanelCellSAComponent_Factory(t) {\n    return (ɵGridPanelCellSAComponent_BaseFactory || (ɵGridPanelCellSAComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GridPanelCellSAComponent)))(t || GridPanelCellSAComponent);\n  };\n}();\n\nGridPanelCellSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelCellSAComponent,\n  selectors: [[\"grid-panel-cell\"]],\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"layoutComponentRenderer\"]],\n  template: function GridPanelCellSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GridPanelCellSAComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"layoutComponentRenderer\", ctx.options == null ? null : ctx.options.component);\n    }\n  },\n  dependencies: [LayoutComponentRendererSADirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\nGridPanelCellSAComponent = __decorate([LayoutEditorMetadata(GridPanelCellLayoutMetadataLoader)], GridPanelCellSAComponent);\nexport { GridPanelCellSAComponent };\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelCellSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'grid-panel-cell',\n      standalone: true,\n      imports: [LayoutComponentRendererSADirective],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-template [layoutComponentRenderer]=\\\"options?.component\\\"></ng-template>\"\n    }]\n  }], null, null);\n})();","import { GridPanelCellSAComponent } from './gridPanelCell.component';\nexport default GridPanelCellSAComponent;","import { DynamicClassMetadata } from '@anglr/dynamic';\n/**\n * Sets layout editor metadata to class on which is this decorator applied\n * @param metadataLoader - Layout editor metadata loader function used for obtaining metadata\n */\n\nexport function LayoutEditorMetadata(metadataLoader) {\n  return DynamicClassMetadata(metadataLoader, 'layoutEditorMetadata');\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Optional } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { isEmptyObject, nameof } from '@jscrpt/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Base component for layout component\n */\n\nexport class LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, componentElement, injector, logger) {\n    this.changeDetector = changeDetector;\n    this.componentElement = componentElement;\n    this.injector = injector;\n    this.logger = logger; //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n\n    this.extensions = [];\n    /**\n     * Indication whether initialization was already done\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether was component destroyed\n     */\n\n    this.destroyed = false;\n  } //######################### protected properties #########################\n\n  /**\n   * Gets element that is used within extension\n   */\n\n\n  get element() {\n    return this.componentElement;\n  }\n  /**\n   * Gets options that are used within extension\n   */\n\n\n  get extensionsOptions() {\n    return this.options;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n\n    for (const ext of this.extensions) {\n      ext.destroy();\n    }\n\n    this.onDestroy();\n  } //######################### public methods - implementation of LayoutComponent #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n\n      _this.initialized = true;\n      const extensionsOptions = _this.extensionsOptions;\n      yield _this.onInit();\n      yield _this.onOptionsSet();\n\n      if (extensionsOptions) {\n        for (const extension of _this.extensions) {\n          yield extension.initialize(_this.injector, _this.element, _this);\n        }\n      }\n\n      yield _this.afterInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnChanges(changes) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      //options has changed\n      if (nameof('options') in changes) {\n        yield _this2.onOptionsSet();\n        const extensionsOptions = _this2.extensionsOptions; //set options in extensions\n\n        if (extensionsOptions) {\n          for (const extension of _this2.extensions) {\n            yield extension.optionsChange(extensionsOptions);\n          }\n        }\n\n        if (!_this2.initialized) {\n          return;\n        }\n\n        yield _this2.onOptionsChange();\n      }\n\n      delete changes[nameof('options')];\n\n      if (!isEmptyObject(changes)) {\n        _this2.onChanges(changes);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  registerExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialzation of component, options are already set\n   */\n\n\n  onInit() {}\n  /**\n   * Called right after initialization finished, including extesions\n   */\n\n\n  afterInit() {}\n  /**\n   * Called on change of options, after initialization\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Occurs when some property changes on component\n   * @param _changes - Changes that occured on component\n   */\n\n\n  onChanges(_changes) {}\n  /**\n   * Called everytime options are set, after initialization and later\n   */\n\n\n  onOptionsSet() {}\n  /**\n   * Called when component is being destroyed\n   */\n\n\n  onDestroy() {}\n\n}\n\nLayoutComponentBase.ɵfac = function LayoutComponentBase_Factory(t) {\n  return new (t || LayoutComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nLayoutComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutComponentBase,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","//TODO: rework also with symbol\n\n/**\n * Sets dynamic metadata to class on which is this decorator applied\n * @param metadataLoader - Metadata loader function used for obtaining metadata\n * @param propertyName - Name of property where will be metadata instance stored\n */\nexport function DynamicClassMetadata(metadataLoader, propertyName) {\n  if (ngDesignerMetadata) {\n    return function (target) {\n      target[propertyName] = metadataLoader();\n      return target;\n    };\n  }\n\n  return function (target) {\n    return target;\n  };\n}"],"names":["applyGridCoordinates","options","style","gridRowStart","toString","gridRowEnd","gridColumnStart","gridColumnEnd","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","GridPanelCellLayoutMetadataLoader","fn","_ref","GridPanelCellLayoutEditorMetadata","self","this","args","arguments","apply","err","undefined","GridPanelCellSAComponent_ng_template_0_Template","rf","ctx","GridPanelCellSAComponent","onOptionsSet","componentElement","nativeElement","t","type","selectors","standalone","features","decls","vars","consts","template","component","dependencies","encapsulation","changeDetection","LayoutEditorMetadata","metadataLoader","_asyncToGenerator","LayoutComponentBase","constructor","changeDetector","injector","logger","extensions","initialized","destroyed","element","extensionsOptions","ngOnDestroy","ext","destroy","onDestroy","ngOnInit","_this","onInit","extension","initialize","afterInit","ngOnChanges","changes","_this2","optionsChange","onOptionsChange","onChanges","registerExtensions","invalidateVisuals","detectChanges","_changes","DynamicClassMetadata","propertyName","target"],"sourceRoot":""}