{"version":3,"file":"3048.client.chunk.ab547b6f6562cec10788.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./content/l10n/ lazy ^\\.\\/.*\\.json$ namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/css-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/handlebars-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/material-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/rest-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/tinymce-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./app/components/dynamicContent/dynamicContent.component.html","webpack://ng-universal-demo/./app/components/dynamicContent/dynamicContent.component.ts","webpack://ng-universal-demo/./app/components/userSettings/userSettings.component.ts","webpack://ng-universal-demo/./app/components/userSettings/userSettings.component.html","webpack://ng-universal-demo/./app/dynamicItems/services/sampleDynamicModuleItemsProvider/sampleDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/./app/dynamicItems/services/sampleDynamicModuleRelationsProvider/sampleDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/./app/dynamicItems/services/sampleDynamicModuleTypesProvider/sampleDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/./app/dynamicItems/providers.ts","webpack://ng-universal-demo/./app/dynamicItems/utils.ts","webpack://ng-universal-demo/./app/hacks.ts","webpack://ng-universal-demo/./app/boot/app.component.animations.ts","webpack://ng-universal-demo/./app/misc/demo.ts","webpack://ng-universal-demo/./app/modules/menu/components/mainMenu/mainMenu.component.html","webpack://ng-universal-demo/./app/modules/menu/components/mainMenu/mainMenu.component.ts","webpack://ng-universal-demo/./app/boot/app.component.html","webpack://ng-universal-demo/./app/boot/app.component.ts","webpack://ng-universal-demo/./app/pages/accessDenied/accessDenied.route.ts","webpack://ng-universal-demo/./app/boot/app.component.routes.ts","webpack://ng-universal-demo/./app/pages/notFound/notFound.route.ts","webpack://ng-universal-demo/./app/services/globalization/globalization.service.ts","webpack://ng-universal-demo/./app/services/api/restLogger/restLogger.service.ts","webpack://ng-universal-demo/./app/services/api/account/account.service.ts","webpack://ng-universal-demo/./app/services/api/account/accountAuth.options.ts","webpack://ng-universal-demo/./app/services/api/restMockLogger/restMockLogger.service.ts","webpack://ng-universal-demo/./app/boot/app.config.ts","webpack://ng-universal-demo/./app/misc/constants.ts","webpack://ng-universal-demo/./app/services/webpackTranslateLoader/webpackTranslateLoader.service.ts","webpack://ng-universal-demo/./app/services/missingTranslation/missingTranslation.service.ts","webpack://ng-universal-demo/./app/boot/app.module.ts","webpack://ng-universal-demo/./app/boot/browser-app.module.ts","webpack://ng-universal-demo/./app/main.browser.bootstrap.ts","webpack://ng-universal-demo/./app/misc/factories.ts","webpack://ng-universal-demo/./app/misc/tokens.ts","webpack://ng-universal-demo/./app/modules/displayingFeature.module.ts","webpack://ng-universal-demo/./app/modules/formsFeature.module.ts","webpack://ng-universal-demo/./app/modules/debuggingFeature.module.ts","webpack://ng-universal-demo/./app/modules/gridFeature.module.ts","webpack://ng-universal-demo/./app/modules/menu/modules/menu.module.ts","webpack://ng-universal-demo/./app/services/dynamicRoutes/dynamicRoutes.model.ts","webpack://ng-universal-demo/./app/services/dynamicRoutes/dynamicRoutes.service.ts","webpack://ng-universal-demo/./app/services/settings/settings.service.ts","webpack://ng-universal-demo/./app/services/settings/localSettingsStorage.ts","webpack://ng-universal-demo/./app/services/storeData/storeData.service.ts"],"sourcesContent":["var map = {\n\t\"./formBlock/type\": [\n\t\t42078,\n\t\t2078\n\t],\n\t\"./gridTable/type\": [\n\t\t62908,\n\t\t3930,\n\t\t2908\n\t],\n\t\"./submitButton/type\": [\n\t\t64438,\n\t\t4438\n\t],\n\t\"./triggerData/type\": [\n\t\t86963,\n\t\t6963\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9235;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en.json\": [\n\t\t79587,\n\t\t9587\n\t],\n\t\"./sk.json\": [\n\t\t5930,\n\t\t5930\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 25048;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./button/type\": [\n\t\t51430,\n\t\t1430\n\t],\n\t\"./firstNonNull/type\": [\n\t\t52223,\n\t\t7379\n\t],\n\t\"./gridPanel/type\": [\n\t\t34930,\n\t\t4930\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t89646,\n\t\t9646\n\t],\n\t\"./htmlBlock/type\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./ifBlock/type\": [\n\t\t70695,\n\t\t695\n\t],\n\t\"./listBlock/type\": [\n\t\t29199,\n\t\t9199\n\t],\n\t\"./logicalAnd/type\": [\n\t\t23874,\n\t\t3874\n\t],\n\t\"./logicalOr/type\": [\n\t\t54647,\n\t\t4647\n\t],\n\t\"./negation/type\": [\n\t\t58333,\n\t\t8333\n\t],\n\t\"./notFound/type\": [\n\t\t12703,\n\t\t2703\n\t],\n\t\"./stackPanel/type\": [\n\t\t66849,\n\t\t6849\n\t],\n\t\"./templateBlock/type\": [\n\t\t84383,\n\t\t4383\n\t],\n\t\"./textBlock/type\": [\n\t\t44451,\n\t\t4451\n\t],\n\t\"./toggleButton/type\": [\n\t\t89598,\n\t\t9598\n\t],\n\t\"./transformData/type\": [\n\t\t67542,\n\t\t7542\n\t],\n\t\"./value/type\": [\n\t\t57689,\n\t\t8640\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 75952;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./styleBlock/type\": [\n\t\t16229,\n\t\t6229,\n\t\t7730\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50275;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./checkbox/type\": [\n\t\t82223,\n\t\t2223\n\t],\n\t\"./datepicker/type\": [\n\t\t74136,\n\t\t4136\n\t],\n\t\"./formGroup/type\": [\n\t\t14714,\n\t\t4714\n\t],\n\t\"./numberField/type\": [\n\t\t65968,\n\t\t3082\n\t],\n\t\"./period/type\": [\n\t\t93863,\n\t\t3863\n\t],\n\t\"./radio/type\": [\n\t\t20045,\n\t\t45\n\t],\n\t\"./select/type\": [\n\t\t52340,\n\t\t2340\n\t],\n\t\"./textField/type\": [\n\t\t24414,\n\t\t4414\n\t],\n\t\"./textarea/type\": [\n\t\t98843,\n\t\t8843\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 45297;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./dataBlock/type\": [\n\t\t42618,\n\t\t9880,\n\t\t2618\n\t],\n\t\"./dataTemplate/type\": [\n\t\t48112,\n\t\t9880,\n\t\t8112\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 45748;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./checkbox/type\": [\n\t\t16602,\n\t\t6602\n\t],\n\t\"./datepicker/type\": [\n\t\t81527,\n\t\t1694,\n\t\t3978,\n\t\t5705,\n\t\t1527\n\t],\n\t\"./expansionPanel/type\": [\n\t\t58179,\n\t\t8179\n\t],\n\t\"./numberField/type\": [\n\t\t14456,\n\t\t1694,\n\t\t3978,\n\t\t4456\n\t],\n\t\"./period/type\": [\n\t\t74375,\n\t\t1694,\n\t\t3978,\n\t\t4375\n\t],\n\t\"./radio/type\": [\n\t\t26336,\n\t\t6336\n\t],\n\t\"./select/type\": [\n\t\t58357,\n\t\t1694,\n\t\t8357\n\t],\n\t\"./textField/type\": [\n\t\t26083,\n\t\t1694,\n\t\t3978,\n\t\t6083\n\t],\n\t\"./textarea/type\": [\n\t\t48057,\n\t\t1694,\n\t\t3978,\n\t\t8057\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3958;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./rest/type\": [\n\t\t86913,\n\t\t6913\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 95180;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./richTextBlock/type\": [\n\t\t83296,\n\t\t3296\n\t],\n\t\"./richTextSource/type\": [\n\t\t25697,\n\t\t5697\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 75556;\nmodule.exports = webpackAsyncContext;","<a class=\"btn btn-primary\" [routerLink]=\"['/admin/layout', template]\" *authorize=\"'layoutEditor-page'\">\n    <span>edit layout</span>\n</a>\n\n<a class=\"btn btn-primary\" [routerLink]=\"['/admin/relations', template]\" *authorize=\"'relationsEditor-page'\">\n    <span>edit relations</span>\n</a>\n\n<ng-container [layoutComponentRenderer]=\"metadata\"></ng-container>","import {Component, ChangeDetectionStrategy, FactoryProvider, OnInit} from '@angular/core';\nimport {ActivatedRoute, RouterModule} from '@angular/router';\nimport {provideLayoutRelationsCustomComponents} from '@anglr/dynamic/layout-relations';\nimport {provideCssLayoutRelations} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelations} from '@anglr/dynamic/handlebars-components';\nimport {provideRestLayoutRelations} from '@anglr/dynamic/rest-components';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {RelationsManager, RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {AuthorizationModule} from '@anglr/authentication';\nimport {provideFormLayoutRelations} from '@anglr/dynamic/form';\nimport {nameof} from '@jscrpt/common';\n\nimport {LayoutRelationsMetadata} from '../../misc/interfaces';\nimport {StoreDataService} from '../../services/storeData';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DynamicRouteData} from '../../services/dynamicRoutes';\nimport {provideSampleLayoutRelations} from '../../dynamicItems/utils';\n\n/**\n * Component used displaying dynamic content pages\n */\n@Component(\n{\n    selector: 'dynamic-content-view',\n    templateUrl: 'dynamicContent.component.html',\n    // styleUrls: ['dynamicContent.component.scss'],\n    standalone: true,\n    imports:\n    [\n        RouterModule,\n        AuthorizationModule,\n        LayoutComponentRendererSADirective,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout ?? null),\n            deps: [StoreDataService]\n        },\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)?.relations ?? null),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelationsCustomComponents(),\n        provideCssLayoutRelations(),\n        provideTinyMceLayoutRelations(),\n        provideHandlebarsLayoutRelations(),\n        provideRestLayoutRelations(),\n        provideFormLayoutRelations(),\n        provideSampleLayoutRelations(),\n        createStoreDataServiceFactory('DYNAMIC_CONTENT_DATA'),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicContentSAComponent implements OnInit\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Current template that is being displayed\n     */\n    protected template: string|undefined|null;\n\n    /**\n     * Current metadata\n     */\n    protected metadata: LayoutComponentMetadata|null = null;\n\n    //######################### constructor #########################\n    constructor(private _route: ActivatedRoute,\n                private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._route.data.subscribe(data =>\n        {\n            this.template = data[nameof<DynamicRouteData>('template')];\n\n            if(this.template)\n            {\n                const metadata = this._store.getData(this.template); \n                this.metadata = metadata?.layout ?? null;\n                this._relationsManager.setRelations(metadata?.relations ?? []);\n            }\n        });\n    }\n}","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {FormGroup, FormBuilder} from '@angular/forms';\nimport {DebugDataEnabledService} from '@anglr/common';\nimport {ConsoleSinkConfigService} from '@anglr/common/structured-log';\nimport {ValueNamePair} from '@jscrpt/common';\nimport {LogEventLevel} from 'structured-log';\n\nimport {config, SettingsGeneral, SettingsDebug, LanguageDef} from '../../config';\nimport {SettingsService} from '../../services/settings';\nimport {DisplayingFeatureModule} from '../../modules/displayingFeature.module';\nimport {FormsFeatureModule} from '../../modules/formsFeature.module';\n\n/**\n * Available sections for user settings\n */\nenum UserSettingsSections\n{\n    /**\n     * General user settings\n     */\n    General,\n\n    /**\n     * Loggers settings\n     */\n    Logging,\n\n    /**\n     * Debugging settings\n     */\n    Debugging\n}\n\ninterface SettingsLoggingEnum\n{\n    /**\n     * Minimal log level for console sink\n     */\n    consoleLogLevel: LogEventLevel;\n}\n\n/**\n * User settings component\n */\n@Component(\n{\n    selector: 'user-settings',\n    templateUrl: 'userSettings.component.html',\n    styleUrls: ['userSettings.component.scss'],\n    standalone: true,\n    imports:\n    [\n        DisplayingFeatureModule,\n        FormsFeatureModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserSettingsSAComponent\n{\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Array of available themes\n     */\n    public themes: string[] = config.configuration?.themes ?? [];\n\n    /**\n     * Array of language definitions\n     */\n    public languages: LanguageDef[] = config.configuration?.languages ?? [];\n\n    /**\n     * Available log levels\n     */\n    public logLevels: ValueNamePair[] = [];\n\n    /**\n     * Form group for general settings\n     */\n    public generalSettingsForm: FormGroup;\n\n    /**\n     * Form group for debugging settings\n     */\n    public debuggingSettingsForm: FormGroup;\n\n    /**\n     * Form group for logging settings\n     */\n    public loggingSettingsForm: FormGroup;\n\n    /**\n     * Active section\n     */\n    public activeSection: UserSettingsSections = UserSettingsSections.General;\n\n    /**\n     * User settings section enum\n     */\n    public UserSettingsSections = UserSettingsSections;\n\n    //######################### constructors #########################\n    constructor(settingsSvc: SettingsService,\n                formBuilder: FormBuilder,\n                consoleConfig: ConsoleSinkConfigService,\n                debugDataEnabled: DebugDataEnabledService)\n    {\n        const settings = settingsSvc.settings;\n        const debuggingSettings = settingsSvc.settingsDebugging;\n        const loggingSettings = settingsSvc.settingsLogging;\n        \n        this._getLogLevels();\n\n        this.generalSettingsForm = formBuilder.group(\n        <SettingsGeneral>\n        {\n            language: settings.language,\n            theme: settings.theme\n        });\n\n        this.debuggingSettingsForm = formBuilder.group(\n        <SettingsDebug>\n        {\n            consoleEnabled: debuggingSettings.consoleEnabled,\n            debugData: debuggingSettings.debugData\n        });\n\n        this.loggingSettingsForm = formBuilder.group(\n        <SettingsLoggingEnum>\n        {\n            consoleLogLevel: LogEventLevel[loggingSettings.consoleLogLevel as any] as any,\n            //TODO: solve typings\n        });\n\n        this.generalSettingsForm.valueChanges.subscribe((generalSettings: SettingsGeneral) =>\n        {\n            settingsSvc.setSettings(generalSettings);\n        });\n\n        this.debuggingSettingsForm.valueChanges.subscribe((debugSettings: SettingsDebug) =>\n        {\n            debugDataEnabled.setEnabled(debugSettings.debugData);\n\n            settingsSvc.setDebuggingSettings(debugSettings);\n        });\n        \n        this.loggingSettingsForm.valueChanges.subscribe((loggingSettings: SettingsLoggingEnum) =>\n        {\n            consoleConfig.restrictToLevel = +loggingSettings.consoleLogLevel;\n\n            settingsSvc.setLoggingSettings(\n            {\n                consoleLogLevel: LogEventLevel[+loggingSettings.consoleLogLevel],\n            });\n        });\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Gets available log levels\n     */\n    private _getLogLevels(): void\n    {\n        Object.keys(LogEventLevel).forEach(val =>\n        {\n            if(!isNaN(+val))\n            {\n                this.logLevels.push(\n                {\n                    name: LogEventLevel[val as any] as any,//TODO: solve typings\n                    value: val\n                });\n            }\n        });\n    }\n}","<div class=\"flex-column settings-menu\">\r\n    <a class=\"btn-line\"\r\n       [class.active]=\"activeSection == UserSettingsSections.General\"\r\n       (click)=\"activeSection = UserSettingsSections.General\">\r\n        <span class=\"fas fa-cog\"></span>\r\n        <span>{{'general' | translate}}</span>\r\n    </a>\r\n\r\n    <a class=\"btn-line\"\r\n       [class.active]=\"activeSection == UserSettingsSections.Logging\"\r\n       (click)=\"activeSection = UserSettingsSections.Logging\"\r\n       *authorize=\"'logging-settings'\">\r\n        <span class=\"fas fa-pen\"></span>\r\n        <span>{{'logging' | translate}}</span>\r\n    </a>\r\n\r\n    <a class=\"btn-line\"\r\n       [class.active]=\"activeSection == UserSettingsSections.Debugging\"\r\n       (click)=\"activeSection = UserSettingsSections.Debugging\"\r\n       *authorize=\"'debug-settings'\">\r\n        <span class=\"fas fa-bug\"></span>\r\n        <span>{{'debug' | translate}}</span>\r\n    </a>\r\n</div>\r\n\r\n<div>\r\n    <!-- GENERAL SETTIGNS -->\r\n    <div class=\"settings-items\" [formGroup]=\"generalSettingsForm\" *ngIf=\"activeSection == UserSettingsSections.General\">\r\n        <!-- THEME -->\r\n        <div class=\"text-capitalize\">{{'theme' | translate}}</div>\r\n\r\n        <div>\r\n            <ng-select formControlName=\"theme\">\r\n                <ng-option *ngFor=\"let theme of themes\" [text]=\"theme | translate\" [value]=\"theme\"></ng-option>\r\n            </ng-select>\r\n        </div>\r\n\r\n        <!-- LANGUAGE -->\r\n        <div class=\"text-capitalize\">{{'language' | translate}}</div>\r\n\r\n        <div>\r\n            <ng-select formControlName=\"language\">\r\n                <ng-option *ngFor=\"let lang of languages\" [text]=\"lang?.name | asRequired\" [value]=\"lang?.lang\"></ng-option>\r\n            </ng-select>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- LOGGING SETTIGNS -->\r\n    <div class=\"settings-items\" [formGroup]=\"loggingSettingsForm\" *ngIf=\"activeSection == UserSettingsSections.Logging\">\r\n        <!-- CONSOLE LOG LEVEL -->\r\n        <div class=\"text-capitalize\">{{'console log' | translate}}</div>\r\n\r\n        <div>\r\n            <ng-select formControlName=\"consoleLogLevel\">\r\n                <ng-option *ngFor=\"let level of logLevels\" [text]=\"level?.name | asRequired\" [value]=\"level?.value\"></ng-option>\r\n            </ng-select>\r\n        </div>\r\n\r\n        <!-- FILE LOG LEVEL -->\r\n        <ng-template [authorize]=\"'authorized-electron'\">\r\n            <div class=\"text-capitalize\">{{'file log' | translate}}</div>\r\n\r\n            <div>\r\n                <ng-select formControlName=\"fileLogLevel\">\r\n                    <ng-option *ngFor=\"let level of logLevels\" [text]=\"level?.name | asRequired\" [value]=\"level?.value\"></ng-option>\r\n                </ng-select>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n\r\n    <!-- DEBUGGING SETTIGNS -->\r\n    <div class=\"settings-items\" [formGroup]=\"debuggingSettingsForm\" *ngIf=\"activeSection == UserSettingsSections.Debugging\">\r\n        <!-- CONSOLE -->\r\n        <div class=\"text-capitalize\">{{'console' | translate}}</div>\r\n\r\n        <div>\r\n            <mat-slide-toggle formControlName=\"consoleEnabled\"></mat-slide-toggle>\r\n        </div>\r\n\r\n        <!-- DEBUG DATA -->\r\n        <div class=\"text-capitalize\">{{'debug data' | translate}}</div>\r\n\r\n        <div>\r\n            <mat-slide-toggle formControlName=\"debugData\"></mat-slide-toggle>\r\n        </div>\r\n    </div>\r\n</div>","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for sample module items\n */\n@Injectable()\nexport class SampleDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'sample-components':\n            {\n                try\n                {\n                    this._logger?.debug('SampleDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`../../${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('SampleDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for sample types\n */\n@Injectable()\nexport class SampleDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('SampleDynamicModuleRelationsProvider: trying to get relations types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'sample-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('SampleDynamicModuleRelationsProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for sample types\n */\n@Injectable()\nexport class SampleDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('SampleDynamicModuleTypesProvider: trying to get types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'sample-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('SampleDynamicModuleTypesProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {SampleDynamicModuleItemsProvider, SampleDynamicModuleRelationsProvider, SampleDynamicModuleTypesProvider} from './services';\n\n/**\n * Provider for sample package layout components provider\n */\nexport const SAMPLE_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: SampleDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for sample dynamic layout module types provider\n */\nexport const SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: SampleDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for sample dynamic relations types provider\n */\nexport const SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: SampleDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for sample package relations nodes provider\n */\nexport const SAMPLE_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: SampleDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for sample package relations components provider\n */\nexport const SAMPLE_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: SampleDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {SAMPLE_LAYOUT_COMPONENTS_PROVIDER, SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER, SAMPLE_RELATIONS_COMPONENTS_PROVIDER, SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER, SAMPLE_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout sample subpackage\n */\nexport function provideSampleLayout(): Provider[]\n{\n    return [\n        SAMPLE_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations sample subpackage\n */\nexport function provideSampleRelations(): Provider[]\n{\n    return [\n        SAMPLE_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor sample subpackage\n */\nexport function provideSampleLayoutEditor(): Provider[]\n{\n    return [\n        SAMPLE_LAYOUT_COMPONENTS_PROVIDER,\n        SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('sample-components'),\n    ];\n}\n\n/**\n * Providers for relations editor sample subpackage\n */\nexport function provideSampleRelationsEditor(): Provider[]\n{\n    return [\n        SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER,\n        SAMPLE_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('sample-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor sample subpackage\n */\nexport function provideSampleLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideSampleRelationsEditor(),\n        ...provideSampleLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations sample subpackage\n */\nexport function provideSampleLayoutRelations(): Provider[]\n{\n    return [\n        ...provideSampleLayout(),\n        ...provideSampleRelations(),\n    ];\n}","import {isFunction, isBlank, globalDefine} from '@jscrpt/common';\nimport {Observable} from 'rxjs';\n\nimport {config} from './config';\n\nglobalDefine(global =>\n{\n    if(!global.Document)\n    {\n        global.Document = function(){};\n    }\n\n    if(!global.ngDesignerMetadata)\n    {\n        global.ngDesignerMetadata = true;\n    }\n});\n\n//HACK - prevents application crash if no error handler provided\nconst observableSubscribe = Observable.prototype.subscribe;\n\nObservable.prototype.subscribe = <any>function(this: any, next: any, error: any, complete: any)\n{\n    if(isBlank(error) || !isFunction(error))\n    {\n        error = (err: any) => \n        {\n            if(config.configuration.debug)\n            {\n                console.log(err);\n            }\n        };\n    }\n\n    return observableSubscribe.call(this, next, error, complete);\n};","import {trigger, transition, query, animate, style, animateChild, group} from '@angular/animations';\n\n/**\n * Animations run when changing route\n */\nexport const routeAnimationTrigger = trigger('routeAnimations',\n[\n    transition('void <=> *, none <=> *',\n    [\n        query(':enter', animateChild(), {optional: true})\n    ]),\n    transition('* => login',\n    [\n        query('.main-content',\n        [\n            style(\n            {\n                position: 'relative',\n                perspective: '10000px'\n            }),\n            query(':enter, :leave',\n            [\n                style(\n                {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%'\n                })\n            ]),\n            query(':enter',\n            [\n                style(\n                {\n                    transform: 'rotateY(-90deg)',\n                    opacity: 0\n                })\n            ]),\n            query(':leave', animateChild()),\n            group(\n            [\n                query(':leave',\n                [\n                    animate('350ms ease-out', style(\n                    {\n                        transform: 'rotateY(90deg)',\n                        opacity: 0\n                    }))\n                ]),\n                query(':enter',\n                [\n                    animate('350ms 350ms ease-out', style(\n                    {\n                        transform: 'rotateY(0)',\n                        opacity: 1\n                    }))\n                ])\n            ]),\n            query(':enter', animateChild())\n        ])\n    ]),\n    transition('login => *',\n    [\n        query('.main-content',\n        [\n            style(\n            {\n                position: 'relative',\n                perspective: '10000px'\n            }),\n            query(':enter, :leave',\n            [\n                style(\n                {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%'\n                })\n            ]),\n            query(':enter',\n            [\n                style(\n                {\n                    transform: 'rotateY(-90deg)',\n                    opacity: 0\n                })\n            ]),\n            query(':leave', animateChild()),\n            group(\n            [\n                query(':leave',\n                [\n                    animate('350ms ease-out', style(\n                    {\n                        transform: 'rotateY(90deg)',\n                        opacity: 0\n                    }))\n                ]),\n                query(':enter',\n                [\n                    animate('350ms 350ms ease-out', style(\n                    {\n                        transform: 'rotateY(0)',\n                        opacity: 1\n                    }))\n                ])\n            ]),\n            query(':enter', animateChild())\n        ])\n    ]),\n    transition('* => *',\n    [\n        query('.main-content',\n        [\n            style({ position: 'relative' }),\n            query(':enter, :leave',\n            [\n                style(\n                {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%'\n                })\n            ], {optional: true}),\n            query(':enter',\n            [\n                style({ opacity: 0})\n            ], {optional: true}),\n            query(':leave', animateChild(), {optional: true}),\n            group(\n            [\n                query(':leave',\n                [\n                    animate('350ms ease-out', style({ opacity: 0}))\n                ], {optional: true}),\n                query(':enter',\n                [\n                    animate('350ms ease-out', style({ opacity: 1}))\n                ], {optional: true})\n            ]),\n            query(':enter', animateChild(), {optional: true})\n        ], {optional: true})\n    ])\n]);\n\nexport const loaderTrigger = trigger('loaderAnimation',\n[\n    transition(':leave',\n    [\n        group(\n        [\n            query('.loading-card', \n            [\n                animate('300ms', style(\n                {\n                    transform: 'scale(4)'\n                }))\n            ]),\n            animate('200ms 100ms', style(\n            {\n                opacity: 0\n            }))\n            \n        ])\n    ])\n]);","import {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {DynamicRoute} from '../services/dynamicRoutes';\n\nexport const demoOverviewRoute: DynamicRoute = \n{\n    path: 'overview',\n    permission: null,\n    withResolver: false,\n    resolverRelations: null,\n    template: 'overview'\n};\n\nexport const demoDetailRoute: DynamicRoute =\n{\n    path: 'detail/:id',\n    permission: null,\n    withResolver: false,\n    resolverRelations: null,\n    template: 'detail'\n};\n\nexport const demoOverviewLayout: LayoutComponentMetadata =\n{\n    id: 'stackPanel-ajqeywbjqh',\n    displayName: 'root',\n    package: 'basic-components',\n    name: 'stackPanel',\n    options: {\n        children: [\n            {\n                id: 'styleBlock-gdmcpijvblrtyjls',\n                displayName: 'styleBlock-gdmcpijvblrtyjls',\n                package: 'css-components',\n                name: 'styleBlock',\n                options: {\n                    content: {\n                        id: 'stackPanel-xxptnrqmuiwyhqiw',\n                        displayName: 'stackPanel-xxptnrqmuiwyhqiw',\n                        package: 'basic-components',\n                        name: 'stackPanel',\n                        options: {\n                            children: [\n                                {\n                                    id: 'textBlock-myngknoigkbwelkn',\n                                    displayName: 'textBlock-myngknoigkbwelkn',\n                                    package: 'basic-components',\n                                    name: 'textBlock',\n                                    options: {\n                                        text: 'Overview',\n                                        cssClass: 'title',\n                                        margin: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                },\n                                {\n                                    id: 'formBlock-gpjxpdbhjxcjptol',\n                                    displayName: 'form',\n                                    package: 'sample-components',\n                                    name: 'formBlock',\n                                    options: {\n                                        content: {\n                                            id: 'stackPanel-lhjndppbbbuzgdfe',\n                                            displayName: 'stackPanel-lhjndppbbbuzgdfe',\n                                            package: 'basic-components',\n                                            name: 'stackPanel',\n                                            options: {\n                                                children: [\n                                                    {\n                                                        id: 'stackPanel-ehlcpfegubheevch',\n                                                        displayName: 'stackPanel-ehlcpfegubheevch',\n                                                        package: 'basic-components',\n                                                        name: 'stackPanel',\n                                                        options: {\n                                                            horizontal: true,\n                                                            wrap: false,\n                                                            children: [\n                                                                {\n                                                                    id: 'textField-rxlqvcuefeenwtki',\n                                                                    displayName: 'textField-rxlqvcuefeenwtki',\n                                                                    package: 'form-components',\n                                                                    name: 'textField',\n                                                                    options: {\n                                                                        label: 'Name',\n                                                                        placeholder: 'Enter name',\n                                                                        flex: '1',\n                                                                        controlName: 'name',\n                                                                        controlType: 'FormControl'\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'textField-vdfyrgmuejqeomtr',\n                                                                    displayName: 'textField-vdfyrgmuejqeomtr',\n                                                                    package: 'form-components',\n                                                                    name: 'textField',\n                                                                    options: {\n                                                                        label: 'Surname',\n                                                                        placeholder: 'Enter surname',\n                                                                        flex: '1',\n                                                                        controlName: 'surname',\n                                                                        controlType: 'FormControl'\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'textField-potkokqukosksjou',\n                                                                    displayName: 'textField-potkokqukosksjou',\n                                                                    package: 'form-components',\n                                                                    name: 'textField',\n                                                                    options: {\n                                                                        label: 'E-mail',\n                                                                        placeholder: 'Enter e-mail',\n                                                                        flex: '1',\n                                                                        controlName: 'email',\n                                                                        controlType: 'FormControl'\n                                                                    },\n                                                                    scope: null\n                                                                }\n                                                            ]\n                                                        },\n                                                        scope: null\n                                                    },\n                                                    {\n                                                        id: 'stackPanel-ethotwlxmixmlsnp',\n                                                        displayName: 'stackPanel-ethotwlxmixmlsnp',\n                                                        package: 'basic-components',\n                                                        name: 'stackPanel',\n                                                        options: {\n                                                            children: [\n                                                                {\n                                                                    id: 'textBlock-tmbcomdzpxpxcxcx',\n                                                                    displayName: 'textBlock-tmbcomdzpxpxcxcx',\n                                                                    package: 'basic-components',\n                                                                    name: 'textBlock',\n                                                                    options: {\n                                                                        text: '',\n                                                                        flex: '1'\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'button-refwsolywgnznhbv',\n                                                                    displayName: 'button-refresh',\n                                                                    package: 'basic-components',\n                                                                    name: 'button',\n                                                                    options: {\n                                                                        text: 'refresh',\n                                                                        disabled: false,\n                                                                        buttonCssClass: 'btn btn-info',\n                                                                        cssClass: null,\n                                                                        margin: {\n                                                                            top: null,\n                                                                            right: '10px',\n                                                                            bottom: null,\n                                                                            left: null\n                                                                        },\n                                                                        padding: {\n                                                                            top: null,\n                                                                            right: null,\n                                                                            bottom: null,\n                                                                            left: null\n                                                                        },\n                                                                        textStyling: null\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'submitButton-twcqwmfoqnuaimog',\n                                                                    displayName: 'submitButton-twcqwmfoqnuaimog',\n                                                                    package: 'sample-components',\n                                                                    name: 'submitButton',\n                                                                    options: {\n                                                                        text: 'search',\n                                                                        disabled: false,\n                                                                        buttonCssClass: 'btn btn-primary'\n                                                                    },\n                                                                    scope: null\n                                                                }\n                                                            ],\n                                                            horizontal: true,\n                                                            wrap: false,\n                                                            cssClass: null,\n                                                            margin: {\n                                                                top: '10px',\n                                                                right: null,\n                                                                bottom: '10px',\n                                                                left: null\n                                                            },\n                                                            padding: {\n                                                                top: null,\n                                                                right: null,\n                                                                bottom: null,\n                                                                left: null\n                                                            },\n                                                            textStyling: null\n                                                        },\n                                                        scope: null\n                                                    }\n                                                ]\n                                            },\n                                            scope: null\n                                        }\n                                    },\n                                    scope: null\n                                },\n                                {\n                                    id: 'gridTable-gbusssjqutylctyh',\n                                    displayName: 'grid',\n                                    package: 'sample-components',\n                                    name: 'gridTable',\n                                    options: {\n                                        cssClass: null,\n                                        margin: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                }\n                            ]\n                        },\n                        scope: null\n                    },\n                    style: '.title\\r\\n{\\r\\n    font-size: 1.3em;\\r\\n    font-weight: 500;\\r\\n    margin-bottom: 15px;\\r\\n    margin-left: 4px;\\r\\n}\\r\\n\\r\\nform-text-field:not(:last-child)\\r\\n{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\nform-text-field>label\\r\\n{\\r\\n   display: block;\\r\\n}\\r\\n\\r\\nform-text-field>input\\r\\n{\\r\\n    border-radius: 4px;\\r\\n    border-style: solid;\\r\\n    border-width: 1px;\\r\\n    box-shadow: none;\\r\\n    font-size: 12px;  \\r\\n    padding-left: 7px;\\r\\n   width: 100%;\\r\\n    font-family: \"Inter\";\\r\\n}\\r\\n\\r\\ntable\\r\\n{\\r\\n   width: 100%;\\r\\n}'\n                },\n                scope: null\n            }\n        ],\n        cssClass: null,\n        margin: {\n            top: '10px',\n            right: null,\n            bottom: null,\n            left: null\n        },\n        padding: {\n            top: null,\n            right: '10px',\n            bottom: null,\n            left: '10px'\n        },\n        textStyling: null\n    },\n    scope: undefined\n};\n\nexport const demoOverviewRelations: RelationsNodeMetadata[] =\n[\n    {\n        id: 'rest-flemahafjynqojjr',\n        name: 'rest',\n        package: 'rest-components',\n        relationsOptions: {\n            url: 'data/users.json',\n            method: 'GET',\n            runImmediately: true,\n            params: [\n                {\n                    configurable: true,\n                    name: 'filter',\n                    type: 'QUERY OBJECT',\n                    value: null\n                }\n            ]\n        },\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 796,\n                y: 42\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'success',\n                inputs: [\n                    {\n                        id: 'gridTable-gbusssjqutylctyh',\n                        inputName: 'data'\n                    }\n                ]\n            },\n            {\n                outputName: 'error',\n                inputs: []\n            }\n        ]\n    },\n    {\n        id: 'triggerData-teboilptsulagtbq',\n        name: 'triggerData',\n        package: 'sample-components',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 468,\n                y: 79\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'data',\n                inputs: [\n                    {\n                        id: 'rest-flemahafjynqojjr',\n                        inputName: 'filter'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'value-ywtxfzqjprvesujp',\n        name: 'value',\n        package: 'basic-components',\n        relationsOptions: {\n            value: {\n                name: '',\n                surname: '',\n                email: ''\n            }\n        },\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 199,\n                y: 463\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'value',\n                inputs: [\n                    {\n                        id: 'triggerData-fyyutwhwylmcihjw',\n                        inputName: 'data'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'formBlock-gpjxpdbhjxcjptol',\n        name: 'formBlock-gpjxpdbhjxcjptol',\n        package: 'layout-components',\n        displayName: 'form',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: false,\n            coordinates: {\n                x: 181,\n                y: 80\n            },\n            options: null\n        },\n        scope: '',\n        outputs: [\n            {\n                outputName: 'value',\n                inputs: [\n                    {\n                        id: 'triggerData-teboilptsulagtbq',\n                        inputName: 'data'\n                    }\n                ]\n            },\n            {\n                outputName: 'submit',\n                inputs: [\n                    {\n                        id: 'triggerData-teboilptsulagtbq',\n                        inputName: 'trigger'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'gridTable-gbusssjqutylctyh',\n        name: 'gridTable-gbusssjqutylctyh',\n        package: 'layout-components',\n        displayName: 'grid',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: false,\n            coordinates: {\n                x: 859,\n                y: 386\n            },\n            options: null\n        },\n        scope: '',\n        outputs: []\n    },\n    {\n        id: 'button-refwsolywgnznhbv',\n        name: 'button-refwsolywgnznhbv',\n        package: 'layout-components',\n        displayName: 'button-refresh',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: false,\n            coordinates: {\n                x: 162,\n                y: 295\n            },\n            options: null\n        },\n        scope: undefined,\n        outputs: [\n            {\n                outputName: 'click',\n                inputs: [\n                    {\n                        id: 'triggerData-fyyutwhwylmcihjw',\n                        inputName: 'trigger'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'triggerData-fyyutwhwylmcihjw',\n        name: 'triggerData',\n        package: 'sample-components',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 468,\n                y: 326\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'data',\n                inputs: [\n                    {\n                        id: 'formBlock-gpjxpdbhjxcjptol',\n                        inputName: 'value'\n                    }\n                ]\n            }\n        ]\n    }\n];\n\nexport const demoDetailLayout: LayoutComponentMetadata =\n{\n    id: 'stackPanel-ajqeywbjqh',\n    displayName: 'root',\n    package: 'basic-components',\n    name: 'stackPanel',\n    options: {\n        children: [\n            {\n                id: 'styleBlock-gdmcpijvblrtyjls',\n                displayName: 'styleBlock-gdmcpijvblrtyjls',\n                package: 'css-components',\n                name: 'styleBlock',\n                options: {\n                    content: {\n                        id: 'stackPanel-xxptnrqmuiwyhqiw',\n                        displayName: 'stackPanel-xxptnrqmuiwyhqiw',\n                        package: 'basic-components',\n                        name: 'stackPanel',\n                        options: {\n                            children: [\n                                {\n                                    id: 'textBlock-myngknoigkbwelkn',\n                                    displayName: 'textBlock-myngknoigkbwelkn',\n                                    package: 'basic-components',\n                                    name: 'textBlock',\n                                    options: {\n                                        text: 'Detail',\n                                        cssClass: 'title',\n                                        margin: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                },\n                                {\n                                    id: 'stackPanel-ehlcpfegubheevch',\n                                    displayName: 'stackPanel-ehlcpfegubheevch',\n                                    package: 'basic-components',\n                                    name: 'stackPanel',\n                                    options: {\n                                        horizontal: true,\n                                        wrap: false,\n                                        children: []\n                                    },\n                                    scope: null\n                                }\n                            ]\n                        },\n                        scope: null\n                    },\n                    style: '.title\\r\\n{\\r\\n    fontsiz: 1.3em;\\r\\n    fontweigh: 500;\\r\\n    marginbotto: 15px;\\r\\n    marginlef: 4px;\\r\\n}\\r\\n\\r\\nform-textfielnot:last-child)\\r\\n{\\r\\n    marginrigh: 10px;\\r\\n}\\r\\n\\r\\nform-text-field>label\\r\\n{\\r\\n   displa: block;\\r\\n}\\r\\n\\r\\nform-text-field>input\\r\\n{\\r\\n    borderradiu: 4px;\\r\\n    borderstyl: solid;\\r\\n    borderwidt: 1px;\\r\\n    boxshado: none;\\r\\n    fontsiz: 12px;  \\r\\n    paddinglef: 7px;\\r\\n   widt: 100%;\\r\\n    fontfamil: \"Inter\";\\r\\n}\\r\\n\\r\\ntable\\r\\n{\\r\\n   widt: 100%;\\r\\n}'\n                },\n                scope: null\n            }\n        ],\n        cssClass: null,\n        margin: {\n            top: '10px',\n            right: null,\n            bottom: null,\n            left: null\n        },\n        padding: {\n            top: null,\n            right: '10px',\n            bottom: null,\n            left: '10px'\n        },\n        textStyling: null\n    },\n    scope: undefined\n};","<div *authorize=\"'authenticated'\" class=\"flex-row\">\r\n    <a routerLink=\"/\" routerLinkActive=\"active\" class=\"margin-right-small\">Home</a>\r\n    <a routerLink=\"/admin/dynamicRoutes\" routerLinkActive=\"active\" class=\"margin-right-small\" *authorize=\"'dynamicRoutes-page'\">Dynamic routes</a>\r\n    <div class=\"flex-1\"></div>\r\n    <a class=\"margin-horizontal-small\" href=\"\" (click)=\"loadDemo($event)\">LOAD DEMO</a>\r\n    <a (click)=\"logout()\">Logout</a>\r\n    <a (click)=\"openSettings()\" class=\"fas fa-cog\"></a>\r\n</div>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '@anglr/authentication';\nimport {TitledDialogService} from '@anglr/common/material';\n\nimport {UserSettingsSAComponent} from '../../../../components';\nimport {createStoreDataServiceFactory} from '../../../../misc/factories';\nimport {StoreDataService} from '../../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../../misc/interfaces';\nimport {demoDetailLayout, demoDetailRoute, demoOverviewLayout, demoOverviewRelations, demoOverviewRoute} from '../../../../misc/demo';\nimport {DynamicRoutesService} from '../../../../services/dynamicRoutes';\n\n/**\n * Component used for displaying application main menu\n */\n@Component(\n{\n    selector: 'main-menu',\n    templateUrl: 'mainMenu.component.html',\n    providers:\n    [\n        createStoreDataServiceFactory('DYNAMIC_CONTENT_DATA'),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainMenuComponent\n{\n    //######################### constructor #########################\n    constructor(private _authSvc: AuthenticationService<any>,\n                private _router: Router,\n                private _dialog: TitledDialogService,\n                private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _dynamicRoutes: DynamicRoutesService,)\n    {\n    }\n\n    //######################### public methods - template bindings #########################\n\n    /**\n     * Logs out user\n     */\n    public async logout()\n    {\n        this._authSvc\n            .logout()\n            .subscribe(() =>\n            {\n                this._router.navigate(['/login']);\n            });\n    }\n\n    /**\n     * Loads demo data\n     */\n    public async loadDemo(event: MouseEvent): Promise<void>\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let overview = this._store.getData('overview');\n\n        if(!overview)\n        {\n            overview =\n            {\n                layout: demoOverviewLayout,\n                relations: demoOverviewRelations,\n            };\n            \n            this._store.setData('overview', overview);\n        }\n\n        let detail = this._store.getData('detail');\n\n        if(!detail)\n        {\n            detail =\n            {\n                layout: demoDetailLayout,\n                relations: [],\n            };\n            \n            this._store.setData('detail', detail);\n        }\n\n        const routes = this._dynamicRoutes.routes ?? [];\n        const overviewRoute = routes.find(itm => itm.template == 'overview');\n\n        if(!overviewRoute)\n        {\n            await this._dynamicRoutes.addRoute(demoOverviewRoute);\n        }\n\n        const detialRoute = routes.find(itm => itm.template == 'detail');\n\n        if(!detialRoute)\n        {\n            await this._dynamicRoutes.addRoute(demoDetailRoute);\n        }\n\n        window.location.reload();\n    }\n\n    /**\n     * Opens settings dialog\n     */\n    public openSettings()\n    {\n        this._dialog.open(UserSettingsSAComponent,\n        {\n            title: 'user settings',\n            maxHeight: '80vh'\n        });\n    }\n}","<main-menu></main-menu>\r\n\r\n<progress-indicator></progress-indicator>\r\n<internal-server-error></internal-server-error>\r\n<global-notifications></global-notifications>\r\n<hotkeys-cheatsheet></hotkeys-cheatsheet>\r\n\r\n<div class=\"content relative\" [@routeAnimations]=\"routeComponentState\">\r\n    <div class=\"main-content\">\r\n        <router-outlet #outlet=\"outlet\"></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"gui-version\">GUI version: {{guiVersion}}</div>\r\n\r\n<console *ngIf=\"consoleVisible\" @consoleAnimation></console>\r\n\r\n<div class=\"loading-indicator\" *ngIf=\"!initialized\" @loaderAnimation>\r\n    <div class=\"loading-header\">\r\n        <div class=\"loading-title\">TELECOVID</div>\r\n    </div>\r\n\r\n    <div class=\"loading-card\"></div>\r\n    <div class=\"loading-spinner\"></div>\r\n</div>","import {Component, OnDestroy, AfterViewInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef, Inject, OnInit} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {RouterOutlet} from '@angular/router';\nimport {LOGGER, Logger} from '@anglr/common';\nimport {consoleAnimationTrigger} from '@anglr/common/structured-log';\nimport {AppHotkeysService} from '@anglr/common/hotkeys';\nimport {AuthenticationService} from '@anglr/authentication';\nimport {fadeInOutTrigger} from '@anglr/animations';\nimport {nameof} from '@jscrpt/common';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Hotkey} from 'angular2-hotkeys';\nimport {Subscription} from 'rxjs';\n\nimport {loaderTrigger, routeAnimationTrigger} from './app.component.animations';\nimport {SettingsService} from '../services/settings';\nimport {SettingsGeneral, SettingsDebug} from '../config';\nimport version from '../../config/version.json';\nimport {DynamicRoutesService} from '../services/dynamicRoutes';\n\n/**\n * Application entry component\n */\n@Component(\n{\n    selector: 'app',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.scss'],\n    animations: [routeAnimationTrigger, fadeInOutTrigger, consoleAnimationTrigger, loaderTrigger],\n    providers: [AppHotkeysService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit, AfterViewInit, OnDestroy\n{\n    //######################### private fields #########################\n    \n    /**\n     * Subscription for router outlet activation changes\n     */\n    private _routerOutletActivatedSubscription: Subscription|undefined|null;\n\n    /**\n     * Subscription for authenticated changes\n     */\n    private _authChangedSubscription: Subscription|undefined|null;\n\n    /**\n     * Subscription for changes of general settings\n     */\n    private _settingsChangeSubscription: Subscription|undefined|null;\n\n    /**\n     * Subscription for changes of debugging settings\n     */\n    private _settingsDebuggingChangeSubscription: Subscription|undefined|null;\n\n    /**\n     * Currently active theme\n     */\n    private _theme: string;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is console visible\n     */\n    public consoleVisible: boolean = false;\n\n    /**\n     * Indication whether is used authenticated\n     */\n    public authenticated: boolean = false;\n\n    /**\n     * Name of state for routed component animation\n     */\n    public routeComponentState: string = 'none';\n\n    /**\n     * Current version of gui\n     */\n    public guiVersion: string = version.version;\n\n    /**\n     * Version of server\n     */\n    public serverVersion: string = '';\n\n    /**\n     * Name of server\n     */\n    public serverName: string = '';\n\n    /**\n     * Indication whether is application initialized\n     */\n    public initialized: boolean = false;\n\n    //######################### public properties - children #########################\n\n    /**\n     * Router outlet that is used for loading routed components\n     */\n    @ViewChild('outlet')\n    public routerOutlet: RouterOutlet|undefined;\n\n    //######################### constructor #########################\n    constructor(_authSvc: AuthenticationService,\n                translateSvc: TranslateService,\n                private _changeDetector: ChangeDetectorRef,\n                private _appHotkeys: AppHotkeysService,\n                private _dynamicRoutes: DynamicRoutesService,\n                settings: SettingsService,\n                @Inject(LOGGER) logger: Logger,\n                @Inject(DOCUMENT) document: Document,)\n    {\n        logger.verbose('Application is starting, main component constructed.');\n\n        document.body.classList.add('app-page', settings.settings.theme);\n        this._theme = settings.settings.theme;\n\n        this._settingsChangeSubscription = settings.settingsChange\n            .subscribe(itm => \n            {\n                if(itm == nameof<SettingsGeneral>('theme'))\n                {\n                    document.body.classList.remove(this._theme);\n                    this._theme = settings.settings.theme;\n                    document.body.classList.add(this._theme);\n                }\n\n                if(itm == nameof<SettingsGeneral>('language'))\n                {\n                    translateSvc.use(settings.settings.language);\n                    this._changeDetector.detectChanges();\n                }\n            });\n\n        this._settingsDebuggingChangeSubscription = settings.settingsDebuggingChange\n            .subscribe(itm => \n            {\n                if(itm == nameof<SettingsDebug>('consoleEnabled'))\n                {\n                    this._toggleConsoleHotkey();\n                }\n            });\n\n        translateSvc.setDefaultLang('en');\n        translateSvc.use(settings.settings.language);\n\n        _authSvc\n            .getUserIdentity()\n            .then(identity =>\n            {\n                this.authenticated = identity.isAuthenticated;\n\n                _changeDetector.detectChanges();\n            });\n\n        this._authChangedSubscription = _authSvc.authenticationChanged.subscribe(identity =>\n        {\n            this.authenticated = identity.isAuthenticated;\n\n            _changeDetector.detectChanges();\n        });\n\n        if(settings.settingsDebugging?.consoleEnabled)\n        {\n            this._toggleConsoleHotkey();\n        }\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        await this._dynamicRoutes.initialize();\n    }\n\n    //######################### public methods - implementation of AfterViewInit #########################\n    \n    /**\n     * Called when view was initialized\n     */\n    public ngAfterViewInit(): void\n    {\n        this._routerOutletActivatedSubscription = this.routerOutlet?.activateEvents.subscribe(() =>\n        {\n            this.routeComponentState = this.routerOutlet?.activatedRouteData['animation'] || (<any>this.routerOutlet?.activatedRoute.component).name;\n        });\n\n        this.initialized = true;\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy()\n    {\n        this._routerOutletActivatedSubscription?.unsubscribe();\n        this._routerOutletActivatedSubscription = null;\n\n        this._authChangedSubscription?.unsubscribe();\n        this._authChangedSubscription = null;\n\n        this._settingsChangeSubscription?.unsubscribe();\n        this._settingsChangeSubscription = null;\n\n        this._settingsDebuggingChangeSubscription?.unsubscribe();\n        this._settingsDebuggingChangeSubscription = null;\n\n        this._appHotkeys.destroy();\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Toggles hotkey for displaying console log\n     */\n    private _toggleConsoleHotkey()\n    {\n        const oldHelpHotkey = this._appHotkeys.hotkeys.get('~');\n\n        if(oldHelpHotkey)\n        {\n            this._appHotkeys.hotkeys.remove(oldHelpHotkey);\n        }\n        else\n        {\n            this._appHotkeys.hotkeys.add(new Hotkey('~', () =>\n            {\n                this.consoleVisible = !this.consoleVisible;\n                this._changeDetector.detectChanges();\n\n                return false;\n            }, undefined, 'Show console'));\n        }\n    }\n}","import {Route} from '@angular/router';\n\n/**\n * Route for access denied component\n */\nexport const accessDeniedRoute: Route =\n{\n    path: 'accessDenied',\n    loadComponent: () => import('./accessDenied.component').then(({AccessDeniedComponent}) => AccessDeniedComponent)\n};","import {Type} from '@angular/core';\nimport {ModuleRoutesOptions} from '@anglr/common/router';\n\nimport {accessDeniedRoute} from '../pages/accessDenied/accessDenied.route';\nimport {notFoundRoute} from '../pages/notFound/notFound.route';\n\nexport const components: Type<any>[] =\n[\n];\n\nexport const routesOptions: ModuleRoutesOptions =\n{\n    rootModule: true,\n    rootModuleConfig:\n    {\n        enableTracing: false,\n        useHash: true,\n        // preloadingStrategy: PreloadAllModules\n    },\n    staticRoutesBefore:\n    [\n        {\n            path: '',\n            loadChildren: () => import('../pages/+default/default.module').then(({DefaultModule}) => DefaultModule)\n        },\n        {\n            path: 'admin',\n            loadChildren: () => import('../pages/+routedContent/routedContent.module').then(({RoutedContentModule}) => RoutedContentModule)\n        },\n        {\n            path: 'admin',\n            loadChildren: () => import('../pages/+dynamicContent/dynamicContent.module').then(({DynamicContentModule}) => DynamicContentModule)\n        },\n        {\n            path: 'dynamicContent',\n            children: \n            [\n            ]\n        },\n    ],\n    staticRoutesAfter:\n    [\n        accessDeniedRoute,\n        notFoundRoute,\n    ]\n};","import {Route} from '@angular/router';\n\n/**\n * Route for not found component\n */\nexport const notFoundRoute: Route =\n{\n    path: '**',\n    loadComponent: () => import('./notFound.component').then(({NotFoundComponent}) => NotFoundComponent)\n};","import {Injectable} from '@angular/core';\nimport {GlobalizationService as GlobalizationServiceInterface} from '@anglr/common';\nimport {Observable, EMPTY} from 'rxjs';\n\n/**\n * Globalization service that is used for obtaining globalization language\n */\n@Injectable()\nexport class GlobalizationService extends GlobalizationServiceInterface\n{\n    /**\n     * Gets current name of locale, that is used within picker\n     */\n    public get locale(): string\n    {\n        return 'sk';\n    }\n    \n    /**\n     * Gets observable that emits data when locale changes and change should be applied to picker\n     */\n    public get localeChange(): Observable<void>\n    {\n        return EMPTY;\n    }\n}","import {Injectable} from '@angular/core';\nimport {RESTClient, BaseUrl, DefaultHeaders, POST, JsonContentType, Body, DisableInterceptor, ParameterTransform, DisableMiddleware} from '@anglr/rest';\nimport {LoggerRestClient, RestLog} from '@anglr/common/structured-log';\nimport {AuthInterceptor, SuppressAuthInterceptor} from '@anglr/authentication';\nimport {ClientErrorHandlingMiddleware} from '@anglr/error-handling/rest';\nimport {EMPTY, Observable, catchError} from 'rxjs';\n\nimport {config} from '../../../config';\nimport version from '../../../../config/version.json';\n\n/**\n * Service used for logging logs on server\n */\n@Injectable()\n@BaseUrl(config.configuration.apiBaseUrl)\n@DefaultHeaders(config.configuration.defaultApiHeaders)\nexport class RestLoggerService extends RESTClient implements LoggerRestClient\n{\n    //######################### public methods - implementation of LoggerRestClient #########################\n\n    /**\n     * @inheritdoc\n     */\n    public log(logs: RestLog[]): Observable<void>\n    {\n        return this._log(logs)\n            .pipe(catchError(_ =>\n            {\n                console.warn('Failed to create log on server');\n\n                return EMPTY;\n            }));\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Logs message on server using REST\n     * @param logs - Array of logs to be logged\n     */\n    @JsonContentType()\n    @DisableMiddleware(ClientErrorHandlingMiddleware)\n    @DisableInterceptor(AuthInterceptor)\n    @DisableInterceptor(SuppressAuthInterceptor)\n    @POST('logger')\n    public _log(@Body @ParameterTransform('_unhandledErrorsTransform') _logs: RestLog[]): Observable<void>\n    {\n        return EMPTY;\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Removes unhandled error text from logs\n     * @param logs - Logs to be transformed\n     */\n    //@ts-ignore\n    private _unhandledErrorsTransform(logs: RestLog[]): RestLog[]\n    {\n        function addBasicInfo(log: {version?: string, id?: string})\n        {\n            if(!log)\n            {\n                return;\n            }\n\n            log.version = version.version;\n            log.id = 'angular-gui';\n        }\n\n        for(let x = 0; x < logs.length; x++)\n        {\n            const obj: RestLog & {info?: any} = logs[x];\n\n            //remove unhandled error message and serialize\n            if(obj.message.startsWith('Unhandled error: '))\n            {\n                const message = obj.message.replace('Unhandled error: ', '');\n\n                try\n                {\n                    obj.info = JSON.parse(message);\n\n                    if(Array.isArray(obj.info))\n                    {\n                        obj.info = obj.info[0];\n                    }\n\n                    addBasicInfo(obj.info);\n                }\n                catch\n                {\n                    obj.info = {};\n\n                    addBasicInfo(obj.info);\n                }\n            }\n            else\n            {\n                obj.info = {};\n\n                addBasicInfo(obj.info);\n            }\n\n            logs[x] = obj;\n        }\n\n        return logs;\n    }\n}","import {inject, Injectable} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\nimport {UserIdentity, AccessToken} from '@anglr/authentication';\nimport {Dictionary} from '@jscrpt/common';\nimport {Observable} from 'rxjs';\n\nimport permissions from '../../../../config/permissions.json';\n\nconst USER_DATA = 'USER_DATA';\n\n/**\n * Service used to access user account information\n */\n@Injectable({providedIn: 'root'})\nexport class AccountService\n{\n    //######################### private fields #########################\n\n    /**\n     * Computed permissions for roles\n     */\n    private _permissions: Dictionary<string[]>|undefined;\n\n    /**\n     * Storage to be used for storing user data\n     */\n    private _storage: PermanentStorage = inject(PERMANENT_STORAGE);\n\n    /**\n     * Current user identity\n     */\n    private _identity: UserIdentity|null = null;\n\n    //######################### private properties #########################\n\n    /**\n     * Gets computed permissions for roles\n     */\n    private get permissions(): Dictionary<string[]>\n    {\n        return this._permissions ?? (this._permissions = this._computePermissionsForRoles());\n    }\n\n    //######################### public methods - implementation of AuthenticationServiceOptions #########################\n\n    /**\n     * Method logs user into system\n     * @param  {AccessToken} accessToken Access token used for authentication\n     */\n    public login(accessToken: AccessToken): Observable<void>\n    {\n        return new Observable(observer =>\n        {\n            if(accessToken.userName == 'admin' && accessToken.password == 'admin')\n            {\n                const privileges = this._roles2privileges(['ADMIN']);\n\n                this._identity =\n                {\n                    isAuthenticated: true,\n                    userName: 'admin',\n                    firstName: 'admin',\n                    surname: '',\n                    permissions: privileges.concat(['authenticated']),\n                    additionalInfo: null,\n                };\n            }\n            else if(accessToken.userName == 'test' && accessToken.password == 'test')\n            {\n                const privileges = this._roles2privileges(['USER']);\n\n                this._identity =\n                {\n                    isAuthenticated: true,\n                    userName: 'user',\n                    firstName: 'user',\n                    surname: '',\n                    permissions: privileges.concat(['authenticated']),\n                    additionalInfo: null,\n                };\n            }\n            else\n            {\n                this._identity = null;\n\n                observer.error(() => new Error('Failed to login'));\n                observer.complete();\n\n                return;\n            }\n\n            if(accessToken.rememberMe && this._identity)\n            {\n                this._storage.set(USER_DATA, this._identity);\n            }\n\n            observer.next();\n            observer.complete();\n        });\n    }\n\n    /**\n     * Methods logs out user out of system\n     */\n    public logout(): Observable<void>\n    {\n        return new Observable(observer =>\n        {\n            this._storage.remove(USER_DATA);\n            this._identity = null;\n\n            observer.next();\n            observer.complete();\n        });\n    }\n\n    /**\n     * Gets information about user\n     */\n    public getUserIdentity(): Observable<UserIdentity>\n    {\n        return new Observable(observer =>\n        {\n            this._identity ??= this._storage.get<UserIdentity>(USER_DATA);\n\n            observer.next(this._identity ??\n            {\n                isAuthenticated: false,\n                userName: '',\n                permissions: [],\n                firstName: '',\n                surname: ''\n            });\n\n            observer.complete();\n        });\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Gets array of permissions for provided roles\n     * @param roles Array of roles to be transformed to permissions\n     */\n    private _roles2privileges(roles: string[]): string[]\n    {\n        const perms: {[permission: string]: boolean} = {};\n\n        (roles ?? []).forEach(role => (this.permissions[role] ?? []).forEach(permission => perms[permission] = true));\n\n        return Object.keys(perms);\n    }\n\n    /**\n     * Computes permissions for roles\n     */\n    private _computePermissionsForRoles(): Dictionary<string[]>\n    {\n        const computedPermissions: Dictionary<string[]> = {};\n        const permissionsDict = permissions as unknown as Dictionary<string[]>;\n\n        Object.keys(permissionsDict).forEach(permission =>\n        {\n            const roles = permissionsDict[permission];\n\n            if(Array.isArray(roles))\n            {\n                roles.forEach(role =>\n                {\n                    computedPermissions[role] ??= [];\n                    computedPermissions[role].push(permission);\n                });\n            }\n        });\n\n        return computedPermissions;\n    }\n}","import {Injectable} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {Router} from '@angular/router';\nimport {AccessToken, AuthenticationServiceOptions, UserIdentity} from '@anglr/authentication';\nimport {isPresent} from '@jscrpt/common';\nimport {Observable} from 'rxjs';\n\nimport {AccountService} from './account.service';\n\n/**\n * Class represents authentication service options for account\n */\n@Injectable()\nexport class AccountAuthOptions extends AuthenticationServiceOptions\n{\n    //######################### constructor #########################\n    constructor(private _router: Router,\n                private _accountSvc: AccountService,\n                private _location: Location)\n    {\n        super();\n    }\n\n    //######################### public methods - implementation of AuthenticationServiceOptions #########################\n\n    /**\n     * @inheritdoc\n     */\n    public login(accessToken: AccessToken): Observable<void>\n    {\n        return this._accountSvc.login(accessToken);\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public isAuthPage(path?: string): boolean\n    {\n        if(isPresent(path))\n        {\n            return path.indexOf('/login') == 0;\n        }\n\n        return this._location.path().indexOf('/login') == 0;\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public logout(): Observable<void>\n    {\n        return this._accountSvc.logout();\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public getUserIdentity(): Observable<UserIdentity>\n    {\n        return this._accountSvc.getUserIdentity();\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public showAuthPage(): Promise<boolean>\n    {\n        return this._router.navigate(['/login'], {queryParams: {returnUrl: this._location.path()}});\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public showAccessDenied(): Promise<boolean>\n    {\n        return this._router.navigate(['/accessDenied']);\n    }\n}","import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpResponse} from '@angular/common/http';\nimport {RESTClient, BaseUrl, DefaultHeaders, MockLogger, JsonContentType, DisableMiddleware, DisableInterceptor, POST, Body, MockLoggerMiddleware} from '@anglr/rest';\nimport {ClientErrorHandlingMiddleware} from '@anglr/error-handling/rest';\nimport {AuthInterceptor, SuppressAuthInterceptor} from '@anglr/authentication';\nimport {isBlank, isString} from '@jscrpt/common';\nimport {NEVER, Observable} from 'rxjs';\n\nimport {config} from '../../../config';\n\n/**\n * Service for logging responses for mocks\n */\n@Injectable()\n@BaseUrl(config.configuration.apiBaseUrl)\n@DefaultHeaders(config.configuration.defaultApiHeaders)\nexport class RestMockLoggerService extends RESTClient implements MockLogger\n{\n    //######################### public methods #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async logResponse(request: HttpRequest<unknown>, response: HttpResponse<string|ArrayBuffer|Blob|object>): Promise<void>\n    {\n        let responseString: string;\n\n        if(isBlank(response.body))\n        {\n            responseString = '';\n        }\n        else if(isString(response.body))\n        {\n            responseString = response.body;\n        }\n        else if(response.body instanceof Blob)\n        {\n            responseString = await new Promise(resolve =>\n            {\n                const reader = new FileReader();\n\n                reader.onloadend = () => resolve(reader.result as string);\n                reader.readAsDataURL(response.body as Blob);\n            });\n        }\n        else if(response.body instanceof ArrayBuffer)\n        {\n            let binary = '';\n            const bytes = new Uint8Array(response.body as ArrayBuffer);\n            const len = bytes.byteLength;\n\n            for (let x = 0; x < len; x++) \n            {\n                binary += String.fromCharCode(bytes[x]);\n            }\n\n            responseString = btoa(binary);\n        }\n        else\n        {\n            responseString = JSON.stringify(response.body, null, 4);\n        }\n        \n        return await this\n            ._logResponse(\n            {\n                url: request.url,\n                response: responseString\n            })\n            .toPromise()\n            .catch(_ => console.warn('Failed to log mock data'));\n    }\n\n    //######################### private fields #########################\n    \n    /**\n     * Gets information about running application\n     * @returns Observable\n     */\n    @JsonContentType()\n    @DisableMiddleware(ClientErrorHandlingMiddleware)\n    @DisableMiddleware(MockLoggerMiddleware)\n    @DisableInterceptor(AuthInterceptor)\n    @DisableInterceptor(SuppressAuthInterceptor)\n    @POST('mockLogger')\n    private _logResponse(@Body _mock: {url: string, response: string}): Observable<any>\n    {\n        return NEVER;\n    }\n}","import {FactoryProvider, APP_INITIALIZER, ClassProvider, ValueProvider, Provider, ExistingProvider, Injector} from '@angular/core';\nimport {AuthenticationService, AUTH_INTERCEPTOR_PROVIDER, SUPPRESS_AUTH_INTERCEPTOR_PROVIDER, AuthenticationServiceOptions} from '@anglr/authentication';\nimport {LocalPermanentStorageService} from '@anglr/common/store';\nimport {PROGRESS_INTERCEPTOR_PROVIDER, GlobalizationService, STRING_LOCALIZATION, PERMANENT_STORAGE, DebugDataEnabledService, DEFAULT_NOTIFICATIONS, NOTIFICATIONS} from '@anglr/common';\nimport {ConsoleSinkConfigService, LOGGER_REST_CLIENT, REST_SINK} from '@anglr/common/structured-log';\nimport {NgxTranslateStringLocalizationService} from '@anglr/translate-extensions';\nimport {ERROR_HANDLING_NOTIFICATIONS, HttpGatewayTimeoutInterceptorOptions, NoConnectionInterceptorOptions, HTTP_GATEWAY_TIMEOUT_INTERCEPTOR_PROVIDER, NO_CONNECTION_INTERCEPTOR_PROVIDER, SERVICE_UNAVAILABLE_INTERCEPTOR_PROVIDER, ANGLR_EXCEPTION_HANDLER_PROVIDER, ERROR_WITH_URL_EXTENDER, HTTP_SERVER_ERROR_INTERCEPTOR_PROVIDER, CLIENT_ERROR_NOTIFICATIONS, handle400WithValidationsFunc, handle404Func, HttpClientErrorCustomHandler, HttpClientErrorResponseMapper, HttpClientValidationErrorResponseMapper, HTTP_CLIENT_ERROR_CUSTOM_HANDLER, HTTP_CLIENT_ERROR_RESPONSE_MAPPER, HTTP_CLIENT_VALIDATION_ERROR_RESPONSE_MAPPER} from '@anglr/error-handling';\nimport {DIALOG_INTERNAL_SERVER_ERROR_RENDERER_PROVIDER} from '@anglr/error-handling/material';\nimport {NO_DATA_RENDERER_OPTIONS, NoDataRendererOptions, PAGING_OPTIONS, BasicPagingOptions, METADATA_SELECTOR_TYPE, METADATA_SELECTOR_OPTIONS, CONTENT_RENDERER_OPTIONS, TableContentRendererOptions, HEADER_CONTENT_RENDERER_OPTIONS, TableHeaderContentRendererOptions, GRID_INITIALIZER_TYPE, GRID_INITIALIZER_OPTIONS, QueryPermanentStorageGridInitializerOptions, QueryGridInitializerComponent} from '@anglr/grid';\nimport {DialogMetadataSelectorComponent, DialogMetadataSelectorOptions} from '@anglr/grid/material';\nimport {ReservedSpaceValidationErrorsContainerComponent, ValidationErrorRendererFactoryOptions, VALIDATION_ERROR_MESSAGES, VALIDATION_ERROR_RENDERER_FACTORY_OPTIONS} from '@anglr/common/forms';\nimport {ConfirmationDialogOptions, CONFIRMATION_DIALOG_OPTIONS, MovableTitledDialogComponent, TitledDialogServiceOptions} from '@anglr/common/material';\nimport {FLOATING_UI_POSITION} from '@anglr/common/floating-ui';\nimport {MD_HELP_NOTIFICATIONS, RenderMarkdownConfig, RENDER_MARKDOWN_CONFIG} from '@anglr/md-help/web';\nimport {ClientErrorHandlingMiddleware, REST_ERROR_HANDLING_MIDDLEWARE_ORDER} from '@anglr/error-handling/rest';\nimport {NORMAL_STATE_OPTIONS, NormalStateOptions, POSITIONER_TYPE} from '@anglr/select';\nimport {PopperJsPositionerComponent} from '@anglr/select/popperJs';\nimport {DATE_API} from '@anglr/datetime';\nimport {DateFnsDateApi, DateFnsLocale, DATE_FNS_DATE_API_OBJECT_TYPE, DATE_FNS_FORMAT_PROVIDER, DATE_FNS_LOCALE} from '@anglr/datetime/date-fns';\nimport {LoggerMiddleware, MockLoggerMiddleware, ReportProgressMiddleware, ResponseTypeMiddleware, REST_METHOD_MIDDLEWARES, REST_MOCK_LOGGER} from '@anglr/rest';\nimport {DATETIME_REST_DATE_API} from '@anglr/rest/datetime';\nimport {isString, isJsObject} from '@jscrpt/common';\nimport {LogEventLevel} from 'structured-log';\nimport {sk} from 'date-fns/locale';\n\nimport {config} from '../config';\nimport {GlobalizationService as GlobalizationServiceImpl} from '../services/globalization/globalization.service';\nimport {NOTHING_SELECTED} from '../misc/constants';\nimport {SettingsService, LocalSettingsStorage} from '../services/settings';\nimport {SETTINGS_STORAGE} from '../misc/tokens';\nimport {RestLoggerService} from '../services/api/restLogger';\nimport {AccountAuthOptions} from '../services/api/account/accountAuth.options';\nimport {RestMockLoggerService} from '../services/api/restMockLogger';\n\n/**\n * Creates APP initialization factory, that first try to authorize user before doing anything else\n * @param authService Authentication service used for authentication of user\n */\nexport function appInitializerFactory(authService: AuthenticationService<any>): () => Promise<void>\n{\n    return async () =>\n    {\n        try\n        {\n            await authService\n                .getUserIdentity();\n        }\n        catch(e)\n        {\n            alert(`Authentication failed: ${e}`);\n\n            throw e;\n        }\n    };\n}\n\n/**\n * Factory method for creating HttpGatewayTimeoutInterceptorOptions\n */\nexport function httpGatewayTimeoutInterceptorOptionsFactory(): HttpGatewayTimeoutInterceptorOptions\n{\n    return new HttpGatewayTimeoutInterceptorOptions('Server neodpovedal v stanovenom čase.');\n}\n\n/**\n * Factory method for creating NoConnectionInterceptorOptions\n */\nexport function noConnectionInterceptorOptionsFactory(): NoConnectionInterceptorOptions\n{\n    return new NoConnectionInterceptorOptions('Server je mimo prevádzky.');\n}\n\n/**\n * Array of providers that are used in app module\n */\nexport const providers: Provider[] =\n[\n    //######################### HTTP INTERCEPTORS #########################\n    HTTP_GATEWAY_TIMEOUT_INTERCEPTOR_PROVIDER,\n    SERVICE_UNAVAILABLE_INTERCEPTOR_PROVIDER,\n    HTTP_SERVER_ERROR_INTERCEPTOR_PROVIDER,\n    NO_CONNECTION_INTERCEPTOR_PROVIDER,\n    SUPPRESS_AUTH_INTERCEPTOR_PROVIDER,\n    AUTH_INTERCEPTOR_PROVIDER,\n    PROGRESS_INTERCEPTOR_PROVIDER,\n\n    //######################### NO CONNECTION INTERCEPTOR OPTIONS #########################\n    <FactoryProvider>\n    {\n        useFactory: noConnectionInterceptorOptionsFactory,\n        provide: NoConnectionInterceptorOptions\n    },\n\n    //######################### HTTP GATEWAY TIMEOUT INTERCEPTOR OPTIONS #########################\n    <FactoryProvider>\n    {\n        useFactory: httpGatewayTimeoutInterceptorOptionsFactory,\n        provide: HttpGatewayTimeoutInterceptorOptions\n    },\n\n    //######################### GLOBALIZATION SERVICE #########################\n    <ClassProvider>\n    {\n        provide: GlobalizationService,\n        useClass: GlobalizationServiceImpl\n    },\n\n    //######################### AUTHENTICATION & AUTHORIZATION #########################\n    <ClassProvider>\n    {\n        provide: AuthenticationServiceOptions,\n        useClass: AccountAuthOptions\n    },\n\n    //######################### ERROR HANDLING #########################\n    ERROR_WITH_URL_EXTENDER,\n    ANGLR_EXCEPTION_HANDLER_PROVIDER,\n    DIALOG_INTERNAL_SERVER_ERROR_RENDERER_PROVIDER,\n\n    //######################### APP INITIALIZER #########################\n    <FactoryProvider>\n    {\n        useFactory: appInitializerFactory,\n        provide: APP_INITIALIZER,\n        deps: [AuthenticationService],\n        multi: true\n    },\n\n    //######################### GRID GLOBAL OPTIONS #########################\n    <ValueProvider>\n    {\n        provide: NO_DATA_RENDERER_OPTIONS,\n        useValue: <NoDataRendererOptions>\n        {\n            texts:\n            {\n                loading: 'Nahrávam dáta ...',\n                noData: 'Neboli nájdené dáta odpovedajúce zadaným parametrom',\n                notLoaded: 'Neboli načítané žiadne dáta zatiaľ'\n            }\n        }\n    },\n    <ValueProvider>\n    {\n        provide: GRID_INITIALIZER_TYPE,\n        useValue: QueryGridInitializerComponent\n    },\n    <ValueProvider>\n    {\n        provide: PAGING_OPTIONS,\n        useValue: <BasicPagingOptions>\n        {\n            itemsPerPageValues: [15, 30, 60],\n            initialItemsPerPage: 15\n        }\n    },\n    <ValueProvider>\n    {\n        provide: METADATA_SELECTOR_TYPE,\n        useValue: DialogMetadataSelectorComponent\n    },\n    <ValueProvider>\n    {\n        provide: METADATA_SELECTOR_OPTIONS,\n        useValue: <DialogMetadataSelectorOptions>\n        {\n            showButtonVisible: false\n        }\n    },\n    <ValueProvider>\n    {\n        provide: GRID_INITIALIZER_OPTIONS,\n        useValue: <QueryPermanentStorageGridInitializerOptions>\n        {\n            storageIppName: 'all-grid-ipp'\n        }\n    },\n    <ValueProvider>\n    {\n        provide: CONTENT_RENDERER_OPTIONS,\n        useValue: <TableContentRendererOptions>\n        {\n            cssClasses:\n            {\n                containerDiv: 'table-container thin-scrollbar'\n            }\n        }\n    },\n    <ValueProvider>\n    {\n        provide: HEADER_CONTENT_RENDERER_OPTIONS,\n        useValue: <TableHeaderContentRendererOptions>\n        {\n            cssClasses:\n            {\n                thDefault: 'header-default fixed-header'\n            }\n        }\n    },\n    \n    //############################ SELECT GLOBAL OPTIONS ############################\n    <ValueProvider>\n    {\n        provide: NORMAL_STATE_OPTIONS,\n        useValue: <NormalStateOptions<any>>\n        {\n            texts:\n            {\n                nothingSelected: NOTHING_SELECTED\n            }\n        }\n    },\n    <ValueProvider>\n    {\n        provide: POSITIONER_TYPE,\n        useValue: PopperJsPositionerComponent,\n    },\n\n    //######################### STRING LOCALIZATION #########################\n    <ClassProvider>\n    {\n        provide: STRING_LOCALIZATION,\n        useClass: NgxTranslateStringLocalizationService\n    },\n\n    //######################### PERMANENT STORAGE #########################\n    <ClassProvider>\n    {\n        provide: PERMANENT_STORAGE,\n        useClass: LocalPermanentStorageService\n    },\n\n    //######################### LOGGER #########################\n    REST_SINK,\n    <FactoryProvider>\n    {\n        provide: ConsoleSinkConfigService,\n        useFactory: (settingsSvc: SettingsService) =>\n        {\n            return new ConsoleSinkConfigService(undefined, LogEventLevel[settingsSvc?.settingsLogging?.consoleLogLevel as any] as any);\n            //TODO: solve typings\n        },\n        deps: [SettingsService]\n    },\n    <ClassProvider>\n    {\n        provide: LOGGER_REST_CLIENT,\n        useClass: RestLoggerService\n    },\n    <ClassProvider>\n    {\n        provide: SETTINGS_STORAGE,\n        useClass: LocalSettingsStorage\n    },\n\n    //######################### DEBUG DATA #########################\n    <FactoryProvider>\n    {\n        provide: DebugDataEnabledService,\n        useFactory: (settingsSvc: SettingsService) =>\n        {\n            const debugDataEnabled = new DebugDataEnabledService();\n\n            debugDataEnabled.setEnabled(settingsSvc.settingsDebugging?.debugData);\n\n            return debugDataEnabled;\n        },\n        deps: [SettingsService]\n    },\n\n    //######################### DATE API #########################\n    <ClassProvider>\n    {\n        provide: DATE_API,\n        useClass: DateFnsDateApi\n    },\n    DATE_FNS_FORMAT_PROVIDER,\n    DATE_FNS_DATE_API_OBJECT_TYPE,\n    <ValueProvider>\n    {\n        provide: DATE_FNS_LOCALE,\n        useValue: <DateFnsLocale>\n        {\n            locale: sk\n        }\n    },\n\n    //######################### VALIDATION ERRORS #########################\n\n    <ValueProvider>\n    {\n        provide: VALIDATION_ERROR_MESSAGES,\n        useValue:\n        {\n            required: 'Položka je povinná.',\n            number: 'Položka musí byť číslo.',\n            pattern: 'Položka nie je v požadovanom formáte.',\n            minValue: 'Nedodržaná minimálna povolená hodnota.',\n            maxValue: 'Nedodržaná maximálna povolená hodnota.',\n            minlength: 'Nedodržaná minimálna dĺžka.',\n            maxlength: 'Nedodržaná maximálna dĺžka.',\n            birthNumber: 'Nesprávny formát rodného čísla.',\n            email: 'Položka musí byť email.',\n            availableUsername: 'Prihlasovacie meno je použité',\n        }\n    },\n    <ValueProvider>\n    {\n        provide: VALIDATION_ERROR_RENDERER_FACTORY_OPTIONS,\n        useValue: <ValidationErrorRendererFactoryOptions>\n        {\n            container: ReservedSpaceValidationErrorsContainerComponent\n        }\n    },\n\n    //######################### NOTIFICATIONS #########################\n    DEFAULT_NOTIFICATIONS,\n    <ExistingProvider>\n    {\n        provide: MD_HELP_NOTIFICATIONS,\n        useExisting: NOTIFICATIONS\n    },\n    <ExistingProvider>\n    {\n        provide: ERROR_HANDLING_NOTIFICATIONS,\n        useExisting: NOTIFICATIONS\n    },\n    <ExistingProvider>\n    {\n        provide: CLIENT_ERROR_NOTIFICATIONS,\n        useExisting: NOTIFICATIONS\n    },\n\n    //######################### TITLED DIALOG #########################\n\n    <ValueProvider>\n    {\n        provide: TitledDialogServiceOptions,\n        useValue: new TitledDialogServiceOptions(MovableTitledDialogComponent)\n    },\n    \n    //######################### CONFIRMATION DIALOG #########################\n    <ValueProvider>\n    {\n        provide: CONFIRMATION_DIALOG_OPTIONS,\n        useValue: <ConfirmationDialogOptions>\n        {\n            confirmationText: 'Prajete si pokračovať?',\n            dialogCancelText: 'Nie',\n            dialogConfirmText: 'Áno'\n        }\n    },\n\n    //######################### POSITION #########################\n    FLOATING_UI_POSITION,\n\n    //######################### MARKDOWN #########################\n    <ValueProvider>\n    {\n        provide: RENDER_MARKDOWN_CONFIG,\n        useValue: <RenderMarkdownConfig>\n        {\n            assetsPathPrefix: 'dist/md',\n            baseUrl: '/pomoc'\n        }\n    },\n\n    //######################### REST CONFIG #########################\n    DATETIME_REST_DATE_API,\n    <ClassProvider>\n    {\n        provide: REST_MOCK_LOGGER,\n        useClass: RestMockLoggerService\n    },\n    REST_ERROR_HANDLING_MIDDLEWARE_ORDER,\n    <ValueProvider>\n    {\n        provide: REST_METHOD_MIDDLEWARES,\n        useValue:\n        [\n            LoggerMiddleware,\n            ResponseTypeMiddleware,\n            ReportProgressMiddleware,\n            ClientErrorHandlingMiddleware,\n            ...jsDevMode ? [...config.configuration?.disableMockLogger ? [] : [MockLoggerMiddleware]] : [],\n        ]\n    },\n    <ValueProvider>\n    {\n        provide: HTTP_CLIENT_ERROR_RESPONSE_MAPPER,\n        useValue: <HttpClientErrorResponseMapper>(err => \n        {\n            if(err?.error?.errors)\n            {\n                return err?.error?.errors;\n            }\n\n            if(isString(err?.error))\n            {\n                return [err?.error];\n            }\n\n            if(isJsObject(err?.error))\n            {\n                return [JSON.stringify(err?.error)];\n            }\n            \n            return [err.message];\n        })\n    },\n    <ValueProvider>\n    {\n        provide: HTTP_CLIENT_VALIDATION_ERROR_RESPONSE_MAPPER,\n        useValue: <HttpClientValidationErrorResponseMapper>(err => \n        {\n            if(err?.error?.validationErrors)\n            {\n                return err?.error?.validationErrors;\n            }\n\n            return null;\n        })\n    },\n    <FactoryProvider>\n    {\n        provide: HTTP_CLIENT_ERROR_CUSTOM_HANDLER,\n        useFactory: (injector: Injector) =>\n        {\n            return <Record<number, HttpClientErrorCustomHandler<any>>>\n            {\n                400: err => handle400WithValidationsFunc(err, {injector}),\n                404: handle404Func\n            };\n        },\n        deps: [Injector]\n    },\n    \n];\n","export const APP_TRANSFER_ID = 'my-app-id';\nexport const NOTHING_SELECTED = 'Nothing selected';\nexport const DATE_FORMAT = 'YYYY-MM-DD';\nexport const NAME_DATE_FORMAT = 'DD. MMMM YYYY (dddd)';\nexport const DEBUG_INFO = 'debugInfo';","import {Injectable} from '@angular/core';\nimport {TranslateLoader} from '@ngx-translate/core';\nimport {Observable, Observer} from 'rxjs';\n\n/**\n * Service used as webpack translate loader\n */\n@Injectable()\nexport class WebpackTranslateLoaderService implements TranslateLoader\n{\n    //######################### public methods - implementation of TranslateLoader #########################\n\n    /**\n     * Gets translations for specified language\n     * @param lang Language which translations are required\n     */\n    public getTranslation(lang: string): Observable<any> \n    {\n        return new Observable((observer: Observer<any>) =>\n        {\n            (async () => \n            {\n                const result = await import(`../../../content/l10n/${lang}.json`);\n\n                observer.next(result.default);\n                observer.complete();\n            })();\n        });\n    }\n}","import {Inject, Injectable} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {MissingTranslationHandler, MissingTranslationHandlerParams} from '@ngx-translate/core';\n\n/**\n * Service that reports missing translations, allows easier finding of missing translations\n */\n@Injectable()\nexport class ReportMissingTranslationService implements MissingTranslationHandler\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) private _logger: Logger)\n    {\n    }\n\n    //######################### public methods - MissingTranslationHandler #########################\n\n    /**\n     * @inheritdoc\n     */\n    public handle(params: MissingTranslationHandlerParams): string\n    {\n        this._logger.debug(`MISSING TRANSLATION: ${params.key}`);\n\n        return `MISSING: '${params.key}'`;\n    }\n}","import {NgModule, ClassProvider} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {ConsoleLogModule} from '@anglr/common/structured-log';\nimport {ProgressIndicatorModule} from '@anglr/common';\nimport {InternalServerErrorModule} from '@anglr/error-handling';\nimport {NotificationsGlobalModule} from '@anglr/notifications';\nimport {TranslateModule, TranslateLoader, MissingTranslationHandler} from '@ngx-translate/core';\nimport {DndModule} from '@ng-dnd/core';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nimport {HotkeyModule} from 'angular2-hotkeys';\n\nimport {AppComponent} from './app.component';\nimport {components, routesOptions} from './app.component.routes';\nimport {APP_TRANSFER_ID} from '../misc/constants';\nimport {providers} from './app.config';\nimport {WebpackTranslateLoaderService} from '../services/webpackTranslateLoader';\nimport {MenuModule} from '../modules';\nimport {config} from '../config';\nimport {ReportMissingTranslationService} from '../services/missingTranslation';\n\n/**\n * Main module shared for both server and browser side\n */\n@NgModule(\n{\n    imports:\n    [\n        BrowserModule.withServerTransition(\n        {\n            appId: APP_TRANSFER_ID\n        }),\n        HttpClientModule,\n        InternalServerErrorModule,\n        ProgressIndicatorModule,\n        NotificationsGlobalModule.forRoot(),\n        RouterModule,\n        HotkeyModule,\n        MenuModule,\n        ConsoleLogModule.forRoot(),\n        DndModule.forRoot(\n        {\n            backend: HTML5Backend\n        }),\n        TranslateModule.forRoot(\n        {\n            loader: <ClassProvider>\n            {\n                provide: TranslateLoader, \n                useClass: WebpackTranslateLoaderService\n            },\n            ...config.configuration?.debugTranslations ? \n                {\n                    missingTranslationHandler:\n                    {\n                        provide: MissingTranslationHandler,\n                        useClass: ReportMissingTranslationService\n                    }\n                } : \n                {\n                },\n            useDefaultLang: !config.configuration?.debugTranslations\n        })\n    ],\n    providers: providers,\n    declarations:\n    [\n        AppComponent,\n        ...components\n    ],\n    exports: [AppComponent]\n})\n@ModuleRoutes(components, routesOptions)\nexport class AppModule\n{\n}\n","import {NgModule, FactoryProvider} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {BrowserTransferStateModule} from '@angular/platform-browser';\nimport {AnglrExceptionHandlerOptions} from '@anglr/error-handling';\nimport {HotkeyModule} from 'angular2-hotkeys';\n\nimport {config} from '../config';\nimport {AppComponent} from './app.component';\nimport {AppModule} from './app.module';\n\n/**\n * Entry module for browser side\n */\n@NgModule(\n{\n    bootstrap: [AppComponent],\n    imports:\n    [\n        AppModule,\n        BrowserAnimationsModule,\n        BrowserTransferStateModule,\n        HotkeyModule.forRoot(\n        {\n            cheatSheetCloseEsc: true\n        })\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: AnglrExceptionHandlerOptions,\n            useFactory: () => new AnglrExceptionHandlerOptions(config.configuration?.debug, false)\n        }\n    ]\n})\nexport class BrowserAppModule\n{\n}\n","/* eslint-disable ressurectit/imports-order */\nimport './dependencies';\nimport './dependencies.browser';\nimport 'zone.js';\nimport './hacks';\nimport {platformBrowser} from '@angular/platform-browser';\nimport {NgModuleRef, enableProdMode} from '@angular/core';\nimport {runWhenModuleStable} from '@anglr/common';\nimport {RestTransferStateService} from '@anglr/rest';\nimport {simpleNotification} from '@jscrpt/common';\n\nimport {config} from './config';\nimport {BrowserAppModule} from './boot/browser-app.module';\n\nif(isProduction)\n{\n    enableProdMode();\n}\n\nconst platform = platformBrowser();\n\nrunWhenModuleStable(platform.bootstrapModule(BrowserAppModule), (moduleRef: NgModuleRef<any>) =>\n{\n    moduleRef.injector.get(RestTransferStateService)?.clearAndDeactivate();\n    jsDevMode && simpleNotification(jsDevMode && import.meta.webpackHot);\n}, config.configuration.debug);\n","import {FactoryProvider} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\n\nimport {StoreDataService} from '../services/storeData';\n\n/**\n * Creates factory provider for store data service\n * @param storeName - Name of storage that should be used\n */\nexport function createStoreDataServiceFactory(storeName: string): FactoryProvider\n{\n    return {\n        provide: StoreDataService,\n        useFactory: (storage: PermanentStorage) => new StoreDataService(storage, storeName),\n        deps: [PERMANENT_STORAGE]\n    };\n}","import {InjectionToken} from '@angular/core';\n\nimport {SettingsStorage} from '../services/settings';\n\n/**\n * Token used for settings storage\n */\nexport const SETTINGS_STORAGE: InjectionToken<SettingsStorage> = new InjectionToken<SettingsStorage>('SETTINGS_STORAGE');","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {CommonUtilsModule, CommonLocalizeModule, TooltipModule, CastPipesModule} from '@anglr/common';\nimport {NumeralModule} from '@anglr/common/numeral';\nimport {AuthorizationModule} from '@anglr/authentication';\nimport {DatePipesModule} from '@anglr/datetime';\nimport {TranslateModule} from '@ngx-translate/core';\n\n/**\n * Common module for displaying readonly data helpers\n */\n@NgModule(\n{\n    exports:\n    [\n        CommonModule,\n        RouterModule,\n        CommonUtilsModule,\n        CommonLocalizeModule,\n        NumeralModule,\n        TooltipModule,\n        CastPipesModule,\n        TranslateModule,\n        DatePipesModule,\n        AuthorizationModule,\n    ]\n})\nexport class DisplayingFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {NgSelectEditModule, NgSelectModule} from '@anglr/select';\nimport {NumberInputModule, HasErrorModule, FormPipesModule} from '@anglr/common/forms';\nimport {DateTimeSelectorModule} from '@anglr/datetime';\n\n/**\n * Common module for enabling forms features\n */\n@NgModule(\n{\n    exports:\n    [\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        NumberInputModule,\n        NgSelectModule,\n        NgSelectEditModule,\n        DateTimeSelectorModule,\n        HasErrorModule,\n        FormPipesModule,\n    ]\n})\nexport class FormsFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {DebugDataCopyClickModule} from '@anglr/common/material';\n\n/**\n * Common module for allowing debugging features in code\n */\n@NgModule(\n{\n    exports:\n    [\n        DebugDataCopyClickModule,\n    ]\n})\nexport class DebuggingFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {GridModule} from '@anglr/grid';\n\n/**\n * Common module for enabling usage of Grid\n */\n@NgModule(\n{\n    exports:\n    [\n        GridModule\n    ]\n})\nexport class GridFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {TitledDialogModule} from '@anglr/common/material';\n\nimport {DisplayingFeatureModule} from '../../displayingFeature.module';\nimport {MainMenuComponent} from '../components';\nimport {UserSettingsSAComponent} from '../../../components';\n\n/**\n * Module for menu components\n */\n@NgModule(\n{\n    imports:\n    [\n        DisplayingFeatureModule,\n        UserSettingsSAComponent,\n        TitledDialogModule,\n    ],\n    declarations:\n    [\n        MainMenuComponent\n    ],\n    exports:\n    [\n        MainMenuComponent\n    ]\n})\nexport class MenuModule\n{\n}","import {mapValuesToThis} from '@jscrpt/common';\n\nimport {DynamicRoute} from './dynamicRoutes.interface';\n\n/**\n * Form model for dynamic route\n */\nexport class DynamicRouteModel implements DynamicRoute\n{\n    //######################### public properties #########################\n\n    /**\n     * Path that is being used for route\n     */\n    public path: string = '';\n\n    /**\n     * Name of permission that is required for displaying page\n     */\n    public permission: string|undefined|null = null;\n\n    /**\n     * Indication whether use data resolver\n     */\n    public withResolver: boolean = false;\n\n    /**\n     * Name of relations that are used for obtaining data in relations\n     */\n    public resolverRelations: string|undefined|null = null;\n\n    /**\n     * Name of layout relations template that represents page contents\n     */\n    public template: string = '';\n\n    //######################### constructor #########################\n    constructor(value: DynamicRoute|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","import {Inject, Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {PERMANENT_STORAGE, PermanentStorage} from '@anglr/common';\nimport {PromiseOr} from '@jscrpt/common';\n\nimport {DynamicRoute, DynamicRouteData} from './dynamicRoutes.interface';\nimport {DynamicContentSAComponent} from '../../components';\n\nconst DYNAMIC_ROUTES = 'DYNAMIC_ROUTES';\n\n/**\n * Service used for handling dynamic routes\n */\n@Injectable({providedIn: 'root'})\nexport class DynamicRoutesService\n{\n    //######################### private fields #########################\n    \n    /**\n     * Current routes value\n     */\n    private _routes: DynamicRoute[] = [];\n\n    //######################### public properties #########################\n\n    /**\n     * Gets current routes\n     */\n    public get routes(): DynamicRoute[]\n    {\n        return this._routes;\n    }\n    \n    //######################### constructor #########################\n    constructor(@Inject(PERMANENT_STORAGE) private _permanentStorage: PermanentStorage,\n                private _router: Router,)\n    {\n    }\n\n    //######################### public methods #########################\n    \n    /**\n     * Initializes dynamic routes\n     */\n    public initialize(): PromiseOr<void>\n    {\n        this._routes = this._permanentStorage.get<DynamicRoute[]>(DYNAMIC_ROUTES) ?? [];\n        this._setRoutes();\n    }\n\n    /**\n     * Adds new dynamic route\n     * @param route - Route to be added into list of dynamic routes\n     */\n    public async addRoute(route: DynamicRoute): Promise<void>\n    {\n        this._routes.push(route);\n        \n        await this.save();\n    }\n\n    /**\n     * Saves routes, indicating some change in routes\n     */\n    public save(): PromiseOr<void>\n    {\n        this._permanentStorage.set(DYNAMIC_ROUTES, this._routes);\n        this._setRoutes();\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Sets dynamic routes to router\n     */\n    private _setRoutes(): void\n    {\n        const dynamicContentRoute = this._router.config.find(itm => itm.path == 'dynamicContent');\n\n        if(!dynamicContentRoute)\n        {\n            return;\n        }\n\n        dynamicContentRoute.children = this._routes.map(itm =>\n        {\n            return {\n                path: itm.path,\n                component: DynamicContentSAComponent,\n                data: <DynamicRouteData>\n                {\n                    template: itm.template\n                },\n            };\n        });\n\n        this._router.resetConfig(this._router.config);\n    }\n}","import {Injectable, KeyValueDiffers, Inject, KeyValueDiffer} from '@angular/core';\nimport {extend} from '@jscrpt/common';\nimport {Subject, Observable} from 'rxjs';\n\nimport {SettingsStorage} from './settings.interface';\nimport {SETTINGS_STORAGE} from '../../misc/tokens';\nimport {SettingsGeneral, SettingsDebug, SettingsLogging} from '../../config';\n\n/**\n * Class used as settings service\n */\n@Injectable({providedIn: 'root'})\nexport class SettingsService\n{\n    //######################### private methods #########################\n\n    /**\n     * Current general settings value\n     */\n    private _settings: SettingsGeneral = this._storage.get();\n\n    /**\n     * Current debugging settings value\n     */\n    private _settingsDebugging: SettingsDebug = this._storage.getDebugging();\n\n    /**\n     * Current logging settings value\n     */\n    private _settingsLogging: SettingsLogging = this._storage.getLogging();\n\n    /**\n     * General settings value differ\n     */\n    private _settingsValueDiff: KeyValueDiffer<any, any>;\n\n    /**\n     * Debugging settings value differ\n     */\n    private _settingsDebuggingValueDiff: KeyValueDiffer<any, any>;\n\n    /**\n     * Occurs when any of general settings properties change\n     */\n    private _settingsChangeSubject: Subject<keyof SettingsGeneral> = new Subject<keyof SettingsGeneral>();\n\n    /**\n     * Occurs when any of debugging settings properties change\n     */\n    private _settingsDebuggingChangeSubject: Subject<keyof SettingsDebug> = new Subject<keyof SettingsDebug>();\n\n    //######################### public properties #########################\n\n    /**\n     * Gets general settings object value\n     */\n    public get settings(): SettingsGeneral\n    {\n        return this._settings;\n    }\n\n    /**\n     * Gets debugging settings object value\n     */\n    public get settingsDebugging(): SettingsDebug\n    {\n        return this._settingsDebugging;\n    }\n\n    /**\n     * Gets logging settings object value\n     */\n    public get settingsLogging(): SettingsLogging\n    {\n        return this._settingsLogging;\n    }\n\n    /**\n     * Occurs when any of general settings properties change\n     */\n    public get settingsChange(): Observable<keyof SettingsGeneral>\n    {\n        return this._settingsChangeSubject.asObservable();\n    }\n\n    /**\n     * Occurs when any of debugging settings properties change\n     */\n    public get settingsDebuggingChange(): Observable<keyof SettingsDebug>\n    {\n        return this._settingsDebuggingChangeSubject.asObservable();\n    }\n\n    //######################### constructor #########################\n    constructor(keyValueDiffers: KeyValueDiffers,\n                @Inject(SETTINGS_STORAGE) private _storage: SettingsStorage)\n    {\n        this._settingsValueDiff = keyValueDiffers.find(this._settings).create();\n        this._settingsValueDiff.diff(this._settings);\n\n        this._settingsDebuggingValueDiff = keyValueDiffers.find(this._settingsDebugging).create();\n        this._settingsDebuggingValueDiff.diff(this._settingsDebugging);\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Sets new general settings\n     * @param settings Instance of general settings object\n     */\n    public setSettings(settings: SettingsGeneral): void\n    {\n        this._settings = extend(true, {}, this._settings, settings);\n        this._storage.set(settings);\n\n        const diff = this._settingsValueDiff.diff(settings);\n        \n        if(diff)\n        {\n            diff.forEachChangedItem(itm =>\n            {\n                this._settingsChangeSubject.next(itm.key as any);\n            });\n        }\n    }\n\n    /**\n     * Sets new debugging settings\n     * @param settings Instance of debugging settings object\n     */\n    public setDebuggingSettings(settings: SettingsDebug): void\n    {\n        this._settingsDebugging = extend(true, {}, this._settingsDebugging, settings);\n        this._storage.setDebugging(settings);\n\n        const diff = this._settingsDebuggingValueDiff.diff(settings);\n        \n        if(diff)\n        {\n            diff.forEachChangedItem(itm =>\n            {\n                this._settingsDebuggingChangeSubject.next(itm.key as any);\n            });\n        }\n    }\n\n    /**\n     * Sets new logging settings\n     * @param settings Instance of logging settings object\n     */\n    public setLoggingSettings(settings: SettingsLogging): void\n    {\n        this._settingsLogging = extend(true, {}, this._settingsLogging, settings);\n        this._storage.setLogging(settings);\n    }\n}","import {Inject, Injectable} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\nimport {extend} from '@jscrpt/common';\n\nimport {config, SettingsGeneral, SettingsDebug, SettingsLogging} from '../../config';\nimport {SettingsStorage} from './settings.interface';\n\nconst GENERAL_SETTINGS_STORAGE = 'general-settings';\nconst DEBUGGING_SETTINGS_STORAGE = 'debugging-settings';\nconst LOGGING_SETTINGS_STORAGE = 'logging-settings';\n\n/**\n * Settings storage using local storage\n */\n@Injectable()\nexport class LocalSettingsStorage implements SettingsStorage\n{\n    //######################### constructor #########################\n    constructor(@Inject(PERMANENT_STORAGE) private _store: PermanentStorage,)\n    {\n\n    }\n\n    //######################### public methods - implementation of SettingsStorage #########################\n\n    /**\n     * Gets general settings object from storage\n     */\n    public get(): SettingsGeneral\n    {\n        let settings = this._store.get<SettingsGeneral>(GENERAL_SETTINGS_STORAGE);\n\n        settings = extend(true,\n                          {},\n                          <SettingsGeneral>\n                          {\n                              theme: config.general.theme,\n                              language: config.general.language\n                          },\n                          settings);\n\n        return settings;\n    }\n\n    /**\n     * Sets general settings object to storage\n     * @param config General settings object to be stored\n     */\n    public set(config: SettingsGeneral): void\n    {\n        this._store.set(GENERAL_SETTINGS_STORAGE, config);\n    }\n\n    /**\n     * Gets debugging settings object from storage\n     */\n    public getDebugging(): SettingsDebug\n    {\n        let settings = this._store.get<SettingsDebug>(DEBUGGING_SETTINGS_STORAGE);\n\n        settings = extend(true,\n                          {},\n                          <SettingsDebug>\n                          {\n                              consoleEnabled: config.debug.consoleEnabled,\n                              debugData: config.debug.debugData\n                          },\n                          settings);\n\n        return settings;\n    }\n\n    /**\n     * Sets debugging settings object to storage\n     * @param config Debugging settings object to be stored\n     */\n    public setDebugging(config: SettingsDebug): void\n    {\n        this._store.set(DEBUGGING_SETTINGS_STORAGE, config);\n    }\n\n    /**\n     * Gets logging settings object from storage\n     */\n    public getLogging(): SettingsLogging\n    {\n        let settings = this._store.get<SettingsLogging>(LOGGING_SETTINGS_STORAGE);\n\n        settings = extend(true,\n                          {},\n                          <SettingsLogging>\n                          {\n                              consoleLogLevel: config.logging.consoleLogLevel\n                          },\n                          settings);\n\n        return settings;\n    }\n\n    /**\n     * Sets logging settings object to storage\n     * @param config Logging settings object to be stored\n     */\n    public setLogging(config: SettingsLogging): void\n    {\n        this._store.set(LOGGING_SETTINGS_STORAGE, config);\n    }\n}","import {PermanentStorage} from '@anglr/common';\nimport {Dictionary} from '@jscrpt/common';\n\n/**\n * Service used for obtaining and storing data\n */\nexport class StoreDataService<TData = any>\n{\n    //######################### constructor #########################\n    constructor(private _storage: PermanentStorage,\n                private _storeKey: string,)\n    {\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Stores data into store\n     * @param name - Name of stored data\n     * @param data - Data to be stored\n     */\n    public setData(name: string, data: TData): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        store[name] = data;\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data\n     * @param name - Name of data to be retrieved\n     */\n    public getData(name: string): TData|null\n    {\n        return (this._storage.get<any>(this._storeKey)?.[name]) ?? null;\n    }\n\n    /**\n     * Removes data from store\n     * @param name - Name of data to be removed\n     */\n    public removeData(name: string): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        delete store[name];\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data names\n     */\n    public getStored(): string[]\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        return Object.keys(store);\n    }\n}"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","t","i0","DynamicContentSAComponent","constructor","_route","_store","_relationsManager","metadata","ngOnInit","this","data","subscribe","template","nameof","getData","layout","setRelations","relations","selectors","standalone","features","provide","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","deps","StoreDataService","RELATIONS_METADATA_STORAGE","provideLayoutRelationsCustomComponents","provideCssLayoutRelations","provideTinyMceLayoutRelations","provideHandlebarsLayoutRelations","provideRestLayoutRelations","provideFormLayoutRelations","provideSampleLayoutRelations","createStoreDataServiceFactory","decls","vars","consts","RouterModule","i1","AuthorizationModule","i4","LayoutComponentRendererSADirective","encapsulation","changeDetection","UserSettingsSections","theme_r11","lang_r12","level_r15","level_r17","UserSettingsSAComponent","settingsSvc","formBuilder","consoleConfig","debugDataEnabled","themes","config","languages","logLevels","activeSection","General","settings","debuggingSettings","settingsDebugging","loggingSettings","settingsLogging","_getLogLevels","generalSettingsForm","group","language","theme","debuggingSettingsForm","consoleEnabled","debugData","loggingSettingsForm","consoleLogLevel","LogEventLevel","valueChanges","generalSettings","setSettings","debugSettings","setEnabled","setDebuggingSettings","restrictToLevel","setLoggingSettings","forEach","val","isNaN","push","name","value","DisplayingFeatureModule","i5","FormsFeatureModule","i2","styles","SampleDynamicModuleItemsProvider","_logger","tryToGet","source","package","debug","LOGGER","factory","SampleDynamicModuleRelationsProvider","moduleName","SampleDynamicModuleTypesProvider","SAMPLE_LAYOUT_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","SAMPLE_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","SAMPLE_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideSampleLayout","provideSampleLayoutEditor","provideStaticPackageSource","provideSampleLayoutRelationsEditor","globalDefine","global","Document","ngDesignerMetadata","observableSubscribe","Observable","next","error","complete","isBlank","isFunction","err","console","log","call","routeAnimationTrigger","trigger","transition","query","animateChild","optional","style","position","perspective","top","left","width","height","transform","opacity","animate","loaderTrigger","demoOverviewRoute","path","permission","withResolver","resolverRelations","demoDetailRoute","demoOverviewLayout","displayName","options","children","content","text","cssClass","margin","right","bottom","padding","textStyling","scope","horizontal","wrap","label","placeholder","flex","controlName","controlType","disabled","buttonCssClass","undefined","demoOverviewRelations","relationsOptions","url","method","runImmediately","params","configurable","type","nodeMetadata","scopeConfigurable","coordinates","x","y","outputs","outputName","inputs","inputName","surname","email","demoDetailLayout","MainMenuComponent","_authSvc","_router","_dialog","_dynamicRoutes","logout","navigate","loadDemo","event","preventDefault","stopPropagation","overview","setData","detail","routes","find","itm","addRoute","window","location","reload","openSettings","open","title","maxHeight","AppComponent","translateSvc","_changeDetector","_appHotkeys","logger","document","consoleVisible","authenticated","routeComponentState","guiVersion","version","serverVersion","serverName","initialized","verbose","body","classList","add","_theme","_settingsChangeSubscription","settingsChange","remove","use","detectChanges","_settingsDebuggingChangeSubscription","settingsDebuggingChange","_toggleConsoleHotkey","setDefaultLang","getUserIdentity","identity","isAuthenticated","_authChangedSubscription","authenticationChanged","initialize","ngAfterViewInit","_routerOutletActivatedSubscription","routerOutlet","activateEvents","activatedRouteData","activatedRoute","component","ngOnDestroy","unsubscribe","destroy","oldHelpHotkey","hotkeys","get","Hotkey","DOCUMENT","viewQuery","AppHotkeysService","fadeInOutTrigger","consoleAnimationTrigger","routesOptions","rootModule","rootModuleConfig","enableTracing","useHash","staticRoutesBefore","loadChildren","DefaultModule","RoutedContentModule","DynamicContentModule","staticRoutesAfter","loadComponent","AccessDeniedComponent","NotFoundComponent","GlobalizationService","GlobalizationServiceInterface","locale","localeChange","EMPTY","RestLoggerService","RESTClient","logs","_log","pipe","catchError","_","warn","_logs","_unhandledErrorsTransform","addBasicInfo","length","obj","message","startsWith","replace","info","JSON","parse","Array","isArray","JsonContentType","DisableMiddleware","ClientErrorHandlingMiddleware","DisableInterceptor","AuthInterceptor","SuppressAuthInterceptor","POST","__param","BaseUrl","DefaultHeaders","USER_DATA","AccountService","_storage","inject","PERMANENT_STORAGE","_identity","permissions","_permissions","_computePermissionsForRoles","login","accessToken","observer","userName","password","privileges","_roles2privileges","firstName","concat","additionalInfo","rememberMe","set","roles","perms","role","computedPermissions","permissionsDict","providedIn","AccountAuthOptions","AuthenticationServiceOptions","_accountSvc","_location","super","isAuthPage","isPresent","indexOf","showAuthPage","queryParams","returnUrl","showAccessDenied","RestMockLoggerService","logResponse","request","response","responseString","isString","Blob","reader","FileReader","onloadend","result","readAsDataURL","ArrayBuffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","stringify","_logResponse","toPromise","catch","_mock","NEVER","MockLoggerMiddleware","providers","HTTP_GATEWAY_TIMEOUT_INTERCEPTOR_PROVIDER","SERVICE_UNAVAILABLE_INTERCEPTOR_PROVIDER","HTTP_SERVER_ERROR_INTERCEPTOR_PROVIDER","NO_CONNECTION_INTERCEPTOR_PROVIDER","SUPPRESS_AUTH_INTERCEPTOR_PROVIDER","AUTH_INTERCEPTOR_PROVIDER","PROGRESS_INTERCEPTOR_PROVIDER","NoConnectionInterceptorOptions","HttpGatewayTimeoutInterceptorOptions","GlobalizationServiceImpl","ERROR_WITH_URL_EXTENDER","ANGLR_EXCEPTION_HANDLER_PROVIDER","DIALOG_INTERNAL_SERVER_ERROR_RENDERER_PROVIDER","authService","alert","APP_INITIALIZER","AuthenticationService","NO_DATA_RENDERER_OPTIONS","useValue","texts","loading","noData","notLoaded","GRID_INITIALIZER_TYPE","QueryGridInitializerComponent","PAGING_OPTIONS","itemsPerPageValues","initialItemsPerPage","METADATA_SELECTOR_TYPE","DialogMetadataSelectorComponent","METADATA_SELECTOR_OPTIONS","showButtonVisible","GRID_INITIALIZER_OPTIONS","storageIppName","CONTENT_RENDERER_OPTIONS","cssClasses","containerDiv","HEADER_CONTENT_RENDERER_OPTIONS","thDefault","NORMAL_STATE_OPTIONS","nothingSelected","POSITIONER_TYPE","PopperJsPositionerComponent","STRING_LOCALIZATION","NgxTranslateStringLocalizationService","LocalPermanentStorageService","REST_SINK","ConsoleSinkConfigService","SettingsService","LOGGER_REST_CLIENT","SETTINGS_STORAGE","LocalSettingsStorage","DebugDataEnabledService","DATE_API","DateFnsDateApi","DATE_FNS_FORMAT_PROVIDER","DATE_FNS_DATE_API_OBJECT_TYPE","DATE_FNS_LOCALE","sk","VALIDATION_ERROR_MESSAGES","required","number","pattern","minValue","maxValue","minlength","maxlength","birthNumber","availableUsername","VALIDATION_ERROR_RENDERER_FACTORY_OPTIONS","container","ReservedSpaceValidationErrorsContainerComponent","DEFAULT_NOTIFICATIONS","MD_HELP_NOTIFICATIONS","useExisting","NOTIFICATIONS","ERROR_HANDLING_NOTIFICATIONS","CLIENT_ERROR_NOTIFICATIONS","TitledDialogServiceOptions","MovableTitledDialogComponent","CONFIRMATION_DIALOG_OPTIONS","confirmationText","dialogCancelText","dialogConfirmText","FLOATING_UI_POSITION","RENDER_MARKDOWN_CONFIG","assetsPathPrefix","baseUrl","DATETIME_REST_DATE_API","REST_MOCK_LOGGER","REST_ERROR_HANDLING_MIDDLEWARE_ORDER","REST_METHOD_MIDDLEWARES","LoggerMiddleware","ResponseTypeMiddleware","ReportProgressMiddleware","HTTP_CLIENT_ERROR_RESPONSE_MAPPER","errors","isJsObject","HTTP_CLIENT_VALIDATION_ERROR_RESPONSE_MAPPER","validationErrors","HTTP_CLIENT_ERROR_CUSTOM_HANDLER","injector","handle400WithValidationsFunc","handle404Func","Injector","WebpackTranslateLoaderService","getTranslation","lang","default","ReportMissingTranslationService","handle","key","AppModule","imports","BrowserModule","appId","HttpClientModule","InternalServerErrorModule","ProgressIndicatorModule","NotificationsGlobalModule","HotkeyModule","MenuModule","ConsoleLogModule","DndModule","backend","HTML5Backend","TranslateModule","loader","TranslateLoader","debugTranslations","missingTranslationHandler","MissingTranslationHandler","useDefaultLang","ModuleRoutes","BrowserAppModule","bootstrap","AnglrExceptionHandlerOptions","BrowserAnimationsModule","BrowserTransferStateModule","cheatSheetCloseEsc","enableProdMode","platform","platformBrowser","runWhenModuleStable","bootstrapModule","moduleRef","RestTransferStateService","clearAndDeactivate","storeName","storage","InjectionToken","CommonModule","CommonUtilsModule","CommonLocalizeModule","NumeralModule","TooltipModule","CastPipesModule","DatePipesModule","ReactiveFormsModule","MatSlideToggleModule","NumberInputModule","NgSelectModule","NgSelectEditModule","DateTimeSelectorModule","HasErrorModule","FormPipesModule","DebuggingFeatureModule","DebugDataCopyClickModule","GridFeatureModule","GridModule","TitledDialogModule","DynamicRouteModel","mapValuesToThis","DYNAMIC_ROUTES","DynamicRoutesService","_permanentStorage","_routes","_setRoutes","route","save","dynamicContentRoute","resetConfig","keyValueDiffers","_settings","_settingsDebugging","getDebugging","_settingsLogging","getLogging","_settingsChangeSubject","Subject","_settingsDebuggingChangeSubject","_settingsValueDiff","create","diff","_settingsDebuggingValueDiff","asObservable","extend","forEachChangedItem","setDebugging","setLogging","GENERAL_SETTINGS_STORAGE","DEBUGGING_SETTINGS_STORAGE","LOGGING_SETTINGS_STORAGE","_storeKey","removeData","getStored"],"sourceRoot":""}