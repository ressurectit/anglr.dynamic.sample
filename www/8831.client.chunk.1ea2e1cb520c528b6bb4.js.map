{"version":3,"file":"8831.client.chunk.1ea2e1cb520c528b6bb4.js","mappings":"qOAaM,MAAOA,EAGTC,YAAYC,GAERA,EAAkBC,cAAc,IACnC,E,iCANQH,GAAiBI,EAAAA,EAAAA,EAAAA,GAAA,E,kBAAjBJ,EAAiBK,UAAAA,CAAAA,CAAAA,mBAAAC,YAAAA,EAAAC,SAAAA,CAAAA,EAAAA,GAAAC,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,QAAAA,mBAAAA,eAAAA,CAAAA,EAAAA,cAAAA,oBAAAA,sBAAAA,eAAAA,CAAAA,EAAAA,KAAAA,YAAAA,gBAAAC,SAAAA,SAAAA,EAAAA,GAAA,MCb9BP,EAAAA,GAAAA,EAAAA,KAAAA,GAA+CA,EAAAA,EAAAA,EAAAA,qBAAiBA,EAAAA,KAEhEA,EAAAA,GAAAA,EAAAA,MAAAA,EAAAA,CAA2E,QAEnEA,EAAAA,GAAAA,EAAAA,OAAAA,GACAA,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,EAAAA,2BAAuBA,EAAAA,KAC7BA,EAAAA,GAAAA,EAAAA,OAAAA,GACJA,EAAAA,IAAAA,G,uFCDE,MAAOQ,EAcEC,iBAEP,OAAOC,KAAKC,WACf,CAQMZ,cAAca,GAEjBF,KAAKC,YAAcC,CACtB,E,iCA5BQJ,E,sBAAAA,E,QAAAA,EAAAA,K,WADY,Q","sources":["webpack://ng-universal-demo/./app/pages/notFound/notFound.component.ts","webpack://ng-universal-demo/./app/pages/notFound/notFound.component.html","webpack://ng-universal-demo/../../../src/services/statusCode/statusCode.service.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {StatusCodeService} from '@anglr/common';\n\n/**\n * Page displayed when url was not found\n */\n@Component(\n{\n    selector: 'not-found-view',\n    templateUrl: 'notFound.component.html',\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotFoundComponent\n{\n    //######################### constructor #########################\n    constructor(statusCodeService: StatusCodeService)\n    {\n        statusCodeService.setStatusCode(404);\n    }\n}","<h3 class=\"title top-border-round margin-none\">STRÁNKA NENÁJDENÁ</h3>\r\n\r\n<div class=\"light-block padding-top-small bottom-border-round full-height\">\r\n    <h2>\r\n        <span class=\"fa fa-file-o text-danger\"></span>\r\n        <span>Stránka nebola nájdená!</span>\r\n        <span class=\"fa fa-file-o text-danger\"></span>\r\n    </h2>\r\n</div>","import {Injectable} from '@angular/core';\n\n/**\n * Service used for transfering http status code for response\n */\n@Injectable({providedIn: 'root'})\nexport class StatusCodeService\n{\n    //######################### private fields #########################\n    \n    /**\n     * Current status code\n     */\n    private _statusCode?: number;\n\n    //######################### public properties #########################\n\n    /**\n     * Gets current status code\n     */\n    public get statusCode(): number | null | undefined\n    {\n        return this._statusCode;\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Sets current status code\n     * @param code - Status code value that will be set\n     */\n    public setStatusCode(code?: number): void\n    {\n        this._statusCode = code;\n    }\n}"],"names":["NotFoundComponent","constructor","statusCodeService","setStatusCode","i0","selectors","standalone","features","decls","vars","consts","template","StatusCodeService","statusCode","this","_statusCode","code"],"sourceRoot":""}