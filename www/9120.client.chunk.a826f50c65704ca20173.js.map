{"version":3,"file":"9120.client.chunk.a826f50c65704ca20173.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/trigger/node/triggerNode.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/basic-components/src/dynamicItems/trigger/node/triggerNode.component.html","webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/trigger/metadata/trigger.relationsMetadata.ts","webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.model.ts","webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.html"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {ConfigureNodeEndpointData, ConfigureNodeEndpointSAComponent} from '@anglr/dynamic/layout-relations';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent} from '@anglr/dynamic/relations-editor';\nimport {extend} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {TriggerRelationsOptions} from '../trigger.options';\n\n/**\n * Trigger node component for negation\n */\n@Component(\n{\n    selector: 'trigger-node',\n    templateUrl: 'triggerNode.component.html',\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TriggerNodeSAComponent extends RelationsNodeBase<TriggerRelationsOptions> implements RelationsNode<TriggerRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets component outputs\n     */\n    protected get endpoints(): ConfigureNodeEndpointData[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            endpoints: []\n        };\n\n        return (this.metadata.relationsOptions.endpoints ??= []);\n    }\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new output endpoint\n     */\n    protected async addEndpoint(): Promise<void>\n    {\n        const param: ConfigureNodeEndpointData = \n        {\n            name: '',\n            defaultValue: null,\n            skipInit: true,\n            allowSkipInit: true,\n        };\n\n        if(await this.configureEndpoint(param))\n        {\n            this.endpoints.push(param);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Removes endpoint\n     * @param endpoint - Endpoint to be removed\n     */\n    protected removeEndpoint(endpoint: ConfigureNodeEndpointData): void\n    {\n        const index = this.endpoints.indexOf(endpoint);\n\n        if(index >= 0)\n        {\n            this.endpoints.splice(index, 1);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Configures endpoint\n     * @param endpoint - Endpoint to be configured\n     */\n    protected async configureEndpoint(endpoint: ConfigureNodeEndpointData): Promise<boolean>\n    {\n        const original = JSON.parse(JSON.stringify(endpoint));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureNodeEndpointSAComponent, ConfigureNodeEndpointData, true|undefined|null>(ConfigureNodeEndpointSAComponent,\n        {\n            title: 'configure endpoint',\n            width: '60vw',\n            data: endpoint\n        }).afterClosed());\n\n        if(!result)\n        {\n            extend(endpoint, original);\n        }\n        else\n        {\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n}",null,"import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {TriggerNodeSAComponent} from '../node/triggerNode.component';\n\n/**\n * Trigger relations metadata\n */\nexport class TriggerRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Trigger',\n        description: 'Allows sending data on trigger input',\n        group: 'Data',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = TriggerNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {mapValuesToThis} from '@jscrpt/common';\n\nimport {ComponentEndpointDef} from '../../interfaces';\n\n/**\n * Component endopoint model\n */\nexport class ComponentEndpointModel<TValue = any> implements ComponentEndpointDef<TValue>\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public defaultValue: TValue|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public name: string = '';\n\n    /**\n     * @inheritdoc\n     */\n    public skipInit: boolean = false;\n    \n    //######################### constructor #########################\n    constructor(value: ComponentEndpointDef|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TitledDialogService, TITLED_DIALOG_DATA} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {CodeEditorContent, CodeEditorDialogComponent, CodeEditorDialogData, getJson, JsonLanguageModel} from '@anglr/dynamic';\nimport {extend, isPresent} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ComponentEndpointDef} from '../../interfaces';\nimport {ComponentEndpointModel} from './configureNodeEndpoint.model';\nimport {ConfigureNodeEndpointData} from './configureNodeEndpoint.interface';\n\n/**\n * Component used for configuring node endpoint\n */\n@Component(\n{\n    selector: 'configure-node-endpoint',\n    templateUrl: 'configureNodeEndpoint.component.html',\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n        MatDialogModule,\n        CommonModule,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigureNodeEndpointSAComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of form group that is bound to form\n     */\n    protected form: FormGroup<FormModelGroup<ComponentEndpointDef>>;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: ConfigureNodeEndpointData,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,)\n    {\n\n        this.form = formModelBuilder.build<ComponentEndpointDef>(new ComponentEndpointModel(data));\n        this.form.valueChanges.subscribe(value => extend(data, value));\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows code editor\n     */\n    protected async showCodeEditor(): Promise<void>\n    {\n        const content = isPresent(this.data.defaultValue) ? JSON.stringify(this.data.defaultValue, null, 4) : '';\n\n        const result = await lastValueFrom(this.dialog.open<CodeEditorDialogComponent, CodeEditorDialogData, CodeEditorContent|null>(CodeEditorDialogComponent,\n        {\n            title: 'Code editor',\n            width: '75vw',\n            height: '75vh',\n            data: \n            {\n                content,\n                languageModel: JsonLanguageModel,\n\n            }\n        }).afterClosed());\n\n        if(isPresent(result))\n        {\n            this.data.defaultValue = getJson(result.content);\n        }\n    }\n}"],"names":["TriggerNodeSAComponent","RelationsNodeBase","endpoints","this","metadata","relationsOptions","constructor","changeDetector","element","dialog","super","addEndpoint","param","name","defaultValue","skipInit","allowSkipInit","configureEndpoint","push","history","getNewState","removeEndpoint","endpoint","index","indexOf","splice","original","JSON","parse","stringify","result","lastValueFrom","open","ConfigureNodeEndpointSAComponent","title","width","data","afterClosed","extend","CommonModule","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","TriggerRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze","ComponentEndpointModel","value","mapValuesToThis","formModelBuilder","form","build","valueChanges","subscribe","showCodeEditor","content","isPresent","CodeEditorDialogComponent","height","languageModel","JsonLanguageModel","getJson","TITLED_DIALOG_DATA","FormModelBuilder","ReactiveFormsModule","MatDialogModule"],"sourceRoot":""}