{"version":3,"file":"4641.client.chunk.ae91184cb4a97dbdfb2c.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.model.ts","webpack://ng-universal-demo/../../../layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/layout-relations/src/components/configureNodeEndpoint/configureNodeEndpoint.component.html","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/layout-relations/src/dynamicItems/componentInputs/node/componentInputsNode.component.html","webpack://ng-universal-demo/../../../layout-relations/src/dynamicItems/componentInputs/node/componentInputsNode.component.ts","webpack://ng-universal-demo/../../../layout-relations/src/dynamicItems/componentInputs/metadata/componentInputs.relationsMetadata.ts"],"sourcesContent":["import {mapValuesToThis} from '@jscrpt/common';\n\nimport {ComponentEndpointDef} from '../../interfaces';\n\n/**\n * Component endopoint model\n */\nexport class ComponentEndpointModel<TValue = any> implements ComponentEndpointDef<TValue>\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public defaultValue: TValue|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public name: string = '';\n    \n    //######################### constructor #########################\n    constructor(value: ComponentEndpointDef|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TitledDialogService, TITLED_DIALOG_DATA} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {CodeEditorContent, CodeEditorDialogComponent, CodeEditorDialogData, getJson, JsonLanguageModel} from '@anglr/dynamic';\nimport {extend, isPresent} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ComponentEndpointDef} from '../../interfaces';\nimport {ComponentEndpointModel} from './configureNodeEndpoint.model';\n\n/**\n * Component used for configuring node endpoint\n */\n@Component(\n{\n    selector: 'configure-node-endpoint',\n    templateUrl: 'configureNodeEndpoint.component.html',\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n        MatDialogModule,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigureNodeEndpointSAComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of form group that is bound to form\n     */\n    protected form: FormGroup<FormModelGroup<ComponentEndpointDef>>;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: ComponentEndpointDef,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,)\n    {\n\n        this.form = formModelBuilder.build<ComponentEndpointDef>(new ComponentEndpointModel(data));\n        this.form.valueChanges.subscribe(value => extend(data, value));\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows code editor\n     */\n    protected async showCodeEditor(): Promise<void>\n    {\n        const content = isPresent(this.data.defaultValue) ? JSON.stringify(this.data.defaultValue, null, 4) : '';\n\n        const result = await lastValueFrom(this.dialog.open<CodeEditorDialogComponent, CodeEditorDialogData, CodeEditorContent|null>(CodeEditorDialogComponent,\n        {\n            title: 'Code editor',\n            width: '75vw',\n            height: '75vh',\n            data: \n            {\n                content,\n                languageModel: JsonLanguageModel,\n\n            }\n        }).afterClosed());\n\n        if(isPresent(result))\n        {\n            this.data.defaultValue = getJson(result.content);\n        }\n    }\n}",null,null,"import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RelationsNode, RelationsNodeBase, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent} from '@anglr/dynamic/relations-editor';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {extend} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ComponentInputsRelationsOptions} from '../componentInputs.options';\nimport {ConfigureNodeEndpointSAComponent} from '../../../components';\nimport {ComponentEndpointDef} from '../../../interfaces';\n\n/**\n * Relations node component for component inputs\n */\n@Component(\n{\n    selector: 'component-inputs-node',\n    templateUrl: 'componentInputsNode.component.html',\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComponentInputsNodeSAComponent extends RelationsNodeBase<ComponentInputsRelationsOptions> implements RelationsNode<ComponentInputsRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets component inputs\n     */\n    protected get endpoints(): ComponentEndpointDef[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            inputs: []\n        };\n\n        return (this.metadata.relationsOptions.inputs ??= []);\n    }\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new input endpoint\n     */\n    protected async addEndpoint(): Promise<void>\n    {\n        const param: ComponentEndpointDef = \n        {\n            name: '',\n            defaultValue: null,\n        };\n\n        if(await this.configureEndpoint(param))\n        {\n            this.endpoints.push(param);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Removes endpoint\n     * @param endpoint - Endpoint to be removed\n     */\n    protected removeEndpoint(endpoint: ComponentEndpointDef): void\n    {\n        const index = this.endpoints.indexOf(endpoint);\n\n        if(index >= 0)\n        {\n            this.endpoints.splice(index, 1);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Configures endpoint\n     * @param endpoint - Endpoint to be configured\n     */\n    protected async configureEndpoint(endpoint: ComponentEndpointDef): Promise<boolean>\n    {\n        const original = JSON.parse(JSON.stringify(endpoint));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureNodeEndpointSAComponent, ComponentEndpointDef, true|undefined|null>(ConfigureNodeEndpointSAComponent,\n        {\n            title: 'configure component input',\n            width: '60vw',\n            data: endpoint\n        }).afterClosed());\n\n        if(!result)\n        {\n            extend(endpoint, original);\n        }\n        else\n        {\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {ComponentInputsNodeSAComponent} from '../node/componentInputsNode.component';\n\n/**\n * Component inputs relations metadata\n */\nexport class ComponentInputsRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Component inputs',\n        description: 'Definition of relations component inputs',\n        group: 'Component',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = ComponentInputsNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["ComponentEndpointModel","constructor","value","defaultValue","name","mapValuesToThis","this","ConfigureNodeEndpointSAComponent","data","dialog","formModelBuilder","form","build","valueChanges","subscribe","extend","showCodeEditor","content","isPresent","JSON","stringify","result","lastValueFrom","open","CodeEditorDialogComponent","title","width","height","languageModel","JsonLanguageModel","afterClosed","getJson","TITLED_DIALOG_DATA","i1","FormModelBuilder","ReactiveFormsModule","i3","MatDialogModule","i4","ComponentInputsNodeSAComponent","RelationsNodeBase","changeDetector","element","super","endpoints","metadata","relationsOptions","_a","inputs","_b","addEndpoint","param","configureEndpoint","push","history","getNewState","removeEndpoint","endpoint","index","indexOf","splice","original","parse","i0","CommonModule","i2","RelationsNodeHeaderSAComponent","RelationNodeOutputSAComponent","ComponentInputsRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze"],"sourceRoot":""}