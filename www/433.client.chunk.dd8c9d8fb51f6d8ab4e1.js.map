{"version":3,"file":"433.client.chunk.dd8c9d8fb51f6d8ab4e1.js","mappings":"oXAMO,MAAMA,EAAoC,e,EAAA,G,EAA6D,mBAAY,WAAW,oEAAsDC,qCAAsC,E,+KAAA,kBAAhL,mCCQ1C,IAAMC,EAAN,MA4CHC,YAAYC,GArCF,KAAAC,YAAgCC,EAAAA,EAKhC,KAAAC,eAAyB,EAKzB,KAAAC,QAAuB,KA6B7BC,KAAKC,OAASN,EAASO,IAAIC,EAAAA,GAC3BH,KAAKI,wBAA0BT,EAASO,IAAIG,EAAAA,EAChD,CAOOC,YAAYC,IAEZC,EAAAA,EAAAA,GAA+B,WAAYD,KAEvCE,EAAAA,EAAAA,IAAUT,KAAKD,WAEdW,aAAaV,KAAKD,SAClBC,KAAKD,QAAU,MAGnBC,KAAKC,OAAOU,mBAAkB,KAE1BX,KAAKD,QAAUa,YAAW,KAEtBZ,KAAKF,eAAgB,EAErBE,KAAKI,wBAAwBS,aAC7B,CACIC,YAAad,KACbe,YAAYP,EAAAA,EAAAA,GAA+B,UAC7C,GACHR,KAAKgB,kBAAkBC,OAAS,EAAuB,IAGtE,CAKOC,oBAEP,GAtFSzB,GAAsB,UAFlC0B,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,GAAwB7B,IAAqC,6BA6CpC8B,EAAAA,KA5Cb5B,GCZb,S","sources":["webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/debounceValue/debounceValue.metadata.ts","webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/debounceValue/debounceValue.relations.ts","webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/debounceValue/type.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Debounce value relations metadata loader\n */\nexport const DebounceValueRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/debounceValue.relationsMetadata')).DebounceValueRelationsEditorMetadata();\n","import {Injector, NgZone, SimpleChanges} from '@angular/core';\nimport {PureRelationsComponent, RelationsChangeDetector, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {isPresent, nameof} from '@jscrpt/common';\nimport {NEVER, Observable} from 'rxjs';\n\nimport {DebounceValueRelationsMetadataLoader} from './debounceValue.metadata';\nimport {DebounceValueRelationsOptions} from './debounceValue.options';\n\n/**\n * Debounce value relations component\n */\n@PureRelationsComponent()\n@RelationsEditorMetadata(DebounceValueRelationsMetadataLoader)\nexport class DebounceValueRelations<TValue = any> implements RelationsComponent<DebounceValueRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Subject used for emitting change in value\n     */\n    protected valueChange: Observable<void> = NEVER;\n\n    /**\n     * Indication that initial value was already assigned\n     */\n    protected valueAssigned: boolean = false;\n\n    /**\n     * Reference number to timeout instance\n     */\n    protected timeout: number|null = null;\n\n    /**\n     * Instance of ng zone\n     */\n    protected ngZone: NgZone;\n\n    /**\n     * Current relations change detector\n     */\n    protected relationsChangeDetector: RelationsChangeDetector;\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: DebounceValueRelationsOptions|undefined|null;\n\n    //######################### public properties - inputs/dynamic outputs #########################\n    \n    /**\n     * Value that should be debounced\n     */\n    public value: TValue|undefined|null;\n\n    //######################### constructor #########################\n    constructor(injector: Injector,)\n    {\n        this.ngZone = injector.get(NgZone);\n        this.relationsChangeDetector = injector.get(RelationsChangeDetector);\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n    \n    /**\n     * @inheritdoc\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<DebounceValueRelations>('value') in changes)\n        {\n            if(isPresent(this.timeout))\n            {\n                clearTimeout(this.timeout);\n                this.timeout = null;\n            }\n\n            this.ngZone.runOutsideAngular(() =>\n            {\n                this.timeout = setTimeout(() =>\n                {\n                    this.valueAssigned = true;\n                    \n                    this.relationsChangeDetector.markForCheck(\n                    {\n                        componentId: this,\n                        outputName: nameof<DebounceValueRelations>('value'),\n                    });\n                }, this.relationsOptions?.delay ?? 0) as unknown as number;\n            });\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n}","import {DebounceValueRelations} from './debounceValue.relations';\n\nexport default DebounceValueRelations;"],"names":["DebounceValueRelationsMetadataLoader","DebounceValueRelationsEditorMetadata","DebounceValueRelations","constructor","injector","valueChange","NEVER","valueAssigned","timeout","this","ngZone","get","NgZone","relationsChangeDetector","RelationsChangeDetector","ngOnChanges","changes","nameof","isPresent","clearTimeout","runOutsideAngular","setTimeout","markForCheck","componentId","outputName","relationsOptions","delay","invalidateVisuals","PureRelationsComponent","RelationsEditorMetadata","Injector"],"sourceRoot":""}