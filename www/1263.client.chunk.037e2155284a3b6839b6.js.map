{"version":3,"file":"1263.client.chunk.037e2155284a3b6839b6.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./content/l10n/ lazy ^\\.\\/.*\\.json$ namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/basic-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/css-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/handlebars-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/material-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/rest-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/tinymce-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ strict namespace object","webpack://ng-universal-demo/./app/components/editorControls/editorControls.component.html","webpack://ng-universal-demo/./app/components/editorControls/editorControls.component.ts","webpack://ng-universal-demo/./app/components/dynamicContent/dynamicContent.component.html","webpack://ng-universal-demo/./app/components/dynamicContent/dynamicContent.component.ts","webpack://ng-universal-demo/./app/components/userSettings/userSettings.component.ts","webpack://ng-universal-demo/./app/components/userSettings/userSettings.component.html","webpack://ng-universal-demo/./app/dynamicItems/activatedRouteSnapshot/activatedRouteSnapshot.metadata.ts","webpack://ng-universal-demo/./app/dynamicItems/activatedRouteSnapshot/activatedRouteSnapshot.relations.ts","webpack://ng-universal-demo/./app/dynamicItems/activatedRouteSnapshot/type.ts","webpack://ng-universal-demo/./app/dynamicItems/dynamicDataResolver/dynamicDataResolver.metadata.ts","webpack://ng-universal-demo/./app/dynamicItems/dynamicDataResolver/dynamicDataResolver.relations.ts","webpack://ng-universal-demo/./app/dynamicItems/dynamicDataResolver/type.ts","webpack://ng-universal-demo/./app/dynamicItems/services/sampleDynamicModuleItemsProvider/sampleDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/./app/dynamicItems/services/sampleDynamicModuleRelationsProvider/sampleDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/./app/dynamicItems/services/sampleDynamicModuleTypesProvider/sampleDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/./app/dynamicItems/providers.ts","webpack://ng-universal-demo/./app/dynamicItems/utils.ts","webpack://ng-universal-demo/./app/hacks.ts","webpack://ng-universal-demo/./app/boot/app.component.animations.ts","webpack://ng-universal-demo/./app/misc/demo.ts","webpack://ng-universal-demo/./app/modules/menu/components/mainMenu/mainMenu.component.html","webpack://ng-universal-demo/./app/modules/menu/components/mainMenu/mainMenu.component.ts","webpack://ng-universal-demo/./app/boot/app.component.html","webpack://ng-universal-demo/./app/boot/app.component.ts","webpack://ng-universal-demo/./app/pages/accessDenied/accessDenied.route.ts","webpack://ng-universal-demo/./app/boot/app.component.routes.ts","webpack://ng-universal-demo/./app/pages/notFound/notFound.route.ts","webpack://ng-universal-demo/./app/services/globalization/globalization.service.ts","webpack://ng-universal-demo/./app/services/api/restLogger/restLogger.service.ts","webpack://ng-universal-demo/./app/services/api/account/account.service.ts","webpack://ng-universal-demo/./app/services/api/account/accountAuth.options.ts","webpack://ng-universal-demo/./app/services/api/restMockLogger/restMockLogger.service.ts","webpack://ng-universal-demo/./app/boot/app.config.ts","webpack://ng-universal-demo/./app/misc/constants.ts","webpack://ng-universal-demo/./app/services/webpackTranslateLoader/webpackTranslateLoader.service.ts","webpack://ng-universal-demo/./app/services/missingTranslation/missingTranslation.service.ts","webpack://ng-universal-demo/./app/boot/app.module.ts","webpack://ng-universal-demo/./app/boot/browser-app.module.ts","webpack://ng-universal-demo/./app/main.browser.bootstrap.ts","webpack://ng-universal-demo/./app/misc/factories.ts","webpack://ng-universal-demo/./app/misc/tokens.ts","webpack://ng-universal-demo/./app/modules/displayingFeature.module.ts","webpack://ng-universal-demo/./app/modules/formsFeature.module.ts","webpack://ng-universal-demo/./app/modules/debuggingFeature.module.ts","webpack://ng-universal-demo/./app/modules/gridFeature.module.ts","webpack://ng-universal-demo/./app/modules/menu/modules/menu.module.ts","webpack://ng-universal-demo/./app/services/dynamicRoutes/dynamicRoutes.model.ts","webpack://ng-universal-demo/./app/misc/guards/dynamicAuthGuard/dynamicAuth.guard.ts","webpack://ng-universal-demo/./app/misc/resolvers/dynamicDataResolver/dynamicData.resolver.ts","webpack://ng-universal-demo/./app/services/dynamicRoutes/dynamicRoutes.service.ts","webpack://ng-universal-demo/./app/services/settings/settings.service.ts","webpack://ng-universal-demo/./app/services/settings/localSettingsStorage.ts","webpack://ng-universal-demo/./app/services/storeData/storeData.service.ts"],"sourcesContent":["var map = {\n\t\"./activatedRoute/type\": [\n\t\t9598,\n\t\t9598\n\t],\n\t\"./activatedRouteSnapshot/type\": [\n\t\t82222\n\t],\n\t\"./dynamicDataResolver/type\": [\n\t\t35845\n\t],\n\t\"./formBlock/type\": [\n\t\t7171,\n\t\t7171\n\t],\n\t\"./gridTable/type\": [\n\t\t8915,\n\t\t1828,\n\t\t8915\n\t],\n\t\"./routerLink/type\": [\n\t\t6609,\n\t\t6609\n\t],\n\t\"./sampleRootBlock/type\": [\n\t\t28496,\n\t\t8496\n\t],\n\t\"./submitButton/type\": [\n\t\t41003,\n\t\t1003\n\t],\n\t\"./triggerData/type\": [\n\t\t74743,\n\t\t4743\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9235;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en.json\": [\n\t\t79587,\n\t\t9587\n\t],\n\t\"./sk.json\": [\n\t\t5930,\n\t\t5930\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 25048;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./block/type\": [\n\t\t13921,\n\t\t3921\n\t],\n\t\"./button/type\": [\n\t\t50257,\n\t\t257\n\t],\n\t\"./debounceValue/type\": [\n\t\t10433,\n\t\t433\n\t],\n\t\"./deconstruct/type\": [\n\t\t77882,\n\t\t4796,\n\t\t7882\n\t],\n\t\"./firstNonNull/type\": [\n\t\t38167,\n\t\t8167\n\t],\n\t\"./gridPanel/type\": [\n\t\t15578,\n\t\t5578\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t21081,\n\t\t1081\n\t],\n\t\"./htmlBlock/type\": [\n\t\t81231,\n\t\t1231\n\t],\n\t\"./ifBlock/type\": [\n\t\t28467,\n\t\t8467\n\t],\n\t\"./listBlock/type\": [\n\t\t91735,\n\t\t1735\n\t],\n\t\"./logicalAnd/type\": [\n\t\t82476,\n\t\t2476\n\t],\n\t\"./logicalOr/type\": [\n\t\t70118,\n\t\t118\n\t],\n\t\"./merge/type\": [\n\t\t72089,\n\t\t6540\n\t],\n\t\"./negation/type\": [\n\t\t54346,\n\t\t4346\n\t],\n\t\"./notFound/type\": [\n\t\t24139,\n\t\t4139\n\t],\n\t\"./stackPanel/type\": [\n\t\t81533,\n\t\t1533\n\t],\n\t\"./state/type\": [\n\t\t25276,\n\t\t4796,\n\t\t5276\n\t],\n\t\"./syncValues/type\": [\n\t\t25061,\n\t\t5061\n\t],\n\t\"./templateBlock/type\": [\n\t\t68980,\n\t\t8980\n\t],\n\t\"./textBlock/type\": [\n\t\t57233,\n\t\t7233\n\t],\n\t\"./toggleButton/type\": [\n\t\t98529,\n\t\t8529\n\t],\n\t\"./transformData/type\": [\n\t\t67033,\n\t\t4796,\n\t\t7033\n\t],\n\t\"./trigger/type\": [\n\t\t5790,\n\t\t5790\n\t],\n\t\"./value/type\": [\n\t\t27470,\n\t\t7470\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 75952;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./styleBlock/type\": [\n\t\t27623,\n\t\t7623,\n\t\t7730\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50275;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./checkbox/type\": [\n\t\t3734,\n\t\t3734\n\t],\n\t\"./datepicker/type\": [\n\t\t12603,\n\t\t2603\n\t],\n\t\"./formGroup/type\": [\n\t\t18410,\n\t\t8410\n\t],\n\t\"./numberField/type\": [\n\t\t32922,\n\t\t2922\n\t],\n\t\"./period/type\": [\n\t\t75369,\n\t\t5369\n\t],\n\t\"./radio/type\": [\n\t\t47437,\n\t\t7437\n\t],\n\t\"./select/type\": [\n\t\t8757,\n\t\t8757\n\t],\n\t\"./textField/type\": [\n\t\t41293,\n\t\t1293\n\t],\n\t\"./textarea/type\": [\n\t\t81024,\n\t\t1024\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 45297;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./dataBlock/type\": [\n\t\t18712,\n\t\t658,\n\t\t8712\n\t],\n\t\"./dataTemplate/type\": [\n\t\t65247,\n\t\t658,\n\t\t5247\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 45748;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./checkbox/type\": [\n\t\t8525,\n\t\t8525\n\t],\n\t\"./datepicker/type\": [\n\t\t99362,\n\t\t5005,\n\t\t8698,\n\t\t8342,\n\t\t9362\n\t],\n\t\"./expansionPanel/type\": [\n\t\t66519,\n\t\t6519\n\t],\n\t\"./numberField/type\": [\n\t\t19351,\n\t\t5005,\n\t\t8698,\n\t\t9351\n\t],\n\t\"./period/type\": [\n\t\t72252,\n\t\t5005,\n\t\t8698,\n\t\t2252\n\t],\n\t\"./radio/type\": [\n\t\t64699,\n\t\t4699\n\t],\n\t\"./select/type\": [\n\t\t31712,\n\t\t5005,\n\t\t1712\n\t],\n\t\"./textField/type\": [\n\t\t64701,\n\t\t5005,\n\t\t8698,\n\t\t4701\n\t],\n\t\"./textarea/type\": [\n\t\t97736,\n\t\t5005,\n\t\t8698,\n\t\t7736\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3958;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./rest/type\": [\n\t\t83536,\n\t\t3536\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 95180;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./richTextBlock/type\": [\n\t\t34212,\n\t\t4212\n\t],\n\t\"./richTextSource/type\": [\n\t\t79843,\n\t\t9843\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 75556;\nmodule.exports = webpackAsyncContext;","<div class=\"flex-row margin-top-small margin-horizontal-small\">\n    <button type=\"button\" class=\"btn btn-info\" goBack>\n        <span class=\"fas fa-arrow-left\"></span>\n        <span>back</span>\n    </button>\n\n    <button type=\"button\" class=\"btn btn-primary margin-left-extra-small\" (click)=\"saveMetadata()\">\n        <span class=\"fas fa-save\"></span>\n        <span>save <ng-container *ngIf=\"!(history?.saved ?? true)\">*</ng-container></span>\n    </button>\n\n    <button type=\"button\" class=\"btn btn-primary margin-left-extra-small\" (click)=\"editMetadata()\" *authorize=\"'metadata-editation'\">\n        <span class=\"fas fa-pen\"></span>\n        <span>edit metadata</span>\n    </button>\n\n    <button class=\"btn-icon margin-left-extra-small\" tooltip=\"undo\" *ngIf=\"history\" (click)=\"history.undo()\">\n        <span class=\"fas fa-undo\"></span>\n    </button>\n\n    <button class=\"btn-icon margin-left-extra-small\" tooltip=\"redo\" *ngIf=\"history\" (click)=\"history.redo()\">\n        <span class=\"fas fa-redo\"></span>\n    </button>\n</div>","import {Component, ChangeDetectionStrategy, Input, EventEmitter, Output, ChangeDetectorRef, Optional, OnInit, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {GoBackModule, TooltipModule} from '@anglr/common';\nimport {AuthorizationModule} from '@anglr/authentication';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {CodeEditorDialogComponent, CodeEditorDialogData, CodeEditorContent, JsonLanguageModel, MetadataHistoryManager, EditorHotkeys} from '@anglr/dynamic';\nimport {GlobalNotificationsService} from '@anglr/notifications';\nimport {isPresent} from '@jscrpt/common';\nimport {lastValueFrom, Subscription} from 'rxjs';\n\n/**\n * Component that represents editor controls\n */\n@Component(\n{\n    selector: 'editor-controls',\n    templateUrl: 'editorControls.component.html',\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        GoBackModule,\n        TooltipModule,\n        AuthorizationModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditorControlsSAComponent<TMetadata = any> implements OnInit, OnDestroy\n{\n    //######################### private fields #########################\n\n    /**\n     * Subscriptions created during initialization\n     */\n    private _initSubscriptions: Subscription = new Subscription();\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Metadata that are currently edited\n     */\n    @Input()\n    public metadata: TMetadata|null = null;\n\n    /**\n     * Metadata history manager for handling metadata history\n     */\n    @Input()\n    public history: MetadataHistoryManager|null = null;\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when metadata changes from inside\n     */\n    @Output()\n    public metadataChange: EventEmitter<TMetadata> = new EventEmitter<TMetadata>();\n\n    /**\n     * Occurs when save of metadata was requested\n     */\n    @Output()\n    public save: EventEmitter<void> = new EventEmitter<void>();\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _dialog: TitledDialogService,\n                private _notifications: GlobalNotificationsService,\n                @Optional() private _hotkeys?: EditorHotkeys,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        if(this._hotkeys)\n        {\n            this._initSubscriptions.add(this._hotkeys.save.subscribe(() => this.saveMetadata()));\n        }\n\n        if(this.history)\n        {\n            this._initSubscriptions.add(this.history.historyChange.subscribe(() => this._changeDetector.detectChanges()));\n            this._initSubscriptions.add(this.history.pop.subscribe(() => this._changeDetector.detectChanges()));\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._initSubscriptions.unsubscribe();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Edits metadata as json string\n     */\n    protected async editMetadata(): Promise<void>\n    {\n        const result = await lastValueFrom(this._dialog.open<CodeEditorDialogComponent, CodeEditorDialogData, CodeEditorContent|null>(CodeEditorDialogComponent,\n        {\n            title: 'Import metadata',\n            width: '75vw',\n            height: '75vh',\n            data: \n            {\n                content: JSON.stringify(this.metadata, null, 4),\n                languageModel: JsonLanguageModel,\n\n            }\n        }).afterClosed());\n\n        if(isPresent(result))\n        {\n            try\n            {\n                this.metadata = JSON.parse(result.content);\n\n                if(this.metadata)\n                {\n                    this.metadataChange.emit(this.metadata);\n                    this.history?.getNewState();\n                    this.history?.save();\n                }\n            }\n            catch(e)\n            {\n                this._notifications.error(`Failed to parse json ${e}`);\n            }\n        }\n    }\n\n    /**\n     * Saves metadata\n     */\n    protected saveMetadata(): void\n    {\n        this.save.emit();\n        this.history?.save();\n    }\n}","<div class=\"flex-row flex-end margin-vertical-extra-small\" *authorize=\"'layoutEditor-page || relationsEditor-page' conditionString: true\">\n    <a class=\"btn btn-primary margin-right-extra-small\" [routerLink]=\"['/admin/layout', template]\" *authorize=\"'layoutEditor-page'\">\n        <span>edit layout</span>\n    </a>\n    \n    <a class=\"btn btn-primary\" [routerLink]=\"['/admin/relations', template]\" *authorize=\"'relationsEditor-page'\">\n        <span>edit relations</span>\n    </a>\n</div>\n\n<ng-container [layoutComponentRenderer]=\"metadata\"></ng-container>","import {Component, ChangeDetectionStrategy, FactoryProvider, OnInit} from '@angular/core';\nimport {ActivatedRoute, RouterModule} from '@angular/router';\nimport {provideLayoutRelationsCustomComponents} from '@anglr/dynamic/layout-relations';\nimport {provideCssLayoutRelations} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelations} from '@anglr/dynamic/handlebars-components';\nimport {provideRestLayoutRelations} from '@anglr/dynamic/rest-components';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {RelationsManager, RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideBasicLayoutRelations} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayoutRelations} from '@anglr/dynamic/material-components';\nimport {AuthorizationModule} from '@anglr/authentication';\nimport {provideFormLayoutRelations} from '@anglr/dynamic/form';\nimport {nameof} from '@jscrpt/common';\n\nimport {LayoutRelationsMetadata} from '../../misc/interfaces';\nimport {StoreDataService} from '../../services/storeData';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DynamicRouteData} from '../../services/dynamicRoutes';\nimport {provideSampleLayoutRelations} from '../../dynamicItems/utils';\n\n/**\n * Component used displaying dynamic content pages\n */\n@Component(\n{\n    selector: 'dynamic-content-view',\n    templateUrl: 'dynamicContent.component.html',\n    // styleUrls: ['dynamicContent.component.scss'],\n    standalone: true,\n    imports:\n    [\n        RouterModule,\n        AuthorizationModule,\n        LayoutComponentRendererSADirective,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout ?? null),\n            deps: [StoreDataService]\n        },\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)?.relations ?? null),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelationsCustomComponents(),\n        provideBasicLayoutRelations(),\n        provideMaterialLayoutRelations(),\n        provideCssLayoutRelations(),\n        provideTinyMceLayoutRelations(),\n        provideHandlebarsLayoutRelations(),\n        provideRestLayoutRelations(),\n        provideFormLayoutRelations(),\n        provideSampleLayoutRelations(),\n        createStoreDataServiceFactory('DYNAMIC_CONTENT_DATA'),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicContentSAComponent implements OnInit\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Current template that is being displayed\n     */\n    protected template: string|undefined|null;\n\n    /**\n     * Current metadata\n     */\n    protected metadata: LayoutComponentMetadata|null = null;\n\n    //######################### constructor #########################\n    constructor(private _route: ActivatedRoute,\n                private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._route.data.subscribe(data =>\n        {\n            this.template = data[nameof<DynamicRouteData>('template')];\n\n            if(this.template)\n            {\n                const metadata = this._store.getData(this.template); \n                this.metadata = metadata?.layout ?? null;\n                this._relationsManager.setRelations(metadata?.relations ?? []);\n            }\n        });\n    }\n}","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {FormGroup, FormBuilder} from '@angular/forms';\nimport {DebugDataEnabledService} from '@anglr/common';\nimport {ConsoleSinkConfigService} from '@anglr/common/structured-log';\nimport {ValueNamePair} from '@jscrpt/common';\nimport {LogEventLevel} from 'structured-log';\n\nimport {config, SettingsGeneral, SettingsDebug, LanguageDef} from '../../config';\nimport {SettingsService} from '../../services/settings';\nimport {DisplayingFeatureModule} from '../../modules/displayingFeature.module';\nimport {FormsFeatureModule} from '../../modules/formsFeature.module';\n\n/**\n * Available sections for user settings\n */\nenum UserSettingsSections\n{\n    /**\n     * General user settings\n     */\n    General,\n\n    /**\n     * Loggers settings\n     */\n    Logging,\n\n    /**\n     * Debugging settings\n     */\n    Debugging\n}\n\ninterface SettingsLoggingEnum\n{\n    /**\n     * Minimal log level for console sink\n     */\n    consoleLogLevel: LogEventLevel;\n}\n\n/**\n * User settings component\n */\n@Component(\n{\n    selector: 'user-settings',\n    templateUrl: 'userSettings.component.html',\n    styleUrls: ['userSettings.component.scss'],\n    standalone: true,\n    imports:\n    [\n        DisplayingFeatureModule,\n        FormsFeatureModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserSettingsSAComponent\n{\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Array of available themes\n     */\n    public themes: string[] = config.configuration?.themes ?? [];\n\n    /**\n     * Array of language definitions\n     */\n    public languages: LanguageDef[] = config.configuration?.languages ?? [];\n\n    /**\n     * Available log levels\n     */\n    public logLevels: ValueNamePair[] = [];\n\n    /**\n     * Form group for general settings\n     */\n    public generalSettingsForm: FormGroup;\n\n    /**\n     * Form group for debugging settings\n     */\n    public debuggingSettingsForm: FormGroup;\n\n    /**\n     * Form group for logging settings\n     */\n    public loggingSettingsForm: FormGroup;\n\n    /**\n     * Active section\n     */\n    public activeSection: UserSettingsSections = UserSettingsSections.General;\n\n    /**\n     * User settings section enum\n     */\n    public UserSettingsSections = UserSettingsSections;\n\n    //######################### constructors #########################\n    constructor(settingsSvc: SettingsService,\n                formBuilder: FormBuilder,\n                consoleConfig: ConsoleSinkConfigService,\n                debugDataEnabled: DebugDataEnabledService)\n    {\n        const settings = settingsSvc.settings;\n        const debuggingSettings = settingsSvc.settingsDebugging;\n        const loggingSettings = settingsSvc.settingsLogging;\n        \n        this._getLogLevels();\n\n        this.generalSettingsForm = formBuilder.group(\n        <SettingsGeneral>\n        {\n            language: settings.language,\n            theme: settings.theme\n        });\n\n        this.debuggingSettingsForm = formBuilder.group(\n        <SettingsDebug>\n        {\n            consoleEnabled: debuggingSettings.consoleEnabled,\n            debugData: debuggingSettings.debugData\n        });\n\n        this.loggingSettingsForm = formBuilder.group(\n        <SettingsLoggingEnum>\n        {\n            consoleLogLevel: LogEventLevel[loggingSettings.consoleLogLevel as any] as any,\n            //TODO: solve typings\n        });\n\n        this.generalSettingsForm.valueChanges.subscribe((generalSettings: SettingsGeneral) =>\n        {\n            settingsSvc.setSettings(generalSettings);\n        });\n\n        this.debuggingSettingsForm.valueChanges.subscribe((debugSettings: SettingsDebug) =>\n        {\n            debugDataEnabled.setEnabled(debugSettings.debugData);\n\n            settingsSvc.setDebuggingSettings(debugSettings);\n        });\n        \n        this.loggingSettingsForm.valueChanges.subscribe((loggingSettings: SettingsLoggingEnum) =>\n        {\n            consoleConfig.restrictToLevel = +loggingSettings.consoleLogLevel;\n\n            settingsSvc.setLoggingSettings(\n            {\n                consoleLogLevel: LogEventLevel[+loggingSettings.consoleLogLevel],\n            });\n        });\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Gets available log levels\n     */\n    private _getLogLevels(): void\n    {\n        Object.keys(LogEventLevel).forEach(val =>\n        {\n            if(!isNaN(+val))\n            {\n                this.logLevels.push(\n                {\n                    name: LogEventLevel[val as any] as any,//TODO: solve typings\n                    value: val\n                });\n            }\n        });\n    }\n}","<div class=\"flex-column settings-menu\">\r\n    <a class=\"btn-line\"\r\n       [class.active]=\"activeSection == UserSettingsSections.General\"\r\n       (click)=\"activeSection = UserSettingsSections.General\">\r\n        <span class=\"fas fa-cog\"></span>\r\n        <span>{{'general' | translate}}</span>\r\n    </a>\r\n\r\n    <a class=\"btn-line\"\r\n       [class.active]=\"activeSection == UserSettingsSections.Logging\"\r\n       (click)=\"activeSection = UserSettingsSections.Logging\"\r\n       *authorize=\"'logging-settings'\">\r\n        <span class=\"fas fa-pen\"></span>\r\n        <span>{{'logging' | translate}}</span>\r\n    </a>\r\n\r\n    <a class=\"btn-line\"\r\n       [class.active]=\"activeSection == UserSettingsSections.Debugging\"\r\n       (click)=\"activeSection = UserSettingsSections.Debugging\"\r\n       *authorize=\"'debug-settings'\">\r\n        <span class=\"fas fa-bug\"></span>\r\n        <span>{{'debug' | translate}}</span>\r\n    </a>\r\n</div>\r\n\r\n<div>\r\n    <!-- GENERAL SETTIGNS -->\r\n    <div class=\"settings-items\" [formGroup]=\"generalSettingsForm\" *ngIf=\"activeSection == UserSettingsSections.General\">\r\n        <!-- THEME -->\r\n        <div class=\"text-capitalize\">{{'theme' | translate}}</div>\r\n\r\n        <div>\r\n            <ng-select formControlName=\"theme\">\r\n                <ng-option *ngFor=\"let theme of themes\" [text]=\"theme | translate\" [value]=\"theme\"></ng-option>\r\n            </ng-select>\r\n        </div>\r\n\r\n        <!-- LANGUAGE -->\r\n        <div class=\"text-capitalize\">{{'language' | translate}}</div>\r\n\r\n        <div>\r\n            <ng-select formControlName=\"language\">\r\n                <ng-option *ngFor=\"let lang of languages\" [text]=\"lang?.name | asRequired\" [value]=\"lang?.lang\"></ng-option>\r\n            </ng-select>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- LOGGING SETTIGNS -->\r\n    <div class=\"settings-items\" [formGroup]=\"loggingSettingsForm\" *ngIf=\"activeSection == UserSettingsSections.Logging\">\r\n        <!-- CONSOLE LOG LEVEL -->\r\n        <div class=\"text-capitalize\">{{'console log' | translate}}</div>\r\n\r\n        <div>\r\n            <ng-select formControlName=\"consoleLogLevel\">\r\n                <ng-option *ngFor=\"let level of logLevels\" [text]=\"level?.name | asRequired\" [value]=\"level?.value\"></ng-option>\r\n            </ng-select>\r\n        </div>\r\n\r\n        <!-- FILE LOG LEVEL -->\r\n        <ng-template [authorize]=\"'authorized-electron'\">\r\n            <div class=\"text-capitalize\">{{'file log' | translate}}</div>\r\n\r\n            <div>\r\n                <ng-select formControlName=\"fileLogLevel\">\r\n                    <ng-option *ngFor=\"let level of logLevels\" [text]=\"level?.name | asRequired\" [value]=\"level?.value\"></ng-option>\r\n                </ng-select>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n\r\n    <!-- DEBUGGING SETTIGNS -->\r\n    <div class=\"settings-items\" [formGroup]=\"debuggingSettingsForm\" *ngIf=\"activeSection == UserSettingsSections.Debugging\">\r\n        <!-- CONSOLE -->\r\n        <div class=\"text-capitalize\">{{'console' | translate}}</div>\r\n\r\n        <div>\r\n            <mat-slide-toggle formControlName=\"consoleEnabled\"></mat-slide-toggle>\r\n        </div>\r\n\r\n        <!-- DEBUG DATA -->\r\n        <div class=\"text-capitalize\">{{'debug data' | translate}}</div>\r\n\r\n        <div>\r\n            <mat-slide-toggle formControlName=\"debugData\"></mat-slide-toggle>\r\n        </div>\r\n    </div>\r\n</div>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Activated route snapshot relations metadata loader\n */\nexport const ActivatedRouteSnapshotRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/activatedRouteSnapshot.relationsMetadata')).ActivatedRouteSnapshotRelationsEditorMetadata();\n","import {ActivatedRouteSnapshot, Data, Params} from '@angular/router';\nimport {RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {Subject} from 'rxjs';\n\nimport {ActivatedRouteSnapshotRelationsMetadataLoader} from './activatedRouteSnapshot.metadata';\nimport {ActivatedRouteSnapshotRelationsOptions} from './activatedRouteSnapshot.options';\n\n/**\n * Activated route snapshot relations component\n */\n@RelationsEditorMetadata(ActivatedRouteSnapshotRelationsMetadataLoader)\nexport class ActivatedRouteSnapshotRelations implements RelationsComponent<ActivatedRouteSnapshotRelationsOptions>\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'activated-route-snapshot';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: ActivatedRouteSnapshotRelationsOptions|undefined|null;\n\n    //######################### public properties - dynamic outputs #########################\n\n    /**\n     * Subject for the matrix parameters scoped to this route.\n     */\n    public paramsChange: Subject<void> = new Subject<void>();\n\n    /**\n     * Subject for the query parameters shared by all the routes\n     */\n    public queryParamsChange: Subject<void> = new Subject<void>();\n\n    /**\n     * Subject for the URL fragment shared by all the routes\n     */\n    public fragmentChange: Subject<void> = new Subject<void>();\n\n    /**\n     * Subject for the static and resolved data of this route\n     */\n    public dataChange: Subject<void> = new Subject<void>();\n\n    /**\n     * The matrix parameters scoped to this route.\n     */\n    public get params(): Params\n    {\n        return this._route.params;\n    }\n\n    /**\n     * The query parameters shared by all the routes\n     */\n    public get queryParams(): Params\n    {\n        return this._route.queryParams;\n    }\n\n    /**\n     * The URL fragment shared by all the routes\n     */\n    public get fragment(): string|null\n    {\n        return this._route.fragment;\n    }\n\n    /**\n     * The static and resolved data of this route\n     */\n    public get data(): Data\n    {\n        return this._route.data;\n    }\n\n    //######################### constructor #########################\n    constructor(private _route: ActivatedRouteSnapshot,)\n    {\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n    \n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n}","import {ActivatedRouteSnapshotRelations} from './activatedRouteSnapshot.relations';\n\nexport default ActivatedRouteSnapshotRelations;","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Dynamic data resolver relations metadata loader\n */\nexport const DynamicDataResolverRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/dynamicDataResolver.relationsMetadata')).DynamicDataResolverRelationsEditorMetadata();\n","import {SimpleChanges} from '@angular/core';\nimport {RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {Action1, nameof} from '@jscrpt/common';\nimport {PromiseObservableOr, resolvePromiseObservableOr} from '@jscrpt/common/rxjs';\n\nimport {DynamicDataResolverRelationsMetadataLoader} from './dynamicDataResolver.metadata';\nimport {DynamicDataResolverRelationsOptions} from './dynamicDataResolver.options';\n\n/**\n * Dynamic data resolver relations component\n */\n@RelationsEditorMetadata(DynamicDataResolverRelationsMetadataLoader)\nexport class DynamicDataResolverRelations<TData = any> implements RelationsComponent<DynamicDataResolverRelationsOptions>\n{\n    //######################### private properties #########################\n\n    /**\n     * Resolve function that resolves result\n     */\n    private _resolve: Action1<TData|null>|undefined|null;\n\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'dynamic-data-resolver';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: DynamicDataResolverRelationsOptions|undefined|null;\n\n    //######################### public properties - inputs #########################\n    \n    /**\n     * Data that are used as result of dynamic data resolver\n     */\n    public data: PromiseObservableOr<TData>|undefined|null = null;\n\n    //######################### public properties #########################\n\n    /**\n     * Result of dynamic data resolver\n     */\n    public result: Promise<TData|null> = new Promise<TData|null>(resolve => this._resolve = resolve);\n\n    //######################### public methods - implementation of RelationsComponent #########################\n    \n    /**\n     * @inheritdoc\n     */\n    public async ngOnChanges(changes: SimpleChanges): Promise<void>\n    {\n        if(nameof<DynamicDataResolverRelations>('data') in changes)\n        {\n            const result = await resolvePromiseObservableOr(this.data);\n\n            this._resolve?.(result ?? null);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n}","import {DynamicDataResolverRelations} from './dynamicDataResolver.relations';\n\nexport default DynamicDataResolverRelations;","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for sample module items\n */\n@Injectable()\nexport class SampleDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'sample-components':\n            {\n                try\n                {\n                    this._logger?.debug('SampleDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`../../${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('SampleDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for sample types\n */\n@Injectable()\nexport class SampleDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('SampleDynamicModuleRelationsProvider: trying to get relations types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'sample-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('SampleDynamicModuleRelationsProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for sample types\n */\n@Injectable()\nexport class SampleDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('SampleDynamicModuleTypesProvider: trying to get types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'sample-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('SampleDynamicModuleTypesProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {SampleDynamicModuleItemsProvider, SampleDynamicModuleRelationsProvider, SampleDynamicModuleTypesProvider} from './services';\n\n/**\n * Provider for sample package layout components provider\n */\nexport const SAMPLE_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: SampleDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for sample dynamic layout module types provider\n */\nexport const SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: SampleDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for sample dynamic relations types provider\n */\nexport const SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: SampleDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for sample package relations nodes provider\n */\nexport const SAMPLE_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: SampleDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for sample package relations components provider\n */\nexport const SAMPLE_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: SampleDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {SAMPLE_LAYOUT_COMPONENTS_PROVIDER, SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER, SAMPLE_RELATIONS_COMPONENTS_PROVIDER, SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER, SAMPLE_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout sample subpackage\n */\nexport function provideSampleLayout(): Provider[]\n{\n    return [\n        SAMPLE_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations sample subpackage\n */\nexport function provideSampleRelations(): Provider[]\n{\n    return [\n        SAMPLE_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor sample subpackage\n */\nexport function provideSampleLayoutEditor(): Provider[]\n{\n    return [\n        SAMPLE_LAYOUT_COMPONENTS_PROVIDER,\n        SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('sample-components'),\n    ];\n}\n\n/**\n * Providers for relations editor sample subpackage\n */\nexport function provideSampleRelationsEditor(): Provider[]\n{\n    return [\n        SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER,\n        SAMPLE_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('sample-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor sample subpackage\n */\nexport function provideSampleLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideSampleRelationsEditor(),\n        ...provideSampleLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations sample subpackage\n */\nexport function provideSampleLayoutRelations(): Provider[]\n{\n    return [\n        ...provideSampleLayout(),\n        ...provideSampleRelations(),\n    ];\n}","import {isFunction, isBlank, globalDefine} from '@jscrpt/common';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {config} from './config';\n\nglobalDefine(global =>\n{\n    if(!global.Document)\n    {\n        global.Document = function(){};\n    }\n\n    if(!global.ngDesignerMetadata)\n    {\n        global.ngDesignerMetadata = true;\n    }\n});\n\n//HACK - prevents application crash if no error handler provided\nconst observableSubscribe = Observable.prototype.subscribe;\n\nObservable.prototype.subscribe = function<T>(this: Observable<T>, next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription\n{\n    if(isBlank(error) || !isFunction(error))\n    {\n        error = (err) => \n        {\n            if(config.configuration.debug)\n            {\n                console.log(err);\n            }\n        };\n    }\n\n    return observableSubscribe.call(this, next, error, complete);\n} as any;","import {trigger, transition, query, animate, style, animateChild, group} from '@angular/animations';\n\n/**\n * Animations run when changing route\n */\nexport const routeAnimationTrigger = trigger('routeAnimations',\n[\n    transition('void <=> *, none <=> *',\n    [\n        query(':enter', animateChild(), {optional: true})\n    ]),\n    transition('* => login',\n    [\n        query('.main-content',\n        [\n            style(\n            {\n                position: 'relative',\n                perspective: '10000px'\n            }),\n            query(':enter, :leave',\n            [\n                style(\n                {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%'\n                })\n            ], {optional: true}),\n            query(':enter',\n            [\n                style(\n                {\n                    transform: 'rotateY(-90deg)',\n                    opacity: 0\n                })\n            ], {optional: true}),\n            query(':leave', animateChild(), {optional: true}),\n            group(\n            [\n                query(':leave',\n                [\n                    animate('350ms ease-out', style(\n                    {\n                        transform: 'rotateY(90deg)',\n                        opacity: 0\n                    }))\n                ], {optional: true}),\n                query(':enter',\n                [\n                    animate('350ms 350ms ease-out', style(\n                    {\n                        transform: 'rotateY(0)',\n                        opacity: 1\n                    }))\n                ], {optional: true})\n            ]),\n            query(':enter', animateChild(), {optional: true})\n        ], {optional: true})\n    ]),\n    transition('login => *',\n    [\n        query('.main-content',\n        [\n            style(\n            {\n                position: 'relative',\n                perspective: '10000px'\n            }),\n            query(':enter, :leave',\n            [\n                style(\n                {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%'\n                })\n            ], {optional: true}),\n            query(':enter',\n            [\n                style(\n                {\n                    transform: 'rotateY(-90deg)',\n                    opacity: 0\n                })\n            ], {optional: true}),\n            query(':leave', animateChild(), {optional: true}),\n            group(\n            [\n                query(':leave',\n                [\n                    animate('350ms ease-out', style(\n                    {\n                        transform: 'rotateY(90deg)',\n                        opacity: 0\n                    }))\n                ], {optional: true}),\n                query(':enter',\n                [\n                    animate('350ms 350ms ease-out', style(\n                    {\n                        transform: 'rotateY(0)',\n                        opacity: 1\n                    }))\n                ], {optional: true})\n            ]),\n            query(':enter', animateChild(), {optional: true})\n        ], {optional: true})\n    ]),\n    transition('* => *',\n    [\n        query('.main-content',\n        [\n            style({ position: 'relative' }),\n            query(':enter, :leave',\n            [\n                style(\n                {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%'\n                })\n            ], {optional: true}),\n            query(':enter',\n            [\n                style({ opacity: 0})\n            ], {optional: true}),\n            query(':leave', animateChild(), {optional: true}),\n            group(\n            [\n                query(':leave',\n                [\n                    animate('350ms ease-out', style({ opacity: 0}))\n                ], {optional: true}),\n                query(':enter',\n                [\n                    animate('350ms ease-out', style({ opacity: 1}))\n                ], {optional: true})\n            ]),\n            query(':enter', animateChild(), {optional: true})\n        ], {optional: true})\n    ])\n]);\n\nexport const loaderTrigger = trigger('loaderAnimation',\n[\n    transition(':leave',\n    [\n        group(\n        [\n            query('.loading-card', \n            [\n                animate('300ms', style(\n                {\n                    transform: 'scale(4)'\n                }))\n            ]),\n            animate('200ms 100ms', style(\n            {\n                opacity: 0\n            }))\n            \n        ])\n    ])\n]);","import {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {DynamicRoute} from '../services/dynamicRoutes';\n\nexport const demoOverviewRoute: DynamicRoute = \n{\n    module: '',\n    path: 'overview',\n    permission: 'authenticated',\n    withResolver: false,\n    resolverRelations: null,\n    template: 'overview'\n};\n\nexport const demoDetailRoute: DynamicRoute =\n{\n    module: '',\n    path: 'detail/:id',\n    permission: 'authenticated',\n    withResolver: true,\n    resolverRelations: 'detailResolver',\n    template: 'detail'\n};\n\nexport const demoHomeRoute: DynamicRoute =\n{\n    module: '',\n    path: '',\n    permission: 'authenticated',\n    withResolver: false,\n    resolverRelations: null,\n    template: 'home'\n};\n\nexport const demoOverviewLayout: LayoutComponentMetadata =\n{\n    id: 'stackPanel-ajqeywbjqh',\n    displayName: 'root',\n    package: 'basic-components',\n    name: 'stackPanel',\n    options: {\n        children: [\n            {\n                id: 'styleBlock-gdmcpijvblrtyjls',\n                displayName: 'styleBlock-gdmcpijvblrtyjls',\n                package: 'css-components',\n                name: 'styleBlock',\n                options: {\n                    content: {\n                        id: 'stackPanel-xxptnrqmuiwyhqiw',\n                        displayName: 'stackPanel-xxptnrqmuiwyhqiw',\n                        package: 'basic-components',\n                        name: 'stackPanel',\n                        options: {\n                            children: [\n                                {\n                                    id: 'textBlock-myngknoigkbwelkn',\n                                    displayName: 'textBlock-myngknoigkbwelkn',\n                                    package: 'basic-components',\n                                    name: 'textBlock',\n                                    options: {\n                                        text: 'Overview',\n                                        cssClass: 'title',\n                                        margin: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                },\n                                {\n                                    id: 'formBlock-gpjxpdbhjxcjptol',\n                                    displayName: 'form',\n                                    package: 'sample-components',\n                                    name: 'formBlock',\n                                    options: {\n                                        content: {\n                                            id: 'stackPanel-lhjndppbbbuzgdfe',\n                                            displayName: 'stackPanel-lhjndppbbbuzgdfe',\n                                            package: 'basic-components',\n                                            name: 'stackPanel',\n                                            options: {\n                                                children: [\n                                                    {\n                                                        id: 'stackPanel-ehlcpfegubheevch',\n                                                        displayName: 'stackPanel-ehlcpfegubheevch',\n                                                        package: 'basic-components',\n                                                        name: 'stackPanel',\n                                                        options: {\n                                                            horizontal: true,\n                                                            wrap: false,\n                                                            children: [\n                                                                {\n                                                                    id: 'textField-rxlqvcuefeenwtki',\n                                                                    displayName: 'textField-rxlqvcuefeenwtki',\n                                                                    package: 'form-components',\n                                                                    name: 'textField',\n                                                                    options: {\n                                                                        label: 'Name',\n                                                                        placeholder: 'Enter name',\n                                                                        flex: '1',\n                                                                        controlName: 'name',\n                                                                        controlType: 'FormControl'\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'textField-vdfyrgmuejqeomtr',\n                                                                    displayName: 'textField-vdfyrgmuejqeomtr',\n                                                                    package: 'form-components',\n                                                                    name: 'textField',\n                                                                    options: {\n                                                                        label: 'Surname',\n                                                                        placeholder: 'Enter surname',\n                                                                        flex: '1',\n                                                                        controlName: 'surname',\n                                                                        controlType: 'FormControl'\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'textField-potkokqukosksjou',\n                                                                    displayName: 'textField-potkokqukosksjou',\n                                                                    package: 'form-components',\n                                                                    name: 'textField',\n                                                                    options: {\n                                                                        label: 'E-mail',\n                                                                        placeholder: 'Enter e-mail',\n                                                                        flex: '1',\n                                                                        controlName: 'email',\n                                                                        controlType: 'FormControl'\n                                                                    },\n                                                                    scope: null\n                                                                }\n                                                            ]\n                                                        },\n                                                        scope: null\n                                                    },\n                                                    {\n                                                        id: 'stackPanel-ethotwlxmixmlsnp',\n                                                        displayName: 'stackPanel-ethotwlxmixmlsnp',\n                                                        package: 'basic-components',\n                                                        name: 'stackPanel',\n                                                        options: {\n                                                            children: [\n                                                                {\n                                                                    id: 'textBlock-tmbcomdzpxpxcxcx',\n                                                                    displayName: 'textBlock-tmbcomdzpxpxcxcx',\n                                                                    package: 'basic-components',\n                                                                    name: 'textBlock',\n                                                                    options: {\n                                                                        text: '',\n                                                                        flex: '1'\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'button-refwsolywgnznhbv',\n                                                                    displayName: 'button-refresh',\n                                                                    package: 'basic-components',\n                                                                    name: 'button',\n                                                                    options: {\n                                                                        text: 'refresh',\n                                                                        disabled: false,\n                                                                        buttonCssClass: 'btn btn-info',\n                                                                        cssClass: null,\n                                                                        margin: {\n                                                                            top: null,\n                                                                            right: '10px',\n                                                                            bottom: null,\n                                                                            left: null\n                                                                        },\n                                                                        padding: {\n                                                                            top: null,\n                                                                            right: null,\n                                                                            bottom: null,\n                                                                            left: null\n                                                                        },\n                                                                        textStyling: null\n                                                                    },\n                                                                    scope: null\n                                                                },\n                                                                {\n                                                                    id: 'submitButton-twcqwmfoqnuaimog',\n                                                                    displayName: 'submitButton-twcqwmfoqnuaimog',\n                                                                    package: 'sample-components',\n                                                                    name: 'submitButton',\n                                                                    options: {\n                                                                        text: 'search',\n                                                                        disabled: false,\n                                                                        buttonCssClass: 'btn btn-primary'\n                                                                    },\n                                                                    scope: null\n                                                                }\n                                                            ],\n                                                            horizontal: true,\n                                                            wrap: false,\n                                                            cssClass: null,\n                                                            margin: {\n                                                                top: '10px',\n                                                                right: null,\n                                                                bottom: '10px',\n                                                                left: null\n                                                            },\n                                                            padding: {\n                                                                top: null,\n                                                                right: null,\n                                                                bottom: null,\n                                                                left: null\n                                                            },\n                                                            textStyling: null\n                                                        },\n                                                        scope: null\n                                                    }\n                                                ]\n                                            },\n                                            scope: null\n                                        }\n                                    },\n                                    scope: null\n                                },\n                                {\n                                    id: 'gridTable-gbusssjqutylctyh',\n                                    displayName: 'grid',\n                                    package: 'sample-components',\n                                    name: 'gridTable',\n                                    options: {\n                                        cssClass: null,\n                                        margin: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                }\n                            ]\n                        },\n                        scope: null\n                    },\n                    style: '.title\\r\\n{\\r\\n    font-size: 1.3em;\\r\\n    font-weight: 500;\\r\\n    margin-bottom: 15px;\\r\\n    margin-left: 4px;\\r\\n}\\r\\n\\r\\nform-text-field:not(:last-child)\\r\\n{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\nform-text-field>label\\r\\n{\\r\\n   display: block;\\r\\n}\\r\\n\\r\\nform-text-field>input\\r\\n{\\r\\n    border-radius: 4px;\\r\\n    border-style: solid;\\r\\n    border-width: 1px;\\r\\n    box-shadow: none;\\r\\n    font-size: 12px;  \\r\\n    padding-left: 7px;\\r\\n   width: 100%;\\r\\n    font-family: \"Inter\";\\r\\n}\\r\\n\\r\\ntable\\r\\n{\\r\\n   width: 100%;\\r\\n}'\n                },\n                scope: null\n            }\n        ],\n        cssClass: null,\n        margin: {\n            top: '10px',\n            right: null,\n            bottom: null,\n            left: null\n        },\n        padding: {\n            top: null,\n            right: '10px',\n            bottom: null,\n            left: '10px'\n        },\n        textStyling: null\n    },\n    scope: undefined\n};\n\nexport const demoOverviewRelations: RelationsNodeMetadata[] =\n[\n    {\n        id: 'rest-flemahafjynqojjr',\n        name: 'rest',\n        package: 'rest-components',\n        relationsOptions: {\n            url: 'data/users.json',\n            method: 'GET',\n            runImmediately: true,\n            params: [\n                {\n                    configurable: true,\n                    name: 'filter',\n                    type: 'QUERY OBJECT',\n                    value: null\n                }\n            ]\n        },\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 796,\n                y: 42\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'success',\n                inputs: [\n                    {\n                        id: 'gridTable-gbusssjqutylctyh',\n                        inputName: 'data'\n                    }\n                ]\n            },\n            {\n                outputName: 'error',\n                inputs: []\n            }\n        ]\n    },\n    {\n        id: 'triggerData-teboilptsulagtbq',\n        name: 'triggerData',\n        package: 'sample-components',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 468,\n                y: 79\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'data',\n                inputs: [\n                    {\n                        id: 'rest-flemahafjynqojjr',\n                        inputName: 'filter'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'value-ywtxfzqjprvesujp',\n        name: 'value',\n        package: 'basic-components',\n        relationsOptions: {\n            value: {\n                name: '',\n                surname: '',\n                email: ''\n            }\n        },\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 199,\n                y: 463\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'value',\n                inputs: [\n                    {\n                        id: 'triggerData-fyyutwhwylmcihjw',\n                        inputName: 'data'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'formBlock-gpjxpdbhjxcjptol',\n        name: 'formBlock-gpjxpdbhjxcjptol',\n        package: 'layout-components',\n        displayName: 'form',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: false,\n            coordinates: {\n                x: 181,\n                y: 80\n            },\n            options: null\n        },\n        scope: '',\n        outputs: [\n            {\n                outputName: 'value',\n                inputs: [\n                    {\n                        id: 'triggerData-teboilptsulagtbq',\n                        inputName: 'data'\n                    }\n                ]\n            },\n            {\n                outputName: 'submit',\n                inputs: [\n                    {\n                        id: 'triggerData-teboilptsulagtbq',\n                        inputName: 'trigger'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'gridTable-gbusssjqutylctyh',\n        name: 'gridTable-gbusssjqutylctyh',\n        package: 'layout-components',\n        displayName: 'grid',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: false,\n            coordinates: {\n                x: 859,\n                y: 386\n            },\n            options: null\n        },\n        scope: '',\n        outputs: []\n    },\n    {\n        id: 'button-refwsolywgnznhbv',\n        name: 'button-refwsolywgnznhbv',\n        package: 'layout-components',\n        displayName: 'button-refresh',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: false,\n            coordinates: {\n                x: 162,\n                y: 295\n            },\n            options: null\n        },\n        scope: undefined,\n        outputs: [\n            {\n                outputName: 'click',\n                inputs: [\n                    {\n                        id: 'triggerData-fyyutwhwylmcihjw',\n                        inputName: 'trigger'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'triggerData-fyyutwhwylmcihjw',\n        name: 'triggerData',\n        package: 'sample-components',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 468,\n                y: 326\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'data',\n                inputs: [\n                    {\n                        id: 'formBlock-gpjxpdbhjxcjptol',\n                        inputName: 'value'\n                    }\n                ]\n            }\n        ]\n    }\n];\n\nexport const demoDetailLayout: LayoutComponentMetadata =\n{\n    id: 'stackPanel-ajqeywbjqh',\n    displayName: 'root',\n    package: 'basic-components',\n    name: 'stackPanel',\n    options: {\n        children: [\n            {\n                id: 'styleBlock-gdmcpijvblrtyjls',\n                displayName: 'styleBlock-gdmcpijvblrtyjls',\n                package: 'css-components',\n                name: 'styleBlock',\n                options: {\n                    content: {\n                        id: 'stackPanel-xxptnrqmuiwyhqiw',\n                        displayName: 'stackPanel-xxptnrqmuiwyhqiw',\n                        package: 'basic-components',\n                        name: 'stackPanel',\n                        options: {\n                            children: [\n                                {\n                                    id: 'textBlock-myngknoigkbwelkn',\n                                    displayName: 'textBlock-myngknoigkbwelkn',\n                                    package: 'basic-components',\n                                    name: 'textBlock',\n                                    options: {\n                                        text: 'Detail',\n                                        cssClass: 'title',\n                                        margin: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                },\n                                {\n                                    id: 'stackPanel-ehlcpfegubheevch',\n                                    displayName: 'stackPanel-ehlcpfegubheevch',\n                                    package: 'basic-components',\n                                    name: 'stackPanel',\n                                    options: {\n                                        horizontal: true,\n                                        wrap: false,\n                                        children: []\n                                    },\n                                    scope: null\n                                }\n                            ]\n                        },\n                        scope: null\n                    },\n                    style: '.title\\r\\n{\\r\\n    fontsiz: 1.3em;\\r\\n    fontweigh: 500;\\r\\n    marginbotto: 15px;\\r\\n    marginlef: 4px;\\r\\n}\\r\\n\\r\\nform-textfielnot:last-child)\\r\\n{\\r\\n    marginrigh: 10px;\\r\\n}\\r\\n\\r\\nform-text-field>label\\r\\n{\\r\\n   displa: block;\\r\\n}\\r\\n\\r\\nform-text-field>input\\r\\n{\\r\\n    borderradiu: 4px;\\r\\n    borderstyl: solid;\\r\\n    borderwidt: 1px;\\r\\n    boxshado: none;\\r\\n    fontsiz: 12px;  \\r\\n    paddinglef: 7px;\\r\\n   widt: 100%;\\r\\n    fontfamil: \"Inter\";\\r\\n}\\r\\n\\r\\ntable\\r\\n{\\r\\n   widt: 100%;\\r\\n}'\n                },\n                scope: null\n            }\n        ],\n        cssClass: null,\n        margin: {\n            top: '10px',\n            right: null,\n            bottom: null,\n            left: null\n        },\n        padding: {\n            top: null,\n            right: '10px',\n            bottom: null,\n            left: '10px'\n        },\n        textStyling: null\n    },\n    scope: undefined\n};\n\nexport const demoHomeLayout: LayoutComponentMetadata =\n{\n    id: 'stackPanel-fbfrmtqpgk',\n    displayName: 'root',\n    package: 'basic-components',\n    name: 'stackPanel',\n    options: {\n        children: [\n            {\n                id: 'styleBlock-clwgypiibtsvynxb',\n                displayName: 'styleBlock-clwgypiibtsvynxb',\n                package: 'css-components',\n                name: 'styleBlock',\n                options: {\n                    style: '.title\\r\\n{\\r\\n    font-size: 1.3em;\\r\\n    font-weight: 500;\\r\\n    margin-bottom: 15px;\\r\\n    margin-left: 4px;\\r\\n}\\r\\n\\r\\n.tile-link\\r\\n{\\r\\n    padding: 10px 40px;\\r\\n    background-color: #6aba4f;\\r\\n    border-radius: 12px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.tile-link>a\\r\\n{\\r\\n    color: #fff;\\r\\n    text-decoration: none;\\r\\n    font-size: 1.2em;\\r\\n}',\n                    content: {\n                        id: 'stackPanel-neozgcxquiwtqkyy',\n                        displayName: 'stackPanel-neozgcxquiwtqkyy',\n                        package: 'basic-components',\n                        name: 'stackPanel',\n                        options: {\n                            children: [\n                                {\n                                    id: 'textBlock-gipytotkywljsxvd',\n                                    displayName: 'home',\n                                    package: 'basic-components',\n                                    name: 'textBlock',\n                                    options: {\n                                        text: 'Home ',\n                                        cssClass: 'title',\n                                        margin: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                },\n                                {\n                                    id: 'routerLink-ftmvafttlpurslfn',\n                                    displayName: 'routerLink-ftmvafttlpurslfn',\n                                    package: 'sample-components',\n                                    name: 'routerLink',\n                                    options: {\n                                        text: 'Dynamic overview',\n                                        disabled: false,\n                                        linkCssClass: null,\n                                        link: '/overview',\n                                        cssClass: 'tile-link',\n                                        margin: {\n                                            top: '10px',\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        padding: {\n                                            top: null,\n                                            right: null,\n                                            bottom: null,\n                                            left: null\n                                        },\n                                        textStyling: null\n                                    },\n                                    scope: null\n                                }\n                            ]\n                        },\n                        scope: null\n                    }\n                },\n                scope: null\n            }\n        ]\n    },\n    scope: undefined\n};\n\nexport const demoDetailResolverRelations: RelationsNodeMetadata[] =\n[\n    {\n        id: 'dynamic-data-resolver',\n        name: 'dynamic-data-resolver',\n        package: 'static-components',\n        displayName: 'dynamic-data-resolver',\n        relationsOptions: {},\n        nodeMetadata: {\n            scopeConfigurable: false,\n            coordinates: {\n                x: 798,\n                y: 371\n            },\n            options: null\n        },\n        outputs: []\n    },\n    {\n        id: 'value-ietgxdskwtqignbi',\n        name: 'value',\n        package: 'basic-components',\n        relationsOptions: {\n            value: 10\n        },\n        nodeMetadata: {\n            scopeConfigurable: true,\n            coordinates: {\n                x: 294,\n                y: 265\n            },\n            options: null\n        },\n        outputs: [\n            {\n                outputName: 'value',\n                inputs: [\n                    {\n                        id: 'dynamic-data-resolver',\n                        inputName: 'data'\n                    }\n                ]\n            }\n        ]\n    }\n];","<div *authorize=\"'authenticated'\" class=\"flex-row\">\r\n    <a routerLink=\"/\" routerLinkActive=\"active\" class=\"margin-right-small\">Home</a>\r\n    <a routerLink=\"/admin/dynamicRoutes\" routerLinkActive=\"active\" class=\"margin-right-small\" *authorize=\"'dynamicRoutes-page'\">Dynamic routes</a>\r\n    <a routerLink=\"/admin/customComponents\" routerLinkActive=\"active\" class=\"margin-right-small\" *authorize=\"'customComponents-page'\">Custom components</a>\r\n    <div class=\"flex-1\"></div>\r\n    <a class=\"margin-horizontal-small\" href=\"\" (click)=\"loadDemo($event)\">LOAD DEMO</a>\r\n    <a (click)=\"logout()\">Logout</a>\r\n    <a (click)=\"openSettings()\" class=\"fas fa-cog\"></a>\r\n</div>","import {Component, ChangeDetectionStrategy, Injector} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {AuthenticationService} from '@anglr/authentication';\nimport {TitledDialogService} from '@anglr/common/material';\n\nimport {UserSettingsSAComponent} from '../../../../components';\nimport {createStoreDataServiceFactory} from '../../../../misc/factories';\nimport {StoreDataService} from '../../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../../misc/interfaces';\nimport {demoDetailLayout, demoDetailResolverRelations, demoDetailRoute, demoHomeLayout, demoHomeRoute, demoOverviewLayout, demoOverviewRelations, demoOverviewRoute} from '../../../../misc/demo';\nimport {DynamicRoutesService} from '../../../../services/dynamicRoutes';\n\n/**\n * Component used for displaying application main menu\n */\n@Component(\n{\n    selector: 'main-menu',\n    templateUrl: 'mainMenu.component.html',\n    providers:\n    [\n        createStoreDataServiceFactory('DYNAMIC_CONTENT_DATA'),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainMenuComponent\n{\n    //######################### constructor #########################\n    constructor(private _authSvc: AuthenticationService<any>,\n                private _router: Router,\n                private _dialog: TitledDialogService,\n                private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _dynamicRoutes: DynamicRoutesService,\n                private _injector: Injector,)\n    {\n    }\n\n    //######################### public methods - template bindings #########################\n\n    /**\n     * Logs out user\n     */\n    public async logout()\n    {\n        this._authSvc\n            .logout()\n            .subscribe(() =>\n            {\n                this._router.navigate(['/login']);\n            });\n    }\n\n    /**\n     * Loads demo data\n     */\n    public async loadDemo(event: MouseEvent): Promise<void>\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let overview = this._store.getData('overview');\n\n        if(!overview)\n        {\n            overview =\n            {\n                layout: demoOverviewLayout,\n                relations: demoOverviewRelations,\n            };\n            \n            this._store.setData('overview', overview);\n        }\n\n        let detail = this._store.getData('detail');\n\n        if(!detail)\n        {\n            detail =\n            {\n                layout: demoDetailLayout,\n                relations: [],\n            };\n            \n            this._store.setData('detail', detail);\n        }\n\n        let home = this._store.getData('home');\n\n        if(!home)\n        {\n            home =\n            {\n                layout: demoHomeLayout,\n                relations: [],\n            };\n            \n            this._store.setData('home', home);\n        }\n\n        const routes = this._dynamicRoutes.routes ?? [];\n        const overviewRoute = routes.find(itm => itm.template == 'overview');\n\n        if(!overviewRoute)\n        {\n            await this._dynamicRoutes.addRoute(demoOverviewRoute);\n        }\n\n        const detialRoute = routes.find(itm => itm.template == 'detail');\n\n        if(!detialRoute)\n        {\n            await this._dynamicRoutes.addRoute(demoDetailRoute);\n        }\n\n        const homeRoute = routes.find(itm => itm.template == 'home');\n\n        if(!homeRoute)\n        {\n            await this._dynamicRoutes.addRoute(demoHomeRoute);\n        }\n\n        const resolverRelationsInjector = Injector.create(\n        {\n            providers:\n            [\n                createStoreDataServiceFactory('RESOLVER_RELATIONS_DATA'),\n            ],\n            parent: this._injector,\n        });\n\n        const resolverRelationsStore = resolverRelationsInjector.get(StoreDataService<RelationsNodeMetadata[]>);\n\n        if(!resolverRelationsStore.getData('detailResolver'))\n        {\n            resolverRelationsStore.setData('detailResolver', demoDetailResolverRelations);\n        }\n\n        window.location.reload();\n    }\n\n    /**\n     * Opens settings dialog\n     */\n    public openSettings()\n    {\n        this._dialog.open(UserSettingsSAComponent,\n        {\n            title: 'user settings',\n            maxHeight: '80vh'\n        });\n    }\n}","<main-menu></main-menu>\r\n\r\n<progress-indicator></progress-indicator>\r\n<internal-server-error></internal-server-error>\r\n<global-notifications></global-notifications>\r\n<hotkeys-cheatsheet></hotkeys-cheatsheet>\r\n\r\n<div class=\"content relative\" [@routeAnimations]=\"routeComponentState\">\r\n    <div class=\"main-content\">\r\n        <router-outlet #outlet=\"outlet\"></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"gui-version\">GUI version: {{guiVersion}}</div>\r\n\r\n<console *ngIf=\"consoleVisible\" @consoleAnimation></console>\r\n\r\n<div class=\"loading-indicator\" *ngIf=\"!initialized\" @loaderAnimation>\r\n    <div class=\"loading-header\">\r\n        <div class=\"loading-title\">TELECOVID</div>\r\n    </div>\r\n\r\n    <div class=\"loading-card\"></div>\r\n    <div class=\"loading-spinner\"></div>\r\n</div>","import {Component, OnDestroy, AfterViewInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef, Inject, OnInit} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {RouterOutlet} from '@angular/router';\nimport {LOGGER, Logger} from '@anglr/common';\nimport {consoleAnimationTrigger} from '@anglr/common/structured-log';\nimport {AppHotkeysService} from '@anglr/common/hotkeys';\nimport {AuthenticationService} from '@anglr/authentication';\nimport {fadeInOutTrigger} from '@anglr/animations';\nimport {nameof} from '@jscrpt/common';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Hotkey} from 'angular2-hotkeys';\nimport {Subscription} from 'rxjs';\n\nimport {loaderTrigger, routeAnimationTrigger} from './app.component.animations';\nimport {SettingsService} from '../services/settings';\nimport {SettingsGeneral, SettingsDebug} from '../config';\nimport version from '../../config/version.json';\nimport {DynamicRoutesService} from '../services/dynamicRoutes';\n\n/**\n * Application entry component\n */\n@Component(\n{\n    selector: 'app',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.scss'],\n    animations: [routeAnimationTrigger, fadeInOutTrigger, consoleAnimationTrigger, loaderTrigger],\n    providers: [AppHotkeysService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit, AfterViewInit, OnDestroy\n{\n    //######################### private fields #########################\n    \n    /**\n     * Subscription for router outlet activation changes\n     */\n    private _routerOutletActivatedSubscription: Subscription|undefined|null;\n\n    /**\n     * Subscription for authenticated changes\n     */\n    private _authChangedSubscription: Subscription|undefined|null;\n\n    /**\n     * Subscription for changes of general settings\n     */\n    private _settingsChangeSubscription: Subscription|undefined|null;\n\n    /**\n     * Subscription for changes of debugging settings\n     */\n    private _settingsDebuggingChangeSubscription: Subscription|undefined|null;\n\n    /**\n     * Currently active theme\n     */\n    private _theme: string;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is console visible\n     */\n    public consoleVisible: boolean = false;\n\n    /**\n     * Indication whether is used authenticated\n     */\n    public authenticated: boolean = false;\n\n    /**\n     * Name of state for routed component animation\n     */\n    public routeComponentState: string = 'none';\n\n    /**\n     * Current version of gui\n     */\n    public guiVersion: string = version.version;\n\n    /**\n     * Version of server\n     */\n    public serverVersion: string = '';\n\n    /**\n     * Name of server\n     */\n    public serverName: string = '';\n\n    /**\n     * Indication whether is application initialized\n     */\n    public initialized: boolean = false;\n\n    //######################### public properties - children #########################\n\n    /**\n     * Router outlet that is used for loading routed components\n     */\n    @ViewChild('outlet')\n    public routerOutlet: RouterOutlet|undefined;\n\n    //######################### constructor #########################\n    constructor(_authSvc: AuthenticationService,\n                translateSvc: TranslateService,\n                private _changeDetector: ChangeDetectorRef,\n                private _appHotkeys: AppHotkeysService,\n                private _dynamicRoutes: DynamicRoutesService,\n                settings: SettingsService,\n                @Inject(LOGGER) logger: Logger,\n                @Inject(DOCUMENT) document: Document,)\n    {\n        logger.verbose('Application is starting, main component constructed.');\n\n        document.body.classList.add('app-page', settings.settings.theme);\n        this._theme = settings.settings.theme;\n\n        this._settingsChangeSubscription = settings.settingsChange\n            .subscribe(itm => \n            {\n                if(itm == nameof<SettingsGeneral>('theme'))\n                {\n                    document.body.classList.remove(this._theme);\n                    this._theme = settings.settings.theme;\n                    document.body.classList.add(this._theme);\n                }\n\n                if(itm == nameof<SettingsGeneral>('language'))\n                {\n                    translateSvc.use(settings.settings.language);\n                    this._changeDetector.detectChanges();\n                }\n            });\n\n        this._settingsDebuggingChangeSubscription = settings.settingsDebuggingChange\n            .subscribe(itm => \n            {\n                if(itm == nameof<SettingsDebug>('consoleEnabled'))\n                {\n                    this._toggleConsoleHotkey();\n                }\n            });\n\n        translateSvc.setDefaultLang('en');\n        translateSvc.use(settings.settings.language);\n\n        _authSvc\n            .getUserIdentity()\n            .then(identity =>\n            {\n                this.authenticated = identity.isAuthenticated;\n\n                _changeDetector.detectChanges();\n            });\n\n        this._authChangedSubscription = _authSvc.authenticationChanged.subscribe(identity =>\n        {\n            this.authenticated = identity.isAuthenticated;\n\n            _changeDetector.detectChanges();\n        });\n\n        if(settings.settingsDebugging?.consoleEnabled)\n        {\n            this._toggleConsoleHotkey();\n        }\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        await this._dynamicRoutes.initialize();\n    }\n\n    //######################### public methods - implementation of AfterViewInit #########################\n    \n    /**\n     * Called when view was initialized\n     */\n    public ngAfterViewInit(): void\n    {\n        this._routerOutletActivatedSubscription = this.routerOutlet?.activateEvents.subscribe(() =>\n        {\n            this.routeComponentState = this.routerOutlet?.activatedRouteData['animation'] || (<any>this.routerOutlet?.activatedRoute.component).name;\n        });\n\n        this.initialized = true;\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy()\n    {\n        this._routerOutletActivatedSubscription?.unsubscribe();\n        this._routerOutletActivatedSubscription = null;\n\n        this._authChangedSubscription?.unsubscribe();\n        this._authChangedSubscription = null;\n\n        this._settingsChangeSubscription?.unsubscribe();\n        this._settingsChangeSubscription = null;\n\n        this._settingsDebuggingChangeSubscription?.unsubscribe();\n        this._settingsDebuggingChangeSubscription = null;\n\n        this._appHotkeys.destroy();\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Toggles hotkey for displaying console log\n     */\n    private _toggleConsoleHotkey()\n    {\n        const oldHelpHotkey = this._appHotkeys.hotkeys.get('~');\n\n        if(oldHelpHotkey)\n        {\n            this._appHotkeys.hotkeys.remove(oldHelpHotkey);\n        }\n        else\n        {\n            this._appHotkeys.hotkeys.add(new Hotkey('~', () =>\n            {\n                this.consoleVisible = !this.consoleVisible;\n                this._changeDetector.detectChanges();\n\n                return false;\n            }, undefined, 'Show console'));\n        }\n    }\n}","import {Route} from '@angular/router';\n\n/**\n * Route for access denied component\n */\nexport const accessDeniedRoute: Route =\n{\n    path: 'accessDenied',\n    loadComponent: () => import('./accessDenied.component').then(({AccessDeniedComponent}) => AccessDeniedComponent)\n};","import {Type} from '@angular/core';\nimport {ModuleRoutesOptions} from '@anglr/common/router';\n\nimport {accessDeniedRoute} from '../pages/accessDenied/accessDenied.route';\nimport {notFoundRoute} from '../pages/notFound/notFound.route';\n\nexport const components: Type<any>[] =\n[\n];\n\nexport const routesOptions: ModuleRoutesOptions =\n{\n    rootModule: true,\n    rootModuleConfig:\n    {\n        enableTracing: false,\n        useHash: true,\n        // preloadingStrategy: PreloadAllModules\n    },\n    staticRoutesBefore:\n    [\n        {\n            path: '',\n            loadChildren: () => import('../pages/+default/default.module').then(({DefaultModule}) => DefaultModule)\n        },\n        {\n            path: 'admin',\n            loadChildren: () => import('../pages/+routedContent/routedContent.module').then(({RoutedContentModule}) => RoutedContentModule)\n        },\n        {\n            path: 'admin',\n            loadChildren: () => import('../pages/+dynamicContent/dynamicContent.module').then(({DynamicContentModule}) => DynamicContentModule)\n        },\n        {\n            path: 'admin',\n            loadChildren: () => import('../pages/+customComponents/customComponents.module').then(({CustomComponentsModule}) => CustomComponentsModule)\n        },\n    ],\n    staticRoutesAfter:\n    [\n        accessDeniedRoute,\n        notFoundRoute,\n    ]\n};","import {Route} from '@angular/router';\n\n/**\n * Route for not found component\n */\nexport const notFoundRoute: Route =\n{\n    path: '**',\n    loadComponent: () => import('./notFound.component').then(({NotFoundComponent}) => NotFoundComponent)\n};","import {Injectable} from '@angular/core';\nimport {GlobalizationService as GlobalizationServiceInterface} from '@anglr/common';\nimport {Observable, EMPTY} from 'rxjs';\n\n/**\n * Globalization service that is used for obtaining globalization language\n */\n@Injectable()\nexport class GlobalizationService extends GlobalizationServiceInterface\n{\n    /**\n     * Gets current name of locale, that is used within picker\n     */\n    public get locale(): string\n    {\n        return 'sk';\n    }\n    \n    /**\n     * Gets observable that emits data when locale changes and change should be applied to picker\n     */\n    public get localeChange(): Observable<void>\n    {\n        return EMPTY;\n    }\n}","import {Injectable} from '@angular/core';\nimport {RESTClient, BaseUrl, DefaultHeaders, POST, JsonContentType, Body, DisableInterceptor, ParameterTransform, DisableMiddleware} from '@anglr/rest';\nimport {LoggerRestClient, RestLog} from '@anglr/common/structured-log';\nimport {AuthInterceptor, SuppressAuthInterceptor} from '@anglr/authentication';\nimport {ClientErrorHandlingMiddleware} from '@anglr/error-handling/rest';\nimport {EMPTY, Observable, catchError} from 'rxjs';\n\nimport {config} from '../../../config';\nimport version from '../../../../config/version.json';\n\n/**\n * Service used for logging logs on server\n */\n@Injectable()\n@BaseUrl(config.configuration.apiBaseUrl)\n@DefaultHeaders(config.configuration.defaultApiHeaders)\nexport class RestLoggerService extends RESTClient implements LoggerRestClient\n{\n    //######################### public methods - implementation of LoggerRestClient #########################\n\n    /**\n     * @inheritdoc\n     */\n    public log(logs: RestLog[]): Observable<void>\n    {\n        return this._log(logs)\n            .pipe(catchError(_ =>\n            {\n                console.warn('Failed to create log on server');\n\n                return EMPTY;\n            }));\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Logs message on server using REST\n     * @param logs - Array of logs to be logged\n     */\n    @JsonContentType()\n    @DisableMiddleware(ClientErrorHandlingMiddleware)\n    @DisableInterceptor(AuthInterceptor)\n    @DisableInterceptor(SuppressAuthInterceptor)\n    @POST('logger')\n    public _log(@Body @ParameterTransform('_unhandledErrorsTransform') _logs: RestLog[]): Observable<void>\n    {\n        return EMPTY;\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Removes unhandled error text from logs\n     * @param logs - Logs to be transformed\n     */\n    //@ts-ignore\n    private _unhandledErrorsTransform(logs: RestLog[]): RestLog[]\n    {\n        function addBasicInfo(log: {version?: string, id?: string})\n        {\n            if(!log)\n            {\n                return;\n            }\n\n            log.version = version.version;\n            log.id = 'angular-gui';\n        }\n\n        for(let x = 0; x < logs.length; x++)\n        {\n            const obj: RestLog & {info?: any} = logs[x];\n\n            //remove unhandled error message and serialize\n            if(obj.message.startsWith('Unhandled error: '))\n            {\n                const message = obj.message.replace('Unhandled error: ', '');\n\n                try\n                {\n                    obj.info = JSON.parse(message);\n\n                    if(Array.isArray(obj.info))\n                    {\n                        obj.info = obj.info[0];\n                    }\n\n                    addBasicInfo(obj.info);\n                }\n                catch\n                {\n                    obj.info = {};\n\n                    addBasicInfo(obj.info);\n                }\n            }\n            else\n            {\n                obj.info = {};\n\n                addBasicInfo(obj.info);\n            }\n\n            logs[x] = obj;\n        }\n\n        return logs;\n    }\n}","import {inject, Injectable} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\nimport {UserIdentity, AccessToken} from '@anglr/authentication';\nimport {Dictionary} from '@jscrpt/common';\nimport {Observable} from 'rxjs';\n\nimport permissions from '../../../../config/permissions.json';\n\nconst USER_DATA = 'USER_DATA';\n\n/**\n * Service used to access user account information\n */\n@Injectable({providedIn: 'root'})\nexport class AccountService\n{\n    //######################### private fields #########################\n\n    /**\n     * Computed permissions for roles\n     */\n    private _permissions: Dictionary<string[]>|undefined;\n\n    /**\n     * Storage to be used for storing user data\n     */\n    private _storage: PermanentStorage = inject(PERMANENT_STORAGE);\n\n    /**\n     * Current user identity\n     */\n    private _identity: UserIdentity|null = null;\n\n    //######################### private properties #########################\n\n    /**\n     * Gets computed permissions for roles\n     */\n    private get permissions(): Dictionary<string[]>\n    {\n        return this._permissions ?? (this._permissions = this._computePermissionsForRoles());\n    }\n\n    //######################### public methods - implementation of AuthenticationServiceOptions #########################\n\n    /**\n     * Method logs user into system\n     * @param  {AccessToken} accessToken Access token used for authentication\n     */\n    public login(accessToken: AccessToken): Observable<void>\n    {\n        return new Observable(observer =>\n        {\n            if(accessToken.userName == 'admin' && accessToken.password == 'admin')\n            {\n                const privileges = this._roles2privileges(['ADMIN']);\n\n                this._identity =\n                {\n                    isAuthenticated: true,\n                    userName: 'admin',\n                    firstName: 'admin',\n                    surname: '',\n                    permissions: privileges.concat(['authenticated']),\n                    additionalInfo: null,\n                };\n            }\n            else if(accessToken.userName == 'test' && accessToken.password == 'test')\n            {\n                const privileges = this._roles2privileges(['USER']);\n\n                this._identity =\n                {\n                    isAuthenticated: true,\n                    userName: 'user',\n                    firstName: 'user',\n                    surname: '',\n                    permissions: privileges.concat(['authenticated']),\n                    additionalInfo: null,\n                };\n            }\n            else if(accessToken.userName == 'superadmin' && accessToken.password == 'superadmin')\n            {\n                const privileges = this._roles2privileges(['SUPERADMIN']);\n\n                this._identity =\n                {\n                    isAuthenticated: true,\n                    userName: 'superadmin',\n                    firstName: 'superadmin',\n                    surname: '',\n                    permissions: privileges.concat(['authenticated']),\n                    additionalInfo: null,\n                };\n            }\n            else\n            {\n                this._identity = null;\n\n                observer.error(() => new Error('Failed to login'));\n                observer.complete();\n\n                return;\n            }\n\n            if(accessToken.rememberMe && this._identity)\n            {\n                this._storage.set(USER_DATA, this._identity);\n            }\n\n            observer.next();\n            observer.complete();\n        });\n    }\n\n    /**\n     * Methods logs out user out of system\n     */\n    public logout(): Observable<void>\n    {\n        return new Observable(observer =>\n        {\n            this._storage.remove(USER_DATA);\n            this._identity = null;\n\n            observer.next();\n            observer.complete();\n        });\n    }\n\n    /**\n     * Gets information about user\n     */\n    public getUserIdentity(): Observable<UserIdentity>\n    {\n        return new Observable(observer =>\n        {\n            this._identity ??= this._storage.get<UserIdentity>(USER_DATA);\n\n            observer.next(this._identity ??\n            {\n                isAuthenticated: false,\n                userName: '',\n                permissions: [],\n                firstName: '',\n                surname: ''\n            });\n\n            observer.complete();\n        });\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Gets array of permissions for provided roles\n     * @param roles Array of roles to be transformed to permissions\n     */\n    private _roles2privileges(roles: string[]): string[]\n    {\n        const perms: {[permission: string]: boolean} = {};\n\n        (roles ?? []).forEach(role => (this.permissions[role] ?? []).forEach(permission => perms[permission] = true));\n\n        return Object.keys(perms);\n    }\n\n    /**\n     * Computes permissions for roles\n     */\n    private _computePermissionsForRoles(): Dictionary<string[]>\n    {\n        const computedPermissions: Dictionary<string[]> = {};\n        const permissionsDict = permissions as unknown as Dictionary<string[]>;\n\n        Object.keys(permissionsDict).forEach(permission =>\n        {\n            const roles = permissionsDict[permission];\n\n            if(Array.isArray(roles))\n            {\n                roles.forEach(role =>\n                {\n                    computedPermissions[role] ??= [];\n                    computedPermissions[role].push(permission);\n                });\n            }\n        });\n\n        return computedPermissions;\n    }\n}","import {Injectable} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {Router} from '@angular/router';\nimport {AccessToken, AuthenticationServiceOptions, UserIdentity} from '@anglr/authentication';\nimport {isPresent} from '@jscrpt/common';\nimport {Observable} from 'rxjs';\n\nimport {AccountService} from './account.service';\n\n/**\n * Class represents authentication service options for account\n */\n@Injectable()\nexport class AccountAuthOptions extends AuthenticationServiceOptions\n{\n    //######################### constructor #########################\n    constructor(private _router: Router,\n                private _accountSvc: AccountService,\n                private _location: Location)\n    {\n        super();\n    }\n\n    //######################### public methods - implementation of AuthenticationServiceOptions #########################\n\n    /**\n     * @inheritdoc\n     */\n    public login(accessToken: AccessToken): Observable<void>\n    {\n        return this._accountSvc.login(accessToken);\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public isAuthPage(path?: string): boolean\n    {\n        if(isPresent(path))\n        {\n            return path.indexOf('/login') == 0;\n        }\n\n        return this._location.path().indexOf('/login') == 0;\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public logout(): Observable<void>\n    {\n        return this._accountSvc.logout();\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public getUserIdentity(): Observable<UserIdentity>\n    {\n        return this._accountSvc.getUserIdentity();\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public showAuthPage(): Promise<boolean>\n    {\n        return this._router.navigate(['/login'], {queryParams: {returnUrl: this._location.path()}});\n    }\n    \n    /**\n     * @inheritdoc\n     */\n    public showAccessDenied(): Promise<boolean>\n    {\n        return this._router.navigate(['/accessDenied']);\n    }\n}","import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpResponse} from '@angular/common/http';\nimport {RESTClient, BaseUrl, DefaultHeaders, MockLogger, JsonContentType, DisableMiddleware, DisableInterceptor, POST, Body, MockLoggerMiddleware} from '@anglr/rest';\nimport {ClientErrorHandlingMiddleware} from '@anglr/error-handling/rest';\nimport {AuthInterceptor, SuppressAuthInterceptor} from '@anglr/authentication';\nimport {isBlank, isString} from '@jscrpt/common';\nimport {NEVER, Observable} from 'rxjs';\n\nimport {config} from '../../../config';\n\n/**\n * Service for logging responses for mocks\n */\n@Injectable()\n@BaseUrl(config.configuration.apiBaseUrl)\n@DefaultHeaders(config.configuration.defaultApiHeaders)\nexport class RestMockLoggerService extends RESTClient implements MockLogger\n{\n    //######################### public methods #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async logResponse(request: HttpRequest<unknown>, response: HttpResponse<string|ArrayBuffer|Blob|object>): Promise<void>\n    {\n        let responseString: string;\n\n        if(isBlank(response.body))\n        {\n            responseString = '';\n        }\n        else if(isString(response.body))\n        {\n            responseString = response.body;\n        }\n        else if(response.body instanceof Blob)\n        {\n            responseString = await new Promise(resolve =>\n            {\n                const reader = new FileReader();\n\n                reader.onloadend = () => resolve(reader.result as string);\n                reader.readAsDataURL(response.body as Blob);\n            });\n        }\n        else if(response.body instanceof ArrayBuffer)\n        {\n            let binary = '';\n            const bytes = new Uint8Array(response.body as ArrayBuffer);\n            const len = bytes.byteLength;\n\n            for (let x = 0; x < len; x++) \n            {\n                binary += String.fromCharCode(bytes[x]);\n            }\n\n            responseString = btoa(binary);\n        }\n        else\n        {\n            responseString = JSON.stringify(response.body, null, 4);\n        }\n        \n        return await this\n            ._logResponse(\n            {\n                url: request.url,\n                response: responseString\n            })\n            .toPromise()\n            .catch(_ => console.warn('Failed to log mock data'));\n    }\n\n    //######################### private fields #########################\n    \n    /**\n     * Gets information about running application\n     * @returns Observable\n     */\n    @JsonContentType()\n    @DisableMiddleware(ClientErrorHandlingMiddleware)\n    @DisableMiddleware(MockLoggerMiddleware)\n    @DisableInterceptor(AuthInterceptor)\n    @DisableInterceptor(SuppressAuthInterceptor)\n    @POST('mockLogger')\n    private _logResponse(@Body _mock: {url: string, response: string}): Observable<any>\n    {\n        return NEVER;\n    }\n}","import {FactoryProvider, APP_INITIALIZER, ClassProvider, ValueProvider, Provider, ExistingProvider} from '@angular/core';\nimport {AuthenticationService, AUTH_INTERCEPTOR_PROVIDER, SUPPRESS_AUTH_INTERCEPTOR_PROVIDER, AuthenticationServiceOptions} from '@anglr/authentication';\nimport {LocalPermanentStorageService} from '@anglr/common/store';\nimport {PROGRESS_INTERCEPTOR_PROVIDER, GlobalizationService, STRING_LOCALIZATION, PERMANENT_STORAGE, DebugDataEnabledService, DEFAULT_NOTIFICATIONS, NOTIFICATIONS} from '@anglr/common';\nimport {ConsoleSinkConfigService, LOGGER_REST_CLIENT, REST_SINK} from '@anglr/common/structured-log';\nimport {NgxTranslateStringLocalizationService} from '@anglr/translate-extensions';\nimport {ERROR_HANDLING_NOTIFICATIONS, HttpGatewayTimeoutInterceptorOptions, NoConnectionInterceptorOptions, HTTP_GATEWAY_TIMEOUT_INTERCEPTOR_PROVIDER, NO_CONNECTION_INTERCEPTOR_PROVIDER, SERVICE_UNAVAILABLE_INTERCEPTOR_PROVIDER, ANGLR_EXCEPTION_HANDLER_PROVIDER, ERROR_WITH_URL_EXTENDER, HTTP_SERVER_ERROR_INTERCEPTOR_PROVIDER, CLIENT_ERROR_NOTIFICATIONS, handle404Func, HttpClientErrorResponseMapper, HttpClientValidationErrorResponseMapper, HTTP_CLIENT_ERROR_RESPONSE_MAPPER, HTTP_CLIENT_VALIDATION_ERROR_RESPONSE_MAPPER, RestNotFoundError} from '@anglr/error-handling';\nimport {DIALOG_INTERNAL_SERVER_ERROR_RENDERER_PROVIDER} from '@anglr/error-handling/material';\nimport {NO_DATA_RENDERER_OPTIONS, NoDataRendererOptions, PAGING_OPTIONS, BasicPagingOptions, METADATA_SELECTOR_TYPE, METADATA_SELECTOR_OPTIONS, CONTENT_RENDERER_OPTIONS, TableContentRendererOptions, HEADER_CONTENT_RENDERER_OPTIONS, TableHeaderContentRendererOptions, GRID_INITIALIZER_TYPE, GRID_INITIALIZER_OPTIONS, QueryPermanentStorageGridInitializerOptions, QueryGridInitializerComponent} from '@anglr/grid';\nimport {DialogMetadataSelectorComponent, DialogMetadataSelectorOptions} from '@anglr/grid/material';\nimport {ReservedSpaceValidationErrorsContainerComponent, ValidationErrorRendererFactoryOptions, VALIDATION_ERROR_MESSAGES, VALIDATION_ERROR_RENDERER_FACTORY_OPTIONS} from '@anglr/common/forms';\nimport {ConfirmationDialogOptions, CONFIRMATION_DIALOG_OPTIONS, MovableTitledDialogComponent, TitledDialogServiceOptions} from '@anglr/common/material';\nimport {FLOATING_UI_POSITION} from '@anglr/common/floating-ui';\nimport {MD_HELP_NOTIFICATIONS, RenderMarkdownConfig, RENDER_MARKDOWN_CONFIG} from '@anglr/md-help/web';\nimport {ClientErrorHandlingMiddleware, HttpClientErrorCustomHandlerDef, HTTP_CLIENT_ERROR_CUSTOM_HANDLER, REST_ERROR_HANDLING_MIDDLEWARE_ORDER} from '@anglr/error-handling/rest';\nimport {NORMAL_STATE_OPTIONS, NormalStateOptions} from '@anglr/select';\nimport {DATE_API} from '@anglr/datetime';\nimport {DateFnsDateApi, DateFnsLocale, DATE_FNS_DATE_API_OBJECT_TYPE, DATE_FNS_FORMAT_PROVIDER, DATE_FNS_LOCALE} from '@anglr/datetime/date-fns';\nimport {LoggerMiddleware, MockLoggerMiddleware, ReportProgressMiddleware, ResponseTypeMiddleware, REST_METHOD_MIDDLEWARES, REST_MOCK_LOGGER} from '@anglr/rest';\nimport {DATETIME_REST_DATE_API} from '@anglr/rest/datetime';\nimport {isString, isJsObject} from '@jscrpt/common';\nimport {LogEventLevel} from 'structured-log';\nimport {sk} from 'date-fns/locale';\n\nimport {config} from '../config';\nimport {GlobalizationService as GlobalizationServiceImpl} from '../services/globalization/globalization.service';\nimport {NOTHING_SELECTED} from '../misc/constants';\nimport {SettingsService, LocalSettingsStorage} from '../services/settings';\nimport {SETTINGS_STORAGE} from '../misc/tokens';\nimport {RestLoggerService} from '../services/api/restLogger';\nimport {AccountAuthOptions} from '../services/api/account/accountAuth.options';\nimport {RestMockLoggerService} from '../services/api/restMockLogger';\n\n/**\n * Creates APP initialization factory, that first try to authorize user before doing anything else\n * @param authService Authentication service used for authentication of user\n */\nexport function appInitializerFactory(authService: AuthenticationService): () => Promise<void>\n{\n    return async () =>\n    {\n        try\n        {\n            await authService\n                .getUserIdentity();\n        }\n        catch(e)\n        {\n            alert(`Authentication failed: ${e}`);\n\n            throw e;\n        }\n    };\n}\n\n/**\n * Factory method for creating HttpGatewayTimeoutInterceptorOptions\n */\nexport function httpGatewayTimeoutInterceptorOptionsFactory(): HttpGatewayTimeoutInterceptorOptions\n{\n    return new HttpGatewayTimeoutInterceptorOptions('Server neodpovedal v stanovenom čase.');\n}\n\n/**\n * Factory method for creating NoConnectionInterceptorOptions\n */\nexport function noConnectionInterceptorOptionsFactory(): NoConnectionInterceptorOptions\n{\n    return new NoConnectionInterceptorOptions('Server je mimo prevádzky.');\n}\n\n/**\n * Array of providers that are used in app module\n */\nexport const providers: Provider[] =\n[\n    //######################### HTTP INTERCEPTORS #########################\n    HTTP_GATEWAY_TIMEOUT_INTERCEPTOR_PROVIDER,\n    SERVICE_UNAVAILABLE_INTERCEPTOR_PROVIDER,\n    HTTP_SERVER_ERROR_INTERCEPTOR_PROVIDER,\n    NO_CONNECTION_INTERCEPTOR_PROVIDER,\n    SUPPRESS_AUTH_INTERCEPTOR_PROVIDER,\n    AUTH_INTERCEPTOR_PROVIDER,\n    PROGRESS_INTERCEPTOR_PROVIDER,\n\n    //######################### NO CONNECTION INTERCEPTOR OPTIONS #########################\n    <FactoryProvider>\n    {\n        useFactory: noConnectionInterceptorOptionsFactory,\n        provide: NoConnectionInterceptorOptions\n    },\n\n    //######################### HTTP GATEWAY TIMEOUT INTERCEPTOR OPTIONS #########################\n    <FactoryProvider>\n    {\n        useFactory: httpGatewayTimeoutInterceptorOptionsFactory,\n        provide: HttpGatewayTimeoutInterceptorOptions\n    },\n\n    //######################### GLOBALIZATION SERVICE #########################\n    <ClassProvider>\n    {\n        provide: GlobalizationService,\n        useClass: GlobalizationServiceImpl\n    },\n\n    //######################### AUTHENTICATION & AUTHORIZATION #########################\n    <ClassProvider>\n    {\n        provide: AuthenticationServiceOptions,\n        useClass: AccountAuthOptions\n    },\n\n    //######################### ERROR HANDLING #########################\n    ERROR_WITH_URL_EXTENDER,\n    ANGLR_EXCEPTION_HANDLER_PROVIDER,\n    DIALOG_INTERNAL_SERVER_ERROR_RENDERER_PROVIDER,\n\n    //######################### APP INITIALIZER #########################\n    <FactoryProvider>\n    {\n        useFactory: appInitializerFactory,\n        provide: APP_INITIALIZER,\n        deps: [AuthenticationService],\n        multi: true\n    },\n\n    //######################### GRID GLOBAL OPTIONS #########################\n    <ValueProvider>\n    {\n        provide: NO_DATA_RENDERER_OPTIONS,\n        useValue: <NoDataRendererOptions>\n        {\n            texts:\n            {\n                loading: 'Nahrávam dáta ...',\n                noData: 'Neboli nájdené dáta odpovedajúce zadaným parametrom',\n                notLoaded: 'Neboli načítané žiadne dáta zatiaľ'\n            }\n        }\n    },\n    <ValueProvider>\n    {\n        provide: GRID_INITIALIZER_TYPE,\n        useValue: QueryGridInitializerComponent\n    },\n    <ValueProvider>\n    {\n        provide: PAGING_OPTIONS,\n        useValue: <BasicPagingOptions>\n        {\n            itemsPerPageValues: [15, 30, 60],\n            initialItemsPerPage: 15\n        }\n    },\n    <ValueProvider>\n    {\n        provide: METADATA_SELECTOR_TYPE,\n        useValue: DialogMetadataSelectorComponent\n    },\n    <ValueProvider>\n    {\n        provide: METADATA_SELECTOR_OPTIONS,\n        useValue: <DialogMetadataSelectorOptions>\n        {\n            showButtonVisible: false\n        }\n    },\n    <ValueProvider>\n    {\n        provide: GRID_INITIALIZER_OPTIONS,\n        useValue: <QueryPermanentStorageGridInitializerOptions>\n        {\n            storageIppName: 'all-grid-ipp'\n        }\n    },\n    <ValueProvider>\n    {\n        provide: CONTENT_RENDERER_OPTIONS,\n        useValue: <TableContentRendererOptions>\n        {\n            cssClasses:\n            {\n                containerDiv: 'table-container thin-scrollbar'\n            }\n        }\n    },\n    <ValueProvider>\n    {\n        provide: HEADER_CONTENT_RENDERER_OPTIONS,\n        useValue: <TableHeaderContentRendererOptions>\n        {\n            cssClasses:\n            {\n                thDefault: 'header-default fixed-header'\n            }\n        }\n    },\n    \n    //############################ SELECT GLOBAL OPTIONS ############################\n    <ValueProvider>\n    {\n        provide: NORMAL_STATE_OPTIONS,\n        useValue: <NormalStateOptions>\n        {\n            texts:\n            {\n                nothingSelected: NOTHING_SELECTED\n            }\n        }\n    },\n\n    //######################### STRING LOCALIZATION #########################\n    <ClassProvider>\n    {\n        provide: STRING_LOCALIZATION,\n        useClass: NgxTranslateStringLocalizationService\n    },\n\n    //######################### PERMANENT STORAGE #########################\n    <ClassProvider>\n    {\n        provide: PERMANENT_STORAGE,\n        useClass: LocalPermanentStorageService\n    },\n\n    //######################### LOGGER #########################\n    REST_SINK,\n    <FactoryProvider>\n    {\n        provide: ConsoleSinkConfigService,\n        useFactory: (settingsSvc: SettingsService) =>\n        {\n            return new ConsoleSinkConfigService(undefined, LogEventLevel[settingsSvc.settingsLogging.consoleLogLevel as keyof typeof LogEventLevel]);\n        },\n        deps: [SettingsService]\n    },\n    <ClassProvider>\n    {\n        provide: LOGGER_REST_CLIENT,\n        useClass: RestLoggerService\n    },\n    <ClassProvider>\n    {\n        provide: SETTINGS_STORAGE,\n        useClass: LocalSettingsStorage\n    },\n\n    //######################### DEBUG DATA #########################\n    <FactoryProvider>\n    {\n        provide: DebugDataEnabledService,\n        useFactory: (settingsSvc: SettingsService) =>\n        {\n            const debugDataEnabled = new DebugDataEnabledService();\n\n            debugDataEnabled.setEnabled(settingsSvc.settingsDebugging?.debugData);\n\n            return debugDataEnabled;\n        },\n        deps: [SettingsService]\n    },\n\n    //######################### DATE API #########################\n    <ClassProvider>\n    {\n        provide: DATE_API,\n        useClass: DateFnsDateApi\n    },\n    DATE_FNS_FORMAT_PROVIDER,\n    DATE_FNS_DATE_API_OBJECT_TYPE,\n    <ValueProvider>\n    {\n        provide: DATE_FNS_LOCALE,\n        useValue: <DateFnsLocale>\n        {\n            locale: sk\n        }\n    },\n\n    //######################### VALIDATION ERRORS #########################\n\n    <ValueProvider>\n    {\n        provide: VALIDATION_ERROR_MESSAGES,\n        useValue:\n        {\n            required: 'Položka je povinná.',\n            number: 'Položka musí byť číslo.',\n            pattern: 'Položka nie je v požadovanom formáte.',\n            minValue: 'Nedodržaná minimálna povolená hodnota.',\n            maxValue: 'Nedodržaná maximálna povolená hodnota.',\n            minlength: 'Nedodržaná minimálna dĺžka.',\n            maxlength: 'Nedodržaná maximálna dĺžka.',\n            birthNumber: 'Nesprávny formát rodného čísla.',\n            email: 'Položka musí byť email.',\n            availableUsername: 'Prihlasovacie meno je použité',\n        }\n    },\n    <ValueProvider>\n    {\n        provide: VALIDATION_ERROR_RENDERER_FACTORY_OPTIONS,\n        useValue: <ValidationErrorRendererFactoryOptions>\n        {\n            container: ReservedSpaceValidationErrorsContainerComponent\n        }\n    },\n\n    //######################### NOTIFICATIONS #########################\n    DEFAULT_NOTIFICATIONS,\n    <ExistingProvider>\n    {\n        provide: MD_HELP_NOTIFICATIONS,\n        useExisting: NOTIFICATIONS\n    },\n    <ExistingProvider>\n    {\n        provide: ERROR_HANDLING_NOTIFICATIONS,\n        useExisting: NOTIFICATIONS\n    },\n    <ExistingProvider>\n    {\n        provide: CLIENT_ERROR_NOTIFICATIONS,\n        useExisting: NOTIFICATIONS\n    },\n\n    //######################### TITLED DIALOG #########################\n\n    <ValueProvider>\n    {\n        provide: TitledDialogServiceOptions,\n        useValue: new TitledDialogServiceOptions(MovableTitledDialogComponent)\n    },\n    \n    //######################### CONFIRMATION DIALOG #########################\n    <ValueProvider>\n    {\n        provide: CONFIRMATION_DIALOG_OPTIONS,\n        useValue: <ConfirmationDialogOptions>\n        {\n            confirmationText: 'Prajete si pokračovať?',\n            dialogCancelText: 'Nie',\n            dialogConfirmText: 'Áno'\n        }\n    },\n\n    //######################### POSITION #########################\n    FLOATING_UI_POSITION,\n\n    //######################### MARKDOWN #########################\n    <ValueProvider>\n    {\n        provide: RENDER_MARKDOWN_CONFIG,\n        useValue: <RenderMarkdownConfig>\n        {\n            assetsPathPrefix: 'dist/md',\n            baseUrl: '/pomoc'\n        }\n    },\n\n    //######################### REST CONFIG #########################\n    DATETIME_REST_DATE_API,\n    <ClassProvider>\n    {\n        provide: REST_MOCK_LOGGER,\n        useClass: RestMockLoggerService\n    },\n    REST_ERROR_HANDLING_MIDDLEWARE_ORDER,\n    <ValueProvider>\n    {\n        provide: REST_METHOD_MIDDLEWARES,\n        useValue:\n        [\n            LoggerMiddleware,\n            ResponseTypeMiddleware,\n            ReportProgressMiddleware,\n            ClientErrorHandlingMiddleware,\n            ...jsDevMode ? [...config.configuration.disableMockLogger ? [] : [MockLoggerMiddleware]] : [],\n        ]\n    },\n    <ValueProvider>\n    {\n        provide: HTTP_CLIENT_ERROR_RESPONSE_MAPPER,\n        useValue: <HttpClientErrorResponseMapper>(err => \n        {\n            if(err?.error?.errors)\n            {\n                return err?.error?.errors;\n            }\n\n            if(isString(err?.error))\n            {\n                return [err?.error];\n            }\n\n            if(isJsObject(err?.error))\n            {\n                return [JSON.stringify(err?.error)];\n            }\n            \n            return [err.message];\n        })\n    },\n    <ValueProvider>\n    {\n        provide: HTTP_CLIENT_VALIDATION_ERROR_RESPONSE_MAPPER,\n        useValue: <HttpClientValidationErrorResponseMapper>(err => \n        {\n            if(err?.error?.validationErrors)\n            {\n                return err?.error?.validationErrors;\n            }\n\n            return null;\n        })\n    },\n    <ValueProvider>\n    {\n        provide: HTTP_CLIENT_ERROR_CUSTOM_HANDLER,\n        useValue: <Record<number, HttpClientErrorCustomHandlerDef>>\n        {\n            404: [handle404Func, error => new RestNotFoundError(error.errors)],\n        },\n    },\n];\n","export const APP_TRANSFER_ID = 'my-app-id';\nexport const NOTHING_SELECTED = 'Nothing selected';\nexport const DATE_FORMAT = 'YYYY-MM-DD';\nexport const NAME_DATE_FORMAT = 'DD. MMMM YYYY (dddd)';\nexport const DEBUG_INFO = 'debugInfo';","import {Injectable} from '@angular/core';\nimport {TranslateLoader} from '@ngx-translate/core';\nimport {Observable, Observer} from 'rxjs';\n\n/**\n * Service used as webpack translate loader\n */\n@Injectable()\nexport class WebpackTranslateLoaderService implements TranslateLoader\n{\n    //######################### public methods - implementation of TranslateLoader #########################\n\n    /**\n     * Gets translations for specified language\n     * @param lang Language which translations are required\n     */\n    public getTranslation(lang: string): Observable<any> \n    {\n        return new Observable((observer: Observer<any>) =>\n        {\n            (async () => \n            {\n                const result = await import(`../../../content/l10n/${lang}.json`);\n\n                observer.next(result.default);\n                observer.complete();\n            })();\n        });\n    }\n}","import {Inject, Injectable} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {MissingTranslationHandler, MissingTranslationHandlerParams} from '@ngx-translate/core';\n\n/**\n * Service that reports missing translations, allows easier finding of missing translations\n */\n@Injectable()\nexport class ReportMissingTranslationService implements MissingTranslationHandler\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) private _logger: Logger)\n    {\n    }\n\n    //######################### public methods - MissingTranslationHandler #########################\n\n    /**\n     * @inheritdoc\n     */\n    public handle(params: MissingTranslationHandlerParams): string\n    {\n        this._logger.debug(`MISSING TRANSLATION: ${params.key}`);\n\n        return `MISSING: '${params.key}'`;\n    }\n}","import {NgModule, ClassProvider} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {ConsoleLogModule} from '@anglr/common/structured-log';\nimport {ProgressIndicatorModule} from '@anglr/common';\nimport {InternalServerErrorModule} from '@anglr/error-handling';\nimport {NotificationsGlobalModule} from '@anglr/notifications';\nimport {TranslateModule, TranslateLoader, MissingTranslationHandler} from '@ngx-translate/core';\nimport {DndModule} from '@ng-dnd/core';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nimport {HotkeyModule} from 'angular2-hotkeys';\n\nimport {AppComponent} from './app.component';\nimport {components, routesOptions} from './app.component.routes';\nimport {APP_TRANSFER_ID} from '../misc/constants';\nimport {providers} from './app.config';\nimport {WebpackTranslateLoaderService} from '../services/webpackTranslateLoader';\nimport {MenuModule} from '../modules';\nimport {config} from '../config';\nimport {ReportMissingTranslationService} from '../services/missingTranslation';\n\n/**\n * Main module shared for both server and browser side\n */\n@NgModule(\n{\n    imports:\n    [\n        BrowserModule.withServerTransition(\n        {\n            appId: APP_TRANSFER_ID\n        }),\n        HttpClientModule,\n        InternalServerErrorModule,\n        ProgressIndicatorModule,\n        NotificationsGlobalModule.forRoot(),\n        RouterModule,\n        HotkeyModule,\n        MenuModule,\n        ConsoleLogModule.forRoot(),\n        DndModule.forRoot(\n        {\n            backend: HTML5Backend\n        }),\n        TranslateModule.forRoot(\n        {\n            loader: <ClassProvider>\n            {\n                provide: TranslateLoader, \n                useClass: WebpackTranslateLoaderService\n            },\n            ...config.configuration?.debugTranslations ? \n                {\n                    missingTranslationHandler:\n                    {\n                        provide: MissingTranslationHandler,\n                        useClass: ReportMissingTranslationService\n                    }\n                } : \n                {\n                },\n            useDefaultLang: !config.configuration?.debugTranslations\n        })\n    ],\n    providers: providers,\n    declarations:\n    [\n        AppComponent,\n        ...components\n    ],\n    exports: [AppComponent]\n})\n@ModuleRoutes(components, routesOptions)\nexport class AppModule\n{\n}\n","import {NgModule, FactoryProvider} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {BrowserTransferStateModule} from '@angular/platform-browser';\nimport {AnglrExceptionHandlerOptions} from '@anglr/error-handling';\nimport {HotkeyModule} from 'angular2-hotkeys';\n\nimport {config} from '../config';\nimport {AppComponent} from './app.component';\nimport {AppModule} from './app.module';\n\n/**\n * Entry module for browser side\n */\n@NgModule(\n{\n    bootstrap: [AppComponent],\n    imports:\n    [\n        AppModule,\n        BrowserAnimationsModule,\n        BrowserTransferStateModule,\n        HotkeyModule.forRoot(\n        {\n            cheatSheetCloseEsc: true\n        })\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: AnglrExceptionHandlerOptions,\n            useFactory: () => new AnglrExceptionHandlerOptions(config.configuration?.debug, false)\n        }\n    ]\n})\nexport class BrowserAppModule\n{\n}\n","/* eslint-disable ressurectit/imports-order */\nimport './dependencies';\nimport './dependencies.browser';\nimport 'zone.js';\nimport './hacks';\nimport {platformBrowser} from '@angular/platform-browser';\nimport {NgModuleRef, enableProdMode} from '@angular/core';\nimport {runWhenModuleStable} from '@anglr/common';\nimport {RestTransferStateService} from '@anglr/rest';\nimport {simpleNotification} from '@jscrpt/common';\n\nimport {config} from './config';\nimport {BrowserAppModule} from './boot/browser-app.module';\n\nif(isProduction)\n{\n    enableProdMode();\n}\n\nconst platform = platformBrowser();\n\nrunWhenModuleStable(platform.bootstrapModule(BrowserAppModule), (moduleRef: NgModuleRef<any>) =>\n{\n    moduleRef.injector.get(RestTransferStateService)?.clearAndDeactivate();\n    jsDevMode && simpleNotification(jsDevMode && !!import.meta.webpackHot);\n}, config.configuration.debug);\n","import {FactoryProvider} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\n\nimport {StoreDataService} from '../services/storeData';\n\n/**\n * Creates factory provider for store data service\n * @param storeName - Name of storage that should be used\n */\nexport function createStoreDataServiceFactory(storeName: string): FactoryProvider\n{\n    return {\n        provide: StoreDataService,\n        useFactory: (storage: PermanentStorage) => new StoreDataService(storage, storeName),\n        deps: [PERMANENT_STORAGE]\n    };\n}","import {InjectionToken} from '@angular/core';\n\nimport {SettingsStorage} from '../services/settings';\n\n/**\n * Token used for settings storage\n */\nexport const SETTINGS_STORAGE: InjectionToken<SettingsStorage> = new InjectionToken<SettingsStorage>('SETTINGS_STORAGE');","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {CommonUtilsModule, CommonLocalizeModule, TooltipModule, CastPipesModule} from '@anglr/common';\nimport {NumeralModule} from '@anglr/common/numeral';\nimport {AuthorizationModule} from '@anglr/authentication';\nimport {DatePipesModule} from '@anglr/datetime';\nimport {TranslateModule} from '@ngx-translate/core';\n\n/**\n * Common module for displaying readonly data helpers\n */\n@NgModule(\n{\n    exports:\n    [\n        CommonModule,\n        RouterModule,\n        CommonUtilsModule,\n        CommonLocalizeModule,\n        NumeralModule,\n        TooltipModule,\n        CastPipesModule,\n        TranslateModule,\n        DatePipesModule,\n        AuthorizationModule,\n    ]\n})\nexport class DisplayingFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {NgSelectEditModule, NgSelectModule} from '@anglr/select';\nimport {NumberInputModule, HasErrorModule, FormPipesModule} from '@anglr/common/forms';\nimport {SimpleDatePickerInputSADirective, SimpleDateTimePickerInputSADirective, SimpleDateTimeInputHandlerSADirective, DateTimeModule, DateTimePickerModule, WithTimeSADirective, WithTodaySADirective, WithNowSADirective, DatePickerInputSADirective, DateTimePickerInputSADirective, DateTimeInputHandlerSADirective} from '@anglr/datetime';\n\n/**\n * Common module for enabling forms features\n */\n@NgModule(\n{\n    imports:\n    [\n        WithTimeSADirective,\n        WithTodaySADirective,\n        WithNowSADirective,\n        SimpleDatePickerInputSADirective,\n        SimpleDateTimePickerInputSADirective,\n        SimpleDateTimeInputHandlerSADirective,\n        DatePickerInputSADirective,\n        DateTimePickerInputSADirective,\n        DateTimeInputHandlerSADirective,\n\n    ],\n    exports:\n    [\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        NumberInputModule,\n        NgSelectModule,\n        NgSelectEditModule,\n        HasErrorModule,\n        FormPipesModule,\n        DateTimeModule,\n        DateTimePickerModule,\n        WithTimeSADirective,\n        WithTodaySADirective,\n        WithNowSADirective,\n        SimpleDatePickerInputSADirective,\n        SimpleDateTimePickerInputSADirective,\n        SimpleDateTimeInputHandlerSADirective,\n        DatePickerInputSADirective,\n        DateTimePickerInputSADirective,\n        DateTimeInputHandlerSADirective,\n    ]\n})\nexport class FormsFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {DebugDataCopyClickModule} from '@anglr/common/material';\n\n/**\n * Common module for allowing debugging features in code\n */\n@NgModule(\n{\n    exports:\n    [\n        DebugDataCopyClickModule,\n    ]\n})\nexport class DebuggingFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {GridModule} from '@anglr/grid';\n\n/**\n * Common module for enabling usage of Grid\n */\n@NgModule(\n{\n    exports:\n    [\n        GridModule\n    ]\n})\nexport class GridFeatureModule\n{\n}","import {NgModule} from '@angular/core';\nimport {TitledDialogModule} from '@anglr/common/material';\n\nimport {DisplayingFeatureModule} from '../../displayingFeature.module';\nimport {MainMenuComponent} from '../components';\nimport {UserSettingsSAComponent} from '../../../components';\n\n/**\n * Module for menu components\n */\n@NgModule(\n{\n    imports:\n    [\n        DisplayingFeatureModule,\n        UserSettingsSAComponent,\n        TitledDialogModule,\n    ],\n    declarations:\n    [\n        MainMenuComponent\n    ],\n    exports:\n    [\n        MainMenuComponent\n    ]\n})\nexport class MenuModule\n{\n}","import {mapValuesToThis} from '@jscrpt/common';\n\nimport {DynamicRoute} from './dynamicRoutes.interface';\n\n/**\n * Form model for dynamic route\n */\nexport class DynamicRouteModel implements DynamicRoute\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public module: string = '';\n\n    /**\n     * @inheritdoc\n     */\n    public path: string = '';\n\n    /**\n     * @inheritdoc\n     */\n    public permission: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public withResolver: boolean = false;\n\n    /**\n     * @inheritdoc\n     */\n    public resolverRelations: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public template: string = '';\n\n    //######################### constructor #########################\n    constructor(value: DynamicRoute|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, Router, UrlTree, UrlSegmentGroup} from '@angular/router';\nimport {AuthenticationService, AuthorizeOptions, evaluatePermissions} from '@anglr/authentication';\nimport {isBlank, flatMapArray} from '@jscrpt/common';\n\nimport {DynamicRouteData} from '../../../services/dynamicRoutes/dynamicRoutes.interface';\n\n/**\n * Routing guard that is used for authorization of user for dynamic components\n */\n@Injectable({providedIn: 'root'})\nexport class DynamicAuthGuard implements CanActivate\n{\n    //######################### constructor #########################\n    constructor(private _authSvc: AuthenticationService,\n                private _router: Router)\n    {\n    }\n\n    //######################### implementation of CanActivate #########################\n\n    /**\n     * Tests whether component can be activated\n     * @param next - Information about next coming route\n     */\n    public async canActivate(next: ActivatedRouteSnapshot) : Promise<boolean>\n    {\n        const data = next.data as DynamicRouteData;\n\n        if(!data.permission)\n        {\n            return true;\n        }\n\n        const authOptions: AuthorizeOptions =\n        {\n            permission: data.permission,\n        };\n\n        const addCondition: boolean = true;\n        const userIdentity = this._authSvc.userIdentity;\n\n        if(isBlank(userIdentity))\n        {\n            throw new Error('AuthenticationService must be initialized before first use of AuthGuard');\n        }\n\n        const authorized = evaluatePermissions(userIdentity.permissions,\n                                               authOptions.permission,\n                                               authOptions.andCondition ?? false,\n                                               authOptions.conditionString ?? false,\n                                               addCondition);\n\n        const urlSegmentGroup = new UrlSegmentGroup(flatMapArray(next.pathFromRoot.map(itm => itm.url)), {});\n        const urlTree = new UrlTree();\n        urlTree.root = urlSegmentGroup;\n        urlTree.queryParams = {};\n        const nextPath = this._router.serializeUrl(urlTree);\n\n        //user is authenticated and not authorized\n        if(!authorized && userIdentity.isAuthenticated)\n        {\n            this._authSvc.showAccessDenied();\n\n            return false;\n        }\n\n        //not authorized, not authenticated, not on login page\n        else if(!authorized && !userIdentity.isAuthenticated && !this._authSvc.isAuthPage(nextPath))\n        {\n            this._authSvc.showAuthPage();\n            \n            return false;\n        }\n\n        return true;\n    }\n}","import {Injectable, Injector} from '@angular/core';\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {provideRelations, RelationsComponentManager, RelationsManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {provideTinyMceRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelations} from '@anglr/dynamic/handlebars-components';\nimport {provideRestRelations} from '@anglr/dynamic/rest-components';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {Observable} from 'rxjs';\n\nimport {createStoreDataServiceFactory} from '../../factories';\nimport {provideSampleRelations} from '../../../dynamicItems/utils';\nimport ActivatedRouteSnapshotRelations from '../../../dynamicItems/activatedRouteSnapshot/type';\nimport DynamicDataResolverRelations from '../../../dynamicItems/dynamicDataResolver/type';\nimport {StoreDataService} from '../../../services/storeData';\nimport {DynamicRouteData} from '../../../services/dynamicRoutes';\n\n/**\n * Resolve definition data type\n */\nexport interface DynamicDataResolve<TData = any>\n{\n    /**\n     * Data obtained by resolver\n     */\n    data?: TData;\n}\n\n\n/**\n * Dynamic data data resolver that uses relations\n */\n@Injectable()\nexport class DynamicDataDataResolver<TData = any> implements Resolve<TData>\n{\n    //######################### private fields #########################\n\n    /**\n     * Instance of injector\n     */\n    private _injector: Injector;\n\n    /**\n     * Instance of relations processor for resolver relations\n     */\n    private _processor: RelationsProcessor;\n\n    /**\n     * Instance of relations component manager for resolver relations\n     */\n    private _manager: RelationsComponentManager;\n\n    /**\n     * Instance of relations manager for resolver relations\n     */\n    private _relations: RelationsManager;\n\n    /**\n     * Instance of store for resolver relations \n     */\n    private _store: StoreDataService<RelationsNodeMetadata[]>;\n\n    /**\n     * Indication whether are relations initialized\n     */\n    private _relationsInitialized: boolean = false;\n\n    //######################### constructor #########################\n    constructor(injector: Injector,)\n    {\n        this._injector = Injector.create(\n        {\n            providers:\n            [\n                createStoreDataServiceFactory('RESOLVER_RELATIONS_DATA'),\n                provideRelations(),\n                provideHandlebarsRelations(),\n                provideRestRelations(),\n                provideTinyMceRelations(),\n                provideSampleRelations(),\n            ],\n            parent: injector,\n        });\n\n        this._processor = this._injector.get(RelationsProcessor);\n        this._manager = this._injector.get(RelationsComponentManager);\n        this._relations = this._injector.get(RelationsManager);\n        this._store = this._injector.get(StoreDataService<RelationsNodeMetadata[]>);\n    }\n\n    //######################### implementation of Resolve<PrehladHospCookieData> #########################\n\n    /**\n     * Resolves data for DynamicData\n     * @param route - Next route that will be resolved\n     * @param _ - Current state of router\n     */\n    public resolve(route: ActivatedRouteSnapshot, _: RouterStateSnapshot): Observable<TData>\n    {\n        const dataResolverRelations = new DynamicDataResolverRelations();\n        const routeSnapshot = new ActivatedRouteSnapshotRelations(route);\n        const data = route.data as DynamicRouteData;\n\n        if(data.resolverRelations && !this._relationsInitialized)\n        {\n            this._relations.setRelations(this._store.getData(data.resolverRelations) ?? []);\n            this._relationsInitialized = true;\n        }\n\n        return new Observable(subscriber =>\n        {\n            (async () =>\n            {\n                this._manager.registerComponent(ActivatedRouteSnapshotRelations.relationsId, routeSnapshot);\n                this._manager.registerComponent(DynamicDataResolverRelations.relationsId, dataResolverRelations);\n                await this._processor.initialized;\n                this._processor.updateRelations(ActivatedRouteSnapshotRelations.relationsId);\n                this._processor.updateRelations(DynamicDataResolverRelations.relationsId);\n\n                const result = await dataResolverRelations.result;\n\n                this._processor.destroyComponent(DynamicDataResolverRelations.relationsId);\n                this._processor.destroyComponent(ActivatedRouteSnapshotRelations.relationsId);\n                this._manager.unregisterComponent(DynamicDataResolverRelations.relationsId);\n                this._manager.unregisterComponent(ActivatedRouteSnapshotRelations.relationsId);\n                \n                subscriber.next(result);\n                subscriber.complete();\n            })();\n        });\n    }\n}","import {Inject, Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {PERMANENT_STORAGE, PermanentStorage} from '@anglr/common';\nimport {PromiseOr} from '@jscrpt/common';\n\nimport {DynamicRoute, DynamicRouteData} from './dynamicRoutes.interface';\nimport {DynamicContentSAComponent} from '../../components';\nimport {DynamicAuthGuard} from '../../misc/guards';\nimport {DynamicDataDataResolver} from '../../misc/resolvers';\n\nconst DYNAMIC_ROUTES = 'DYNAMIC_ROUTES';\n\n/**\n * Service used for handling dynamic routes\n */\n@Injectable({providedIn: 'root'})\nexport class DynamicRoutesService\n{\n    //######################### private fields #########################\n\n    /**\n     * Current routes value\n     */\n    private _routes: DynamicRoute[] = [];\n\n    //######################### public properties #########################\n\n    /**\n     * Gets current routes\n     */\n    public get routes(): DynamicRoute[]\n    {\n        return this._routes;\n    }\n\n    //######################### constructor #########################\n    constructor(@Inject(PERMANENT_STORAGE) private _permanentStorage: PermanentStorage,\n                private _router: Router,)\n    {\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Initializes dynamic routes\n     */\n    public initialize(): PromiseOr<void>\n    {\n        this._routes = this._permanentStorage.get<DynamicRoute[]>(DYNAMIC_ROUTES) ?? [];\n        this._setRoutes();\n    }\n\n    /**\n     * Adds new dynamic route\n     * @param route - Route to be added into list of dynamic routes\n     */\n    public async addRoute(route: DynamicRoute): Promise<void>\n    {\n        this._routes.push(route);\n\n        await this.save();\n    }\n\n    /**\n     * Saves routes, indicating some change in routes\n     */\n    public save(): PromiseOr<void>\n    {\n        this._permanentStorage.set(DYNAMIC_ROUTES, this._routes);\n        this._setRoutes();\n    }\n\n    /**\n     * Removes dynamic route\n     * @param route - Route to be removed\n     */\n    public async remove(route: DynamicRoute): Promise<void>\n    {\n        const index = this._routes.findIndex(itm => itm.module === route.module &&\n                                                    itm.path === route.path &&\n                                                    itm.permission === route.permission &&\n                                                    itm.resolverRelations === route.resolverRelations &&\n                                                    itm.template === route.template &&\n                                                    itm.withResolver === route.withResolver);\n\n        if(index < 0)\n        {\n            return;\n        }\n\n        this._routes.splice(index, 1);\n        await this.save();\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Sets dynamic routes to router\n     */\n    private _setRoutes(): void\n    {\n        const currentConfig = this._router.config;\n\n        //prepare routes\n        for(const dynamicRoute of this._routes)\n        {\n            let dynamicModuleRoute = currentConfig.find(itm => itm.path == dynamicRoute.module && Array.isArray(itm.children));\n\n            if(!dynamicModuleRoute)\n            {\n                dynamicModuleRoute =\n                {\n                    path: dynamicRoute.module,\n                };\n\n                currentConfig.unshift(dynamicModuleRoute);\n            }\n\n            dynamicModuleRoute.children = [];\n        }\n\n        //fill routes\n        for(const dynamicRoute of this._routes)\n        {\n            const dynamicModuleRoute = currentConfig.find(itm => itm.path == dynamicRoute.module && Array.isArray(itm.children));\n\n            if(!dynamicModuleRoute)\n            {\n                //TODO: log missing\n\n                continue;\n            }\n\n            dynamicModuleRoute.children?.push(\n            {\n                path: dynamicRoute.path,\n                component: DynamicContentSAComponent,\n                data: <DynamicRouteData>\n                {\n                    template: dynamicRoute.template,\n                    permission: dynamicRoute.permission,\n                    resolverRelations: dynamicRoute.resolverRelations,\n                },\n                canActivate:\n                [\n                    ...(!dynamicRoute.permission) ? [] : [DynamicAuthGuard]\n                ],\n                providers: \n                [\n                    ...dynamicRoute.withResolver ? [DynamicDataDataResolver] : [],\n                ],\n                resolve:\n                {\n                    ...dynamicRoute.withResolver ? {data: DynamicDataDataResolver} : {}\n                }\n            });\n        }\n\n        this._router.resetConfig(currentConfig);\n    }\n}","import {Injectable, KeyValueDiffers, Inject, KeyValueDiffer} from '@angular/core';\nimport {extend} from '@jscrpt/common';\nimport {Subject, Observable} from 'rxjs';\n\nimport {SettingsStorage} from './settings.interface';\nimport {SETTINGS_STORAGE} from '../../misc/tokens';\nimport {SettingsGeneral, SettingsDebug, SettingsLogging} from '../../config';\n\n/**\n * Class used as settings service\n */\n@Injectable({providedIn: 'root'})\nexport class SettingsService\n{\n    //######################### private methods #########################\n\n    /**\n     * Current general settings value\n     */\n    private _settings: SettingsGeneral = this._storage.get();\n\n    /**\n     * Current debugging settings value\n     */\n    private _settingsDebugging: SettingsDebug = this._storage.getDebugging();\n\n    /**\n     * Current logging settings value\n     */\n    private _settingsLogging: SettingsLogging = this._storage.getLogging();\n\n    /**\n     * General settings value differ\n     */\n    private _settingsValueDiff: KeyValueDiffer<any, any>;\n\n    /**\n     * Debugging settings value differ\n     */\n    private _settingsDebuggingValueDiff: KeyValueDiffer<any, any>;\n\n    /**\n     * Occurs when any of general settings properties change\n     */\n    private _settingsChangeSubject: Subject<keyof SettingsGeneral> = new Subject<keyof SettingsGeneral>();\n\n    /**\n     * Occurs when any of debugging settings properties change\n     */\n    private _settingsDebuggingChangeSubject: Subject<keyof SettingsDebug> = new Subject<keyof SettingsDebug>();\n\n    //######################### public properties #########################\n\n    /**\n     * Gets general settings object value\n     */\n    public get settings(): SettingsGeneral\n    {\n        return this._settings;\n    }\n\n    /**\n     * Gets debugging settings object value\n     */\n    public get settingsDebugging(): SettingsDebug\n    {\n        return this._settingsDebugging;\n    }\n\n    /**\n     * Gets logging settings object value\n     */\n    public get settingsLogging(): SettingsLogging\n    {\n        return this._settingsLogging;\n    }\n\n    /**\n     * Occurs when any of general settings properties change\n     */\n    public get settingsChange(): Observable<keyof SettingsGeneral>\n    {\n        return this._settingsChangeSubject.asObservable();\n    }\n\n    /**\n     * Occurs when any of debugging settings properties change\n     */\n    public get settingsDebuggingChange(): Observable<keyof SettingsDebug>\n    {\n        return this._settingsDebuggingChangeSubject.asObservable();\n    }\n\n    //######################### constructor #########################\n    constructor(keyValueDiffers: KeyValueDiffers,\n                @Inject(SETTINGS_STORAGE) private _storage: SettingsStorage)\n    {\n        this._settingsValueDiff = keyValueDiffers.find(this._settings).create();\n        this._settingsValueDiff.diff(this._settings);\n\n        this._settingsDebuggingValueDiff = keyValueDiffers.find(this._settingsDebugging).create();\n        this._settingsDebuggingValueDiff.diff(this._settingsDebugging);\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Sets new general settings\n     * @param settings Instance of general settings object\n     */\n    public setSettings(settings: SettingsGeneral): void\n    {\n        this._settings = extend(true, {}, this._settings, settings);\n        this._storage.set(settings);\n\n        const diff = this._settingsValueDiff.diff(settings);\n        \n        if(diff)\n        {\n            diff.forEachChangedItem(itm =>\n            {\n                this._settingsChangeSubject.next(itm.key as any);\n            });\n        }\n    }\n\n    /**\n     * Sets new debugging settings\n     * @param settings Instance of debugging settings object\n     */\n    public setDebuggingSettings(settings: SettingsDebug): void\n    {\n        this._settingsDebugging = extend(true, {}, this._settingsDebugging, settings);\n        this._storage.setDebugging(settings);\n\n        const diff = this._settingsDebuggingValueDiff.diff(settings);\n        \n        if(diff)\n        {\n            diff.forEachChangedItem(itm =>\n            {\n                this._settingsDebuggingChangeSubject.next(itm.key as any);\n            });\n        }\n    }\n\n    /**\n     * Sets new logging settings\n     * @param settings Instance of logging settings object\n     */\n    public setLoggingSettings(settings: SettingsLogging): void\n    {\n        this._settingsLogging = extend(true, {}, this._settingsLogging, settings);\n        this._storage.setLogging(settings);\n    }\n}","import {Inject, Injectable} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\nimport {extend} from '@jscrpt/common';\n\nimport {config, SettingsGeneral, SettingsDebug, SettingsLogging} from '../../config';\nimport {SettingsStorage} from './settings.interface';\n\nconst GENERAL_SETTINGS_STORAGE = 'general-settings';\nconst DEBUGGING_SETTINGS_STORAGE = 'debugging-settings';\nconst LOGGING_SETTINGS_STORAGE = 'logging-settings';\n\n/**\n * Settings storage using local storage\n */\n@Injectable()\nexport class LocalSettingsStorage implements SettingsStorage\n{\n    //######################### constructor #########################\n    constructor(@Inject(PERMANENT_STORAGE) private _store: PermanentStorage,)\n    {\n\n    }\n\n    //######################### public methods - implementation of SettingsStorage #########################\n\n    /**\n     * Gets general settings object from storage\n     */\n    public get(): SettingsGeneral\n    {\n        let settings = this._store.get<SettingsGeneral>(GENERAL_SETTINGS_STORAGE);\n\n        settings = extend(true,\n                          {},\n                          <SettingsGeneral>\n                          {\n                              theme: config.general.theme,\n                              language: config.general.language\n                          },\n                          settings);\n\n        return settings;\n    }\n\n    /**\n     * Sets general settings object to storage\n     * @param config General settings object to be stored\n     */\n    public set(config: SettingsGeneral): void\n    {\n        this._store.set(GENERAL_SETTINGS_STORAGE, config);\n    }\n\n    /**\n     * Gets debugging settings object from storage\n     */\n    public getDebugging(): SettingsDebug\n    {\n        let settings = this._store.get<SettingsDebug>(DEBUGGING_SETTINGS_STORAGE);\n\n        settings = extend(true,\n                          {},\n                          <SettingsDebug>\n                          {\n                              consoleEnabled: config.debug.consoleEnabled,\n                              debugData: config.debug.debugData\n                          },\n                          settings);\n\n        return settings;\n    }\n\n    /**\n     * Sets debugging settings object to storage\n     * @param config Debugging settings object to be stored\n     */\n    public setDebugging(config: SettingsDebug): void\n    {\n        this._store.set(DEBUGGING_SETTINGS_STORAGE, config);\n    }\n\n    /**\n     * Gets logging settings object from storage\n     */\n    public getLogging(): SettingsLogging\n    {\n        let settings = this._store.get<SettingsLogging>(LOGGING_SETTINGS_STORAGE);\n\n        settings = extend(true,\n                          {},\n                          <SettingsLogging>\n                          {\n                              consoleLogLevel: config.logging.consoleLogLevel\n                          },\n                          settings);\n\n        return settings;\n    }\n\n    /**\n     * Sets logging settings object to storage\n     * @param config Logging settings object to be stored\n     */\n    public setLogging(config: SettingsLogging): void\n    {\n        this._store.set(LOGGING_SETTINGS_STORAGE, config);\n    }\n}","import {PermanentStorage} from '@anglr/common';\nimport {Dictionary} from '@jscrpt/common';\n\n/**\n * Service used for obtaining and storing data\n */\nexport class StoreDataService<TData = any>\n{\n    //######################### constructor #########################\n    constructor(private _storage: PermanentStorage,\n                private _storeKey: string,)\n    {\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Stores data into store\n     * @param name - Name of stored data\n     * @param data - Data to be stored\n     */\n    public setData(name: string, data: TData): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        store[name] = data;\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data\n     * @param name - Name of data to be retrieved\n     */\n    public getData(name: string): TData|null\n    {\n        return (this._storage.get<any>(this._storeKey)?.[name]) ?? null;\n    }\n\n    /**\n     * Removes data from store\n     * @param name - Name of data to be removed\n     */\n    public removeData(name: string): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        delete store[name];\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data names\n     */\n    public getStored(): string[]\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        return Object.keys(store);\n    }\n}"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","t","i0","EditorControlsSAComponent","constructor","_changeDetector","_dialog","_notifications","_hotkeys","_initSubscriptions","Subscription","metadata","history","metadataChange","EventEmitter","save","ngOnInit","this","add","subscribe","saveMetadata","historyChange","detectChanges","pop","ngOnDestroy","unsubscribe","editMetadata","result","lastValueFrom","open","CodeEditorDialogComponent","title","width","height","data","content","JSON","stringify","languageModel","JsonLanguageModel","afterClosed","isPresent","parse","emit","getNewState","error","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","ctx","CommonModule","GoBackModule","TooltipModule","AuthorizationModule","encapsulation","changeDetection","DynamicContentSAComponent","_route","_store","_relationsManager","nameof","getData","layout","setRelations","relations","provide","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","deps","StoreDataService","RELATIONS_METADATA_STORAGE","provideLayoutRelationsCustomComponents","provideBasicLayoutRelations","provideMaterialLayoutRelations","provideCssLayoutRelations","provideTinyMceLayoutRelations","provideHandlebarsLayoutRelations","provideRestLayoutRelations","provideFormLayoutRelations","provideSampleLayoutRelations","createStoreDataServiceFactory","RouterModule","LayoutComponentRendererSADirective","UserSettingsSections","UserSettingsSAComponent","settingsSvc","formBuilder","consoleConfig","debugDataEnabled","themes","config","languages","logLevels","activeSection","General","settings","debuggingSettings","settingsDebugging","loggingSettings","settingsLogging","_getLogLevels","generalSettingsForm","group","language","theme","debuggingSettingsForm","consoleEnabled","debugData","loggingSettingsForm","consoleLogLevel","LogEventLevel","valueChanges","generalSettings","setSettings","debugSettings","setEnabled","setDebuggingSettings","restrictToLevel","setLoggingSettings","forEach","val","isNaN","push","name","value","DisplayingFeatureModule","FormsFeatureModule","styles","ActivatedRouteSnapshotRelationsMetadataLoader","ActivatedRouteSnapshotRelationsEditorMetadata","ActivatedRouteSnapshotRelations","relationsId","params","queryParams","fragment","paramsChange","Subject","queryParamsChange","fragmentChange","dataChange","invalidateVisuals","RelationsEditorMetadata","ActivatedRouteSnapshot","DynamicDataResolverRelationsMetadataLoader","DynamicDataResolverRelationsEditorMetadata","DynamicDataResolverRelations","_resolve","ngOnChanges","changes","resolvePromiseObservableOr","SampleDynamicModuleItemsProvider","_logger","tryToGet","source","package","debug","LOGGER","factory","SampleDynamicModuleRelationsProvider","moduleName","SampleDynamicModuleTypesProvider","SAMPLE_LAYOUT_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","SAMPLE_LAYOUT_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","SAMPLE_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","SAMPLE_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","SAMPLE_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideSampleLayout","provideSampleRelations","provideSampleLayoutEditor","provideStaticPackageSource","provideSampleRelationsEditor","provideSampleLayoutRelationsEditor","globalDefine","global","Document","ngDesignerMetadata","observableSubscribe","Observable","next","complete","isBlank","isFunction","err","console","log","call","routeAnimationTrigger","trigger","transition","query","animateChild","optional","style","position","perspective","top","left","transform","opacity","animate","loaderTrigger","demoOverviewRoute","path","permission","withResolver","resolverRelations","demoDetailRoute","demoHomeRoute","demoOverviewLayout","displayName","options","children","text","cssClass","margin","right","bottom","padding","textStyling","scope","horizontal","wrap","label","placeholder","flex","controlName","controlType","disabled","buttonCssClass","undefined","demoOverviewRelations","relationsOptions","url","method","runImmediately","configurable","type","nodeMetadata","scopeConfigurable","coordinates","x","y","outputName","inputName","surname","email","demoDetailLayout","demoHomeLayout","linkCssClass","link","demoDetailResolverRelations","MainMenuComponent","_authSvc","_router","_dynamicRoutes","_injector","logout","navigate","loadDemo","event","preventDefault","stopPropagation","overview","setData","detail","home","routes","find","itm","addRoute","resolverRelationsStore","Injector","providers","parent","get","window","location","reload","openSettings","maxHeight","AppComponent","translateSvc","_appHotkeys","logger","document","consoleVisible","authenticated","routeComponentState","guiVersion","version","serverVersion","serverName","initialized","verbose","body","classList","_theme","_settingsChangeSubscription","settingsChange","remove","use","_settingsDebuggingChangeSubscription","settingsDebuggingChange","_toggleConsoleHotkey","setDefaultLang","getUserIdentity","identity","isAuthenticated","_authChangedSubscription","authenticationChanged","initialize","ngAfterViewInit","_routerOutletActivatedSubscription","routerOutlet","activateEvents","activatedRouteData","activatedRoute","component","destroy","oldHelpHotkey","hotkeys","Hotkey","DOCUMENT","viewQuery","AppHotkeysService","fadeInOutTrigger","consoleAnimationTrigger","routesOptions","rootModule","rootModuleConfig","enableTracing","useHash","staticRoutesBefore","loadChildren","DefaultModule","RoutedContentModule","DynamicContentModule","CustomComponentsModule","staticRoutesAfter","loadComponent","AccessDeniedComponent","NotFoundComponent","GlobalizationService","GlobalizationServiceInterface","locale","localeChange","EMPTY","RestLoggerService","RESTClient","logs","_log","pipe","catchError","_","warn","_logs","_unhandledErrorsTransform","addBasicInfo","length","obj","message","startsWith","replace","info","Array","isArray","__decorate","JsonContentType","DisableMiddleware","ClientErrorHandlingMiddleware","DisableInterceptor","AuthInterceptor","SuppressAuthInterceptor","POST","__param","BaseUrl","DefaultHeaders","USER_DATA","AccountService","_storage","inject","PERMANENT_STORAGE","_identity","permissions","_permissions","_computePermissionsForRoles","login","accessToken","observer","userName","password","privileges","_roles2privileges","firstName","concat","additionalInfo","rememberMe","set","roles","perms","role","computedPermissions","permissionsDict","providedIn","AccountAuthOptions","AuthenticationServiceOptions","_accountSvc","_location","super","isAuthPage","indexOf","showAuthPage","returnUrl","showAccessDenied","RestMockLoggerService","logResponse","request","response","responseString","isString","Blob","reader","FileReader","onloadend","readAsDataURL","ArrayBuffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","_logResponse","toPromise","catch","_mock","NEVER","MockLoggerMiddleware","HTTP_GATEWAY_TIMEOUT_INTERCEPTOR_PROVIDER","SERVICE_UNAVAILABLE_INTERCEPTOR_PROVIDER","HTTP_SERVER_ERROR_INTERCEPTOR_PROVIDER","NO_CONNECTION_INTERCEPTOR_PROVIDER","SUPPRESS_AUTH_INTERCEPTOR_PROVIDER","AUTH_INTERCEPTOR_PROVIDER","PROGRESS_INTERCEPTOR_PROVIDER","NoConnectionInterceptorOptions","HttpGatewayTimeoutInterceptorOptions","GlobalizationServiceImpl","ERROR_WITH_URL_EXTENDER","ANGLR_EXCEPTION_HANDLER_PROVIDER","DIALOG_INTERNAL_SERVER_ERROR_RENDERER_PROVIDER","authService","alert","APP_INITIALIZER","AuthenticationService","NO_DATA_RENDERER_OPTIONS","useValue","texts","loading","noData","notLoaded","GRID_INITIALIZER_TYPE","QueryGridInitializerComponent","PAGING_OPTIONS","itemsPerPageValues","initialItemsPerPage","METADATA_SELECTOR_TYPE","DialogMetadataSelectorComponent","METADATA_SELECTOR_OPTIONS","showButtonVisible","GRID_INITIALIZER_OPTIONS","storageIppName","CONTENT_RENDERER_OPTIONS","cssClasses","containerDiv","HEADER_CONTENT_RENDERER_OPTIONS","thDefault","NORMAL_STATE_OPTIONS","nothingSelected","STRING_LOCALIZATION","NgxTranslateStringLocalizationService","LocalPermanentStorageService","REST_SINK","ConsoleSinkConfigService","SettingsService","LOGGER_REST_CLIENT","SETTINGS_STORAGE","LocalSettingsStorage","DebugDataEnabledService","DATE_API","DateFnsDateApi","DATE_FNS_FORMAT_PROVIDER","DATE_FNS_DATE_API_OBJECT_TYPE","DATE_FNS_LOCALE","sk","VALIDATION_ERROR_MESSAGES","required","number","pattern","minValue","maxValue","minlength","maxlength","birthNumber","availableUsername","VALIDATION_ERROR_RENDERER_FACTORY_OPTIONS","container","ReservedSpaceValidationErrorsContainerComponent","DEFAULT_NOTIFICATIONS","MD_HELP_NOTIFICATIONS","useExisting","NOTIFICATIONS","ERROR_HANDLING_NOTIFICATIONS","CLIENT_ERROR_NOTIFICATIONS","TitledDialogServiceOptions","MovableTitledDialogComponent","CONFIRMATION_DIALOG_OPTIONS","confirmationText","dialogCancelText","dialogConfirmText","FLOATING_UI_POSITION","RENDER_MARKDOWN_CONFIG","assetsPathPrefix","baseUrl","DATETIME_REST_DATE_API","REST_MOCK_LOGGER","REST_ERROR_HANDLING_MIDDLEWARE_ORDER","REST_METHOD_MIDDLEWARES","LoggerMiddleware","ResponseTypeMiddleware","ReportProgressMiddleware","HTTP_CLIENT_ERROR_RESPONSE_MAPPER","errors","isJsObject","HTTP_CLIENT_VALIDATION_ERROR_RESPONSE_MAPPER","validationErrors","HTTP_CLIENT_ERROR_CUSTOM_HANDLER","handle404Func","RestNotFoundError","WebpackTranslateLoaderService","getTranslation","lang","default","ReportMissingTranslationService","handle","key","AppModule","imports","BrowserModule","appId","HttpClientModule","InternalServerErrorModule","ProgressIndicatorModule","NotificationsGlobalModule","HotkeyModule","MenuModule","ConsoleLogModule","DndModule","backend","HTML5Backend","TranslateModule","loader","TranslateLoader","debugTranslations","missingTranslationHandler","MissingTranslationHandler","useDefaultLang","ModuleRoutes","BrowserAppModule","bootstrap","AnglrExceptionHandlerOptions","BrowserAnimationsModule","BrowserTransferStateModule","cheatSheetCloseEsc","enableProdMode","platform","platformBrowser","runWhenModuleStable","bootstrapModule","moduleRef","injector","RestTransferStateService","clearAndDeactivate","storeName","storage","InjectionToken","CommonUtilsModule","CommonLocalizeModule","NumeralModule","CastPipesModule","DatePipesModule","ReactiveFormsModule","MatSlideToggleModule","NumberInputModule","NgSelectModule","NgSelectEditModule","HasErrorModule","FormPipesModule","DateTimeModule","DateTimePickerModule","DebuggingFeatureModule","DebugDataCopyClickModule","GridFeatureModule","GridModule","TitledDialogModule","DynamicRouteModel","mapValuesToThis","DynamicAuthGuard","canActivate","authOptions","userIdentity","authorized","evaluatePermissions","andCondition","conditionString","urlSegmentGroup","UrlSegmentGroup","flatMapArray","pathFromRoot","urlTree","UrlTree","root","nextPath","serializeUrl","DynamicDataDataResolver","_relationsInitialized","provideRelations","provideHandlebarsRelations","provideRestRelations","provideTinyMceRelations","_processor","RelationsProcessor","_manager","RelationsComponentManager","_relations","RelationsManager","route","dataResolverRelations","routeSnapshot","subscriber","registerComponent","updateRelations","destroyComponent","unregisterComponent","DYNAMIC_ROUTES","DynamicRoutesService","_routes","_permanentStorage","_setRoutes","index","findIndex","splice","currentConfig","dynamicRoute","dynamicModuleRoute","unshift","resetConfig","_settings","_settingsDebugging","_settingsLogging","_settingsChangeSubject","asObservable","_settingsDebuggingChangeSubject","keyValueDiffers","getDebugging","getLogging","_settingsValueDiff","create","diff","_settingsDebuggingValueDiff","extend","forEachChangedItem","setDebugging","setLogging","GENERAL_SETTINGS_STORAGE","DEBUGGING_SETTINGS_STORAGE","LOGGING_SETTINGS_STORAGE","_storeKey","removeData","getStored"],"sourceRoot":""}