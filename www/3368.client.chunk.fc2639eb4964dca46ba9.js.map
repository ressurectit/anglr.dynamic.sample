{"version":3,"file":"3368.client.chunk.fc2639eb4964dca46ba9.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/dynamicItems/gridTable/gridTable.metadata.ts","webpack://ng-universal-demo/./app/dynamicItems/gridTable/gridTable.component.html","webpack://ng-universal-demo/./app/dynamicItems/gridTable/gridTable.component.ts","webpack://ng-universal-demo/./app/dynamicItems/gridTable/type.ts","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/decorators/layoutEditorMetadata/layoutEditorMetadata.decorator.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout/src/components/layoutComponentBase/layoutComponentBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/relations/src/extensions/relationsRegistration/relationsRegistration.extension.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/src/misc/dynamicItemExtensionBase.js"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {LayoutEditorMetadataDescriptor} from '@anglr/dynamic/layout-editor';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\nimport {GridTableComponentOptions} from './gridTable.options';\n\n/**\n * Grid table layout metadata loader\n */\nexport const GridTableLayoutMetadataLoader: DynamicMetadataLoader<LayoutEditorMetadataDescriptor<GridTableComponentOptions>> = async () => new (await import('./metadata/gridTable.layoutMetadata')).GridTableLayoutEditorMetadata();\n\n/**\n * Grid table relations metadata loader\n */\nexport const GridTableRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/gridTable.relationsMetadata')).GridTableRelationsEditorMetadata();\n","<ng-grid [gridOptions]=\"gridOptions\">\n    <basic-table-metadata>\n        <basic-table-column id=\"name\" name=\"name\" title=\"Name\"></basic-table-column>\n        <basic-table-column id=\"surname\" name=\"surname\" title=\"Surname\"></basic-table-column>\n        <basic-table-column id=\"email\" name=\"email\" title=\"E-mail\"></basic-table-column>\n\n        <basic-table-column id=\"detail\" title=\"detail\" [titleVisible]=\"false\">\n            <ng-template #bodyTemplate let-row>\n                <a [routerLink]=\"['../detail', row.id]\">detail</a>\n            </ng-template>\n        </basic-table-column>\n    </basic-table-metadata>\n</ng-grid>","import {Component, ChangeDetectionStrategy, SimpleChanges, ViewChild, AfterViewInit} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {LayoutComponent, LayoutComponentBase} from '@anglr/dynamic/layout';\nimport {LayoutEditorMetadata} from '@anglr/dynamic/layout-editor';\nimport {HostDisplayBlockStyle} from '@anglr/common';\nimport {Grid, GridComponent, GridModule, GridOptions, NoPagingComponent, SimpleOrdering, SyncDataLoaderComponent, SyncDataLoaderOptions} from '@anglr/grid';\nimport {setSyncData} from '@anglr/grid/extensions';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {nameof, PromiseOr} from '@jscrpt/common';\n\nimport {GridTableComponentOptions} from './gridTable.options';\nimport {GridTableLayoutMetadataLoader, GridTableRelationsMetadataLoader} from './gridTable.metadata';\n\n/**\n * Component used for displaying grid table\n */\n@Component(\n{\n    selector: 'grid-table',\n    templateUrl: 'gridTable.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        GridModule,\n        RouterModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(GridTableRelationsMetadataLoader)\n@LayoutEditorMetadata(GridTableLayoutMetadataLoader)\nexport class GridTableSAComponent<TData = any> extends LayoutComponentBase<GridTableComponentOptions> implements LayoutComponent<GridTableComponentOptions>, AfterViewInit\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Data to be displayed in grid\n     */\n    public data: TData[] = [];\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of grid options\n     */\n    protected gridOptions: GridOptions =\n    {\n        plugins:\n        {\n            dataLoader:\n            {\n                //use sync data loader as grid data loader plugin\n                type: SyncDataLoaderComponent,\n                options: <SyncDataLoaderOptions<TData, SimpleOrdering>>\n                {\n                    //all data used in data loader\n                    data: [],\n                }\n            },\n            paging:\n            {\n                type: NoPagingComponent,\n            }\n        }\n    };\n\n    //######################### protected properties - children #########################\n\n    /**\n     * Instance of grid\n     */\n    @ViewChild(GridComponent)\n    protected grid: Grid|undefined|null;\n\n    //######################### public methods - implementation of AfterViewInit #########################\n    \n    /**\n     * Called when view was initialized\n     */\n    public ngAfterViewInit(): void\n    {\n        if(this.data.length && this.grid)\n        {\n            this.grid.execute(setSyncData(this.data, true));\n        }\n    }\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override onChanges(changes: SimpleChanges): PromiseOr<void>\n    {\n        if(nameof<GridTableSAComponent>('data') in changes && this.grid)\n        {\n            this.grid.execute(setSyncData(this.data, true));\n        }\n    }\n}","import {RelationsRegistrationExtension} from '@anglr/dynamic/relations';\n\nimport {GridTableSAComponent} from './gridTable.component';\n\nexport default GridTableSAComponent;\n\n\nexport const extensions = [RelationsRegistrationExtension];","import { DynamicClassMetadata } from '@anglr/dynamic';\n/**\n * Sets layout editor metadata to class on which is this decorator applied\n * @param metadataLoader - Layout editor metadata loader function used for obtaining metadata\n */\n\nexport function LayoutEditorMetadata(metadataLoader) {\n  return DynamicClassMetadata(metadataLoader, 'layoutEditorMetadata');\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Injector, Optional } from '@angular/core';\nimport { LOGGER } from '@anglr/common';\nimport { isEmptyObject, nameof } from '@jscrpt/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Base component for layout component\n */\n\nexport class LayoutComponentBase {\n  //######################### constructor #########################\n  constructor(changeDetector, componentElement, injector, logger) {\n    this.changeDetector = changeDetector;\n    this.componentElement = componentElement;\n    this.injector = injector;\n    this.logger = logger; //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n\n    this.extensions = [];\n    /**\n     * Indication whether initialization was already done\n     */\n\n    this.initialized = false;\n    /**\n     * Indication whether was component destroyed\n     */\n\n    this.destroyed = false;\n  } //######################### protected properties #########################\n\n  /**\n   * Gets element that is used within extension\n   */\n\n\n  get element() {\n    return this.componentElement;\n  }\n  /**\n   * Gets options that are used within extension\n   */\n\n\n  get extensionsOptions() {\n    return this.options;\n  } //######################### public methods - implementation of OnDestroy #########################\n\n  /**\n   * Called when component is destroyed\n   */\n\n\n  ngOnDestroy() {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n\n    for (const ext of this.extensions) {\n      ext.destroy();\n    }\n\n    this.onDestroy();\n  } //######################### public methods - implementation of LayoutComponent #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n\n      _this.initialized = true;\n      const extensionsOptions = _this.extensionsOptions;\n      yield _this.onInit();\n      yield _this.onOptionsSet();\n\n      if (extensionsOptions) {\n        for (const extension of _this.extensions) {\n          yield extension.initialize(_this.injector, _this.element, _this);\n        }\n      }\n\n      yield _this.afterInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  ngOnChanges(changes) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      //options has changed\n      if (nameof('options') in changes) {\n        yield _this2.onOptionsSet();\n        const extensionsOptions = _this2.extensionsOptions; //set options in extensions\n\n        if (extensionsOptions) {\n          for (const extension of _this2.extensions) {\n            yield extension.optionsChange(extensionsOptions);\n          }\n        }\n\n        if (!_this2.initialized) {\n          return;\n        }\n\n        yield _this2.onOptionsChange();\n      }\n\n      delete changes[nameof('options')];\n\n      if (!isEmptyObject(changes)) {\n        _this2.onChanges(changes);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  registerExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this.changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialzation of component, options are already set\n   */\n\n\n  onInit() {}\n  /**\n   * Called right after initialization finished, including extesions\n   */\n\n\n  afterInit() {}\n  /**\n   * Called on change of options, after initialization\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Occurs when some property changes on component\n   * @param _changes - Changes that occured on component\n   */\n\n\n  onChanges(_changes) {}\n  /**\n   * Called everytime options are set, after initialization and later\n   */\n\n\n  onOptionsSet() {}\n  /**\n   * Called when component is being destroyed\n   */\n\n\n  onDestroy() {}\n\n}\n\nLayoutComponentBase.ɵfac = function LayoutComponentBase_Factory(t) {\n  return new (t || LayoutComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(LOGGER, 8));\n};\n\nLayoutComponentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutComponentBase,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutComponentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOGGER]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { DynamicItemExtensionBase } from '@anglr/dynamic';\nimport { RelationsComponentManager, RelationsProcessor } from '../../services';\n/**\n * Extension that allows registration of component for relations\n */\n\nexport class RelationsRegistrationExtension extends DynamicItemExtensionBase {\n  constructor() {\n    //######################### protected properties #########################\n    super(...arguments);\n    /**\n     * Instance of relations processor\n     */\n\n    this.relationsProcessor = null;\n    /**\n     * Instance of component manager\n     */\n\n    this.componentManager = null;\n  } //######################### public methods - overrides #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  onInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.injector || !_this.metadata || !_this.instance) {\n        return;\n      }\n\n      _this.relationsProcessor ?? (_this.relationsProcessor = _this.injector.get(RelationsProcessor, null));\n      _this.componentManager ?? (_this.componentManager = _this.injector.get(RelationsComponentManager, null));\n\n      if (!_this.relationsProcessor || !_this.componentManager) {\n        return;\n      }\n\n      _this.componentManager.registerComponent(_this.metadata.id, _this.instance);\n\n      yield _this.relationsProcessor.initialized;\n\n      _this.relationsProcessor.updateRelations(_this.metadata.id);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  onDestroy() {\n    if (!this.relationsProcessor || !this.componentManager || !this.metadata) {\n      return;\n    }\n\n    this.relationsProcessor.destroyComponent(this.metadata.id);\n    this.componentManager.unregisterComponent(this.metadata.id);\n  }\n\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Dynamic item extension base class\n */\nexport class DynamicItemExtensionBase {\n  //######################### constructor #########################\n  constructor(metadata) {\n    this.metadata = metadata;\n    /**\n     * Indication whether was extension initialized\n     */\n\n    this.initialized = false;\n  } //######################### public methods - implementation of DynamicItemExtension #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  initialize(injector, element, instance) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.initialized = true;\n      _this.injector = injector;\n      _this.element = element;\n      _this.instance = instance;\n      yield _this.onInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  optionsChange(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.options = options;\n\n      if (!_this2.initialized) {\n        return;\n      }\n\n      yield _this2.onOptionsChange();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  destroy() {\n    this.onDestroy();\n  } //######################### protected methods #########################\n\n  /**\n   * Called on initialization of component\n   */\n\n\n  onInit() {}\n  /**\n   * Called on change of options of component\n   */\n\n\n  onOptionsChange() {}\n  /**\n   * Called on destruction of component\n   */\n\n\n  onDestroy() {}\n\n}"],"names":["GridTableLayoutMetadataLoader","GridTableLayoutEditorMetadata","GridTableRelationsMetadataLoader","GridTableRelationsEditorMetadata","i0","GridTableSAComponent","LayoutComponentBase","data","gridOptions","plugins","dataLoader","type","SyncDataLoaderComponent","options","paging","NoPagingComponent","ngAfterViewInit","this","length","grid","execute","setSyncData","onChanges","changes","nameof","t","selectors","viewQuery","GridComponent","GridModule","i1","RouterModule","i2","styles","changeDetection","RelationsEditorMetadata","LayoutEditorMetadata","extensions","RelationsRegistrationExtension","metadataLoader","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","constructor","changeDetector","componentElement","injector","logger","initialized","destroyed","element","extensionsOptions","ngOnDestroy","ext","destroy","onDestroy","ngOnInit","_this","onInit","onOptionsSet","extension","initialize","afterInit","ngOnChanges","_this2","optionsChange","onOptionsChange","registerExtensions","invalidateVisuals","detectChanges","_changes","features","super","relationsProcessor","componentManager","metadata","instance","get","registerComponent","id","updateRelations","destroyComponent","unregisterComponent","DynamicItemExtensionBase"],"sourceRoot":""}