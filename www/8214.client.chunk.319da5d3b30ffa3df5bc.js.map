{"version":3,"file":"8214.client.chunk.319da5d3b30ffa3df5bc.js","mappings":"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","sources":["webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/layout-editor/src/modules/propertiesControls/components/propertiesControlBase.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/tinymce-components/src/dynamicItems/richTextBlock/misc/components/richTextBlockPropertiesControl/richTextBlockPropertiesControl.component.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/tinymce-components/src/dynamicItems/richTextBlock/metadata/richTextBlock.model.js","webpack://ng-universal-demo/./node_modules/@anglr/dynamic/es2020/tinymce-components/src/dynamicItems/richTextBlock/metadata/richTextBlock.layoutMetadata.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectorRef, Directive, Input } from '@angular/core';\nimport { LayoutEditorMetadataExtractor } from '../../../services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services\";\n/**\n * Base class for properties control\n */\n\nexport class PropertiesControlBase {\n  //######################### constructor #########################\n  constructor(_changeDetector, _extractor) {\n    this._changeDetector = _changeDetector;\n    this._extractor = _extractor; //######################### protected fields #########################\n\n    /**\n     * Indication whether was component initialized or not\n     */\n\n    this._initialized = false;\n    /**\n     * @inheritdoc\n     */\n\n    this.propertiesMetadata = null;\n  } //######################### public methods - implementation of OnInit #########################\n\n  /**\n   * Initialize component\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this._initialized) {\n        return;\n      }\n\n      _this._initialized = true;\n      yield _this._initialize();\n    })();\n  } //######################### public methods - implementation of PropertiesControl #########################\n\n  /**\n   * @inheritdoc\n   */\n\n\n  initialize() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.ngOnInit();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  invalidateVisuals() {\n    this._changeDetector.detectChanges();\n  } //######################### protected methods #########################\n\n  /**\n   * Use this method for initialization of component\n   */\n\n\n  _initialize() {}\n\n}\n\nPropertiesControlBase.ɵfac = function PropertiesControlBase_Factory(t) {\n  return new (t || PropertiesControlBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LayoutEditorMetadataExtractor));\n};\n\nPropertiesControlBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PropertiesControlBase,\n  inputs: {\n    form: \"form\",\n    propertiesMetadata: \"propertiesMetadata\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PropertiesControlBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LayoutEditorMetadataExtractor\n    }];\n  }, {\n    form: [{\n      type: Input\n    }],\n    propertiesMetadata: [{\n      type: Input\n    }]\n  });\n})();","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TitledDialogService } from '@anglr/common/material';\nimport { LayoutEditorMetadataExtractor, PropertiesControlBase } from '@anglr/dynamic/layout-editor';\nimport { isPresent } from '@jscrpt/common';\nimport { lastValueFrom } from 'rxjs';\nimport { RichTextBlockEditorDialogSAComponent } from '../richTextBlockEditorDialog/richTextBlockEditorDialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@anglr/dynamic/layout-editor\";\nimport * as i2 from \"@anglr/common/material\";\n/**\n * Component used for displaying rich text block properties control\n */\n\nexport class RichTextBlockPropertiesControlSAComponent extends PropertiesControlBase {\n  //######################### constructor #########################\n  constructor(changeDetector, metadataExtractor, dialog) {\n    super(changeDetector, metadataExtractor);\n    this.dialog = dialog;\n  } //######################### protected methods - template bindings #########################\n\n  /**\n   * Shows code editor\n   */\n\n\n  showCodeEditor() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield lastValueFrom(_this.dialog.open(RichTextBlockEditorDialogSAComponent, {\n        title: 'Rich text block editor',\n        width: '75vw',\n        height: '75vh',\n        data: _this.form?.controls.content.value\n      }).afterClosed());\n\n      if (isPresent(result)) {\n        const control = _this.form?.controls.content;\n\n        if (control instanceof FormControl) {\n          control.setValue(result);\n        }\n      }\n    })();\n  }\n\n}\n\nRichTextBlockPropertiesControlSAComponent.ɵfac = function RichTextBlockPropertiesControlSAComponent_Factory(t) {\n  return new (t || RichTextBlockPropertiesControlSAComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LayoutEditorMetadataExtractor), i0.ɵɵdirectiveInject(i2.TitledDialogService));\n};\n\nRichTextBlockPropertiesControlSAComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RichTextBlockPropertiesControlSAComponent,\n  selectors: [[\"rich-text-block-properties-control\"]],\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 3,\n  vars: 0,\n  consts: [[\"type\", \"button\", 1, \"dynamic-btn\", \"dynamic-btn-primary\", \"dynamic-margin-vertical-small\", 3, \"click\"]],\n  template: function RichTextBlockPropertiesControlSAComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function RichTextBlockPropertiesControlSAComponent_Template_button_click_0_listener() {\n        return ctx.showCodeEditor();\n      });\n      i0.ɵɵelementStart(1, \"span\");\n      i0.ɵɵtext(2, \"Edit rich text block\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RichTextBlockPropertiesControlSAComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rich-text-block-properties-control',\n      standalone: true,\n      imports: [],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<button type=\\\"button\\\" class=\\\"dynamic-btn dynamic-btn-primary dynamic-margin-vertical-small\\\" (click)=\\\"showCodeEditor()\\\">\\n    <span>Edit rich text block</span>\\n</button>\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LayoutEditorMetadataExtractor\n    }, {\n      type: i2.TitledDialogService\n    }];\n  }, null);\n})();","import { mapValuesToThis } from '@jscrpt/common';\n/**\n * Rich text block model for properties editor\n */\n\nexport class RichTextBlockModel {\n  //######################### constructor #########################\n  constructor(value) {\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    this.content = '';\n    mapValuesToThis.bind(this)(value);\n  }\n\n}","import { RichTextBlockPropertiesControlSAComponent } from '../misc/components';\nimport { RichTextBlockModel } from './richTextBlock.model';\n/**\n * Rich text block layout metadata\n */\n\nexport class RichTextBlockLayoutEditorMetadata {\n  //######################### constructor #########################\n  constructor() {\n    //######################### public properties - implementation of LayoutEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    this.metaInfo = {\n      name: 'Rich text block',\n      description: 'WYSIWYG editor allowing formatting of multiline text',\n      group: 'Texts',\n      optionsMetadata: {\n        propertiesMetadata: [{\n          modelType: RichTextBlockModel,\n          propertiesControls: [RichTextBlockPropertiesControlSAComponent]\n        }]\n      }\n    };\n    Object.freeze(this);\n  }\n\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","PropertiesControlBase","constructor","_changeDetector","_extractor","_initialized","propertiesMetadata","ngOnInit","_this","_initialize","initialize","_this2","invalidateVisuals","detectChanges","t","type","inputs","form","RichTextBlockPropertiesControlSAComponent","changeDetector","metadataExtractor","dialog","super","showCodeEditor","result","lastValueFrom","open","title","width","height","data","controls","content","afterClosed","control","setValue","selectors","standalone","features","decls","vars","consts","template","rf","ctx","encapsulation","changeDetection","RichTextBlockModel","RichTextBlockLayoutEditorMetadata","metaInfo","name","description","group","optionsMetadata","modelType","propertiesControls","Object","freeze"],"sourceRoot":""}