{"version":3,"file":"433.client.chunk.39c3d08e2f79c4251fd1.js","mappings":"yWAMO,MAAMA,EAAoC,e,EAAA,G,EAA6D,mBAAY,WAAW,oEAAsDC,qCAA7E,E,+KAA7D,qDCQjD,IAAaC,EAAb,MAkCIC,YAAYC,GA3BF,KAAAC,YAA6B,IAAIC,EAAAA,EAKjC,KAAAC,QAAuB,KAwB7BC,KAAKC,OAASL,EAASM,IAAIC,EAAAA,EAC9B,CAOMC,YAAYC,IAEZC,EAAAA,EAAAA,GAA+B,WAAYD,KAEvCE,EAAAA,EAAAA,IAAUP,KAAKD,WAEdS,aAAaR,KAAKD,SAClBC,KAAKD,QAAU,MAGnBC,KAAKC,OAAOQ,mBAAkB,KAE1BT,KAAKD,QAAUW,YAAW,IAAMV,KAAKH,YAAYc,QAAQX,KAAKY,kBAAkBC,OAAS,EAAzF,IAGX,CAKMC,oBAEN,GAlEQpB,GAAsB,UAFlCqB,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,GAAwBxB,IACU,6BAkCTyB,EAAAA,KAlCbvB,GCZb,S","sources":["webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/debounceValue/debounceValue.metadata.ts","webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/debounceValue/debounceValue.relations.ts","webpack://ng-universal-demo/../../../basic-components/src/dynamicItems/debounceValue/type.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Debounce value relations metadata loader\n */\nexport const DebounceValueRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/debounceValue.relationsMetadata')).DebounceValueRelationsEditorMetadata();\n","import {Injector, NgZone, SimpleChanges} from '@angular/core';\nimport {PureRelationsComponent, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {isPresent, nameof} from '@jscrpt/common';\nimport {Subject} from 'rxjs';\n\nimport {DebounceValueRelationsMetadataLoader} from './debounceValue.metadata';\nimport {DebounceValueRelationsOptions} from './debounceValue.options';\n\n/**\n * Debounce value relations component\n */\n@PureRelationsComponent()\n@RelationsEditorMetadata(DebounceValueRelationsMetadataLoader)\nexport class DebounceValueRelations<TValue = any> implements RelationsComponent<DebounceValueRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Subject used for emitting change in value\n     */\n    protected valueChange: Subject<void> = new Subject<void>();\n\n    /**\n     * Reference number to timeout instance\n     */\n    protected timeout: number|null = null;\n\n    /**\n     * Instance of ng zone\n     */\n    protected ngZone: NgZone;\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: DebounceValueRelationsOptions|undefined|null;\n\n    //######################### public properties - inputs/dynamic outputs #########################\n    \n    /**\n     * Value that should be debounced\n     */\n    public value: TValue|undefined|null;\n\n    //######################### constructor #########################\n    constructor(injector: Injector,)\n    {\n        this.ngZone = injector.get(NgZone);\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n    \n    /**\n     * @inheritdoc\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<DebounceValueRelations>('value') in changes)\n        {\n            if(isPresent(this.timeout))\n            {\n                clearTimeout(this.timeout);\n                this.timeout = null;\n            }\n\n            this.ngZone.runOutsideAngular(() =>\n            {\n                this.timeout = setTimeout(() => this.valueChange.next(), this.relationsOptions?.delay ?? 0) as any;\n            });\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n}","import {DebounceValueRelations} from './debounceValue.relations';\n\nexport default DebounceValueRelations;"],"names":["DebounceValueRelationsMetadataLoader","DebounceValueRelationsEditorMetadata","DebounceValueRelations","constructor","injector","valueChange","Subject","timeout","this","ngZone","get","NgZone","ngOnChanges","changes","nameof","isPresent","clearTimeout","runOutsideAngular","setTimeout","next","relationsOptions","delay","invalidateVisuals","PureRelationsComponent","RelationsEditorMetadata","Injector"],"sourceRoot":""}